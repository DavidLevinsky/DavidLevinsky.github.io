{"version":3,"sources":["webpack://vts/webpack/bootstrap","webpack://vts/./src/core/map/geodata-processor/worker-globals.js","webpack://vts/./src/core/map/geodata-processor/worker-bidi.js","webpack://vts/./src/core/map/geodata-processor/worker-font.js","webpack://vts/./src/core/map/geodata-processor/worker-text.js","webpack://vts/./src/core/map/geodata-processor/worker-style.js","webpack://vts/./src/core/map/geodata-processor/worker-message.js","webpack://vts/./src/core/map/geodata-processor/worker-pointarray.js","webpack://vts/./src/core/map/geodata-processor/worker-linestring.js","webpack://vts/./src/core/map/geodata-processor/worker-polygon.js","webpack://vts/./src/core/map/geodata-processor/worker-main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","globals","stylesheetData","stylesheetLayers","stylesheetBitmaps","stylesheetFonts","stylesheetConstants","stylesheetVariables","insidePack","directPoints","directPoint","fonts","fontsMap","fontsStorage","forceOrigin","forceScale","bboxMin","bboxMax","geocent","tileX","tileY","tileLod","tileIX","tileIY","tileSize","hitState","pixelFactor","alwaysEventInfo","metricUnits","language","groupOptimize","groupOrigin","messageBuffer","Array","messageBufferIndex","messageBufferSize","messagePackSize","signatureCounter","autoLod","featureType","groupId","disableLog","reduceMode","reduceParams","processLineLabel","useLineLabel2","lineLabelPass","clamp","min","max","vec3Normalize","a","b","e","g","Math","sqrt","vec3Cross","f","textEncoderUtf8","TextEncoder","textDecoderUtf8","TextDecoder","baseTypes","arabicTypes","isOdd","isEven","findUnequal","arr","start","j","jj","length","setValues","end","reverseValues","arr2","temp","createBidiText","str","isLTR","vertical","indices","types","dir","startLevel","strLength","ii","numBidi","charAt","charCode","charCodeAt","charType","levels","sor","eor","lastType","before","after","level","highestLevel","lowestOddLevel","ch","join","Typr","buff","bin","_bin","data","Uint8Array","offset","readFixed","numTables","readUshort","tags","obj","_data","tabs","tablesOffset","tag","readASCII","readUint","toffset","trim","parse","_tabs","_processGlyphs","gsub","llist","lookupList","flist","featureList","gsubIsolTable","gsubInitTable","gsubFinaTable","gsubMediTable","gsubRligLigaTable","fi","ti","tab","ltype","push","index","version","textureLX","textureLY","size","flags","cly","glyphs","maxp","numGlyphs","fx","fy","step","filesIndicesIndex","filesIndicesCount","files","li","fileIndex","_processGlyph","font","glyphIndex","w","h","sx","sy","plane","x","y","scale","head","unitsPerEm","hmtx","aWidth","u1","v1","u2","v2","lx","ly","readF2dot14","num","readShort","readInt","uint8","int32","readInt8","int8","int16","readUshorts","len","uint32","readUint64","String","fromCharCode","readUnicode","readBytes","readASCIIArray","ArrayBuffer","Int8Array","Int16Array","uint16","Uint16Array","Int32Array","Uint32Array","_lctf","subt","offset0","offScriptList","offFeatureList","offLookupList","scriptList","readScriptList","readFeatureList","readLookupList","count","noff","lut","readLookupTable","flag","cnt","numOfOnes","readClassDef","class","format","startGlyph","glyphCount","readValueRecord","valFmt","readCoverage","cvg","fmt","Number","POSITIVE_INFINITY","v","coverageIndex","val","indexOf","readFeatureTable","lookupCount","readScriptTable","defLangSysOff","default","readLangSysTable","langSysCount","langSysOff","reqFeature","featureCount","features","cmap","buffer","offs","tables","platformID","encodingID","noffset","id","tind","parse0","parse4","parse6","parse12","console","log","map","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCount","startCount","idDelta","idRangeOffset","glyphIdArray","firstCode","entryCount","nGroups","groups","off","startCharCode","endCharCode","startGlyphID","GPOS","covOff","coverage","valFmt1","valFmt2","ones1","ones2","pairsets","psoff","pvcount","gid2","value1","value2","val1","val2","classDef1","classDef2","class1Count","class2Count","matrix","row","GSUB","delta","newg","vals","loff","readLigatureSet","readChainSubClassSet","lset","readChainSubClassRule","rule","pps","pi","subst","lcnt","readLigature","lig","chain","nglyph","ccnt","k","fontRevision","created","modified","xMin","yMin","xMax","yMax","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","aw","lsb","lsBearing","kern","parseV1","nTables","glyph1","rval","readFormat0","pleft","nPairs","left","right","glyph2","ver","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","U","codeToGlyph","code","p0e4","p3e1","p1e0","sind","grp","_getGlyphClass","cd","getPairAdjustment","g1","g2","ltab","fl","ind","adj","c1","c2","ind1","ind2","RTable","stringToGlyphs","lj","gsubTable","gl","gls","gfonts","codes","scodes","scodesType","bidiResult","rtable","ci","t1","t2","t3","slft","srgt","ttab","rlim","rl","good","gls2","slice","codes2","gfonts2","addChar","pos","verticalShift","char","factor","spacing","index2","textVector","vertexBuffer","texcoordsBuffer","flat","planes","fontIndex","singleBuffer","up","p1","p2","fc","nx","ny","nz","chars","planeShift","factorX","factorY","n3","n2","q","qx","qy","qz","qw","tr","mat3toQuad2","dtx","dty","dx","dy","dz","lineLabelPoints","getCharVerticesCount","origin","getFontFactor","getTextLength","text","glyphsRes","res","glyph","getPathLength","points","getPathPositionAndDirection","distance","ll","getPathTextVector","shift","textDir","textStart","textEnd","nn","areTextCharactersAvailable","getFonts","getFontsStorage","getTextGlyphs","str2","substring","counter","begin","hash","getLayerExpresionValue","layer","feature","lod","depth","finalValue","getLayerPropertyValueInnerString","logError","replace","JSON","getLayerPropertyValueInner","getLayerPropertyValue","validateLayerPropertyValue","properties","substr","stylesheetLocals","pixelSize","root","v3","v4","tmpValue","getDefaultLayerPropertyValue","isArray","functionName","functionError","functionValue","getFilterResult","pow","atan2","tofixed","random","imin","smax","sin","cos","tan","asin","acos","atan","abs","round","floor","ceil","PI","parseFloat","toLowerCase","toUpperCase","mapItems","item","stops","lodScaledArray","array","currentLod","currentValue","lastLod","lastValue","valueType","newValue","inheritLayer","layerId","layerData","stylesheetLayersData","LayerToInherit","errorType","subkey","stringify","validateValue","type","arrayLength","hasUnits","vswitch","valueItem","MAX_VALUE","filter","group","fast","isSimpleValue","processLayer","copyLayer","wrong","encode","u","tmpVertexBuffer","tmpVertexBuffer2","packedEvents","packedTransferables","postPackedMessage","message","transferables","config","mapPackLoaderEvents","concat","postMessage","postGroupMessageFast","command","buffers","signature","message2","messageSize","byteLength","view","DataView","setUint8","setUint32","set","postGroupMessageDirect","buffersIndex","hitable","totalPoints","job2","oldBuffer","job","setToTmpBuffer","buffer2","buffer3","width","lineHeight","checkDPoints","pointArray","pp","pointsGroups","processPointArrayPass","style","featureIndex","zIndex","eventInfo","source","bufferSize","bufferSize2","noOverlap","visibility","culling","hoverEvent","clickEvent","drawEvent","enterEvent","leaveEvent","advancedHit","linePoints","zbufferOffset","point","pointFlat","pointColor","pointRadius","icon","iconData","color","stick","reduce","noOverlapMargin","noOverlapFactor","Float32Array","originBuffer","label","fontNames","text2","glyphsRes2","useSingleBuffer","labelData","color2","outline","align","hysteresis","labelBBox","iconBBox","pp2","center","generatePoint","pindex","processIcon","processLabel","circleSides","circleBuffer","normalBuffer","getLinePoint","l1","l2","lk","pointsBuffer","pointsBufferLength","totalLength","lengths","period","pointsVertices","bufferPoints","angle","sendIconMessage","margin","factorType","factorValue","sendLabelMessage","getOriginOffset","height","cloneBuffers","lastIndex","originOffset","offsetX","offsetY","p3","linesGlyphsRes","linesGlyphsRes2","splitIndex","maxWidth","lineWidths","textWidth","parseInt","planes2","key2","file","verticalOffset","textLength","pathLength","textCenter","posAndDir","posAndDir2","addTextOnPath","processLineStringPass","lineString","lines","line","lineLabel","lineFlat","lineColor","lineWidth","lineWidthUnits","lineStyle","lineStyleTexture","lineStyleBackground","lineLabelSize","texturedLine","widthByRatio","vv","elementIndex","index3","skipJoins","elemetBase","circleBuffer2","lineVertices","elementBuffer","lineLabelStack","vstart","vend","lineLabelPoints2","points2","distance2","vertexBase","normalBase","lineIndex","lineIndex2","segmentIndex","messageData","zOffset","state","labelType","labelColor","labelColor2","labelOutline","labelSource","labelSize","labelSpacing","labelOffset","labelReduce","labelOverlap","labelOverlapFactor","labelOverlapMargin","labelText","labelText2","singleBuffer2","originalLabelSize","labelPoints","labelPoints2","labelsPack","labelIndex","unshift","labelFiles","processPolygonLines","polygon","vertices","processLines","borders","polygonExtrude","createEmptyFeatureFromPolygon","bordersCount","allPoints","allPoints2","forceScale2","border","pointsCount","pointsCount2","points3","points4","i2","fontData","skip","decode","out","char2","char3","fontMap","makeFasterFilter","result","layers","bitmaps","bitmap","surface","polygonColor","polygonStyle","polygonStencil","polygonCulling","vertexCount","surfaceI","p4","totalFaces","vertexBuffer2","stencil","indicesBuffer","geometryBuffer","Float64Array","number","messages","reduced","getUint32","files2","lm","buffjob","exportedGeometries","featureCache","featureCacheIndex","finalFeatureCache","finalFeatureCacheIndex","finalFeatureCacheIndex2","processLayerFeaturePass","processFeatures","importance","ppi","processLayerFeature","complexProperty","top","currentIndex","currentValue2","NEGATIVE_INFINITY","tmp","isNaN","processLayerFeatureMultipass","mylayer","multiPass","selectedLayerId","selectedLayer","selectedHoverLayerId","selectedHoverLayer","hoverLayerId","hoverLayer","lastHitState","skipPack","processGroup","bbox","bboxDelta","bboxResolution","polygons","processNode","node","volume","precision","tileset","meshes","nodes","self","onmessage","dataRaw","geodata2","dataView","magic","getUint8","invPixelFactor","pixelsPerMM","invPixelsPerMM","processGeodata2","geodata","processGeodata"],"mappings":"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","file":"613b72349d2ca54e7f86.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nvar globals = {\n    stylesheetData : {},\n    stylesheetLayers : {},\n    stylesheetBitmaps : {},\n    stylesheetFonts : {},\n    stylesheetConstants : {},\n    stylesheetVariables : {},\n    insidePack : false,\n    directPoints : [],\n    directPoint : null,\n    fonts : {},\n    fontsMap : {},\n    fontsStorage : {},\n    forceOrigin : false,\n    forceScale : [1,1,1],\n    bboxMin : [0,0,0],\n    bboxMax : [1,1,1],\n    geocent : false,\n    tileX : 0,\n    tileY : 0,\n    tileLod : 0,\n    tileIX : 0,\n    tileIY : 0,\n    tileSize : 1,\n    hitState : 0,\n    pixelFactor : 1,\n    alwaysEventInfo : true,\n    metricUnits : true,\n    language : 'en',\n    groupOptimize : true,\n    groupOrigin : [0,0,0],\n    messageBuffer : new Array(65536),\n    messageBufferIndex : 0,\n    messageBufferSize : 65536,\n    messagePackSize : 0,\n    signatureCounter : 0,\n    autoLod : false,\n    featureType : null,\n    groupId : null,\n    disableLog : false,\n    reduceMode : 'scr-count4',\n    reduceParams : null,\n    processLineLabel : false,\n    useLineLabel2 : true,\n    lineLabelPass : 0\n};\n\n\nfunction clamp(value, min, max) {\n    if (value < min) {\n        value = min;\n    }\n\n    if (value > max) {\n        value = max;\n    }\n\n    return value;\n}\n\n\nfunction vec3Normalize(a, b) {\n    b || (b = a);\n    var c = a[0],\n        d = a[1],\n        e = a[2],\n        g = Math.sqrt(c * c + d * d + e * e);\n    if (g) {\n        if (g == 1) {\n            b[0] = c;\n            b[1] = d;\n            b[2] = e;\n            return b;\n        }\n    } else {\n        b[0] = 0;\n        b[1] = 0;\n        b[2] = 0;\n        return b;\n    }\n    g = 1 / g;\n    b[0] = c * g;\n    b[1] = d * g;\n    b[2] = e * g;\n    return b;\n}\n\n\nfunction vec3Length(a) {\n    var b = a[0],\n        c = a[1];\n    a = a[2];\n    return Math.sqrt(b * b + c * c + a * a);\n}\n\n\nfunction vec3Cross(a, b, c) {\n    c || (c = a);\n    var d = a[0],\n        e = a[1];\n    a = a[2];\n    var g = b[0],\n        f = b[1];\n    b = b[2];\n    c[0] = e * b - a * f;\n    c[1] = a * g - d * b;\n    c[2] = d * f - e * g;\n    return c;\n}\n\n\nfunction getHash(str) {\n    if (!str || str.length === 0) {\n        return 0;    \n    }\n\n    var hash = 0, c;\n    for (var i = 0, li = str.length; i < li; i++) {\n        c   = str.charCodeAt(i);\n        hash  = ((hash << 5) - hash) + c;\n        hash |= 0; // Convert to 32bit integer\n    }\n\n    return hash;\n}\n\n\nvar simpleFmtCall = (function obj(str, call) {\n    if (!str || str == '') {\n        return '';\n    }\n\n    var i = str.indexOf('{'), li, str2;\n\n    if (i == -1) {\n        return str;\n    } else {\n        str2 = i > 0 ? str.substring(0, i) : '';\n    }\n\n    var counter = 0;\n    var begin = -1;\n\n    for (li = str.length; i < li; i++) {\n        var c = str.charAt(i);\n\n        if (c == '{') {\n            if (counter == 0) {\n                begin = i;\n            }\n\n            counter++;\n        } else if (c == '}') {\n            counter--;\n\n            if (counter == 0) {\n                str2 += call(str.substring(begin+1, i));\n            }\n            \n        } else if (counter == 0) {\n            str2 += c;\n        }\n    }\n\n    return str2;\n});\n\n/*\nfunction copyArrayToBuffer(view, index, array) {\n    for (var i = 0, li = array.length; i < li; i++) {\n        view.setFloat32(index, array[i]); index += 4;\n    }\n\n    return index;\n}\n\nfunction copyDynamicArrayToBuffer(view, index, array) {\n    if (array) {\n        view.setUint8(index, array.length); index += 1;\n\n        for (var i = 0, li = array.length; i < li; i++) {\n            view.setFloat32(index, array[i]); index += 4;\n        }\n    } else {\n        view.setUint8(index, 0); index += 1;\n    }\n\n    return index;\n}\n\nfunction copyDynamicArrayOfArraysToBuffer(view, index, array) {\n    if (array) {\n        view.setUint16(index, array.length); index += 2;\n\n        for (var i = 0, li = array.length; i < li; i++) {\n            var subarray = array[i];\n\n            for (var j = 0, lj = array.length; j < lj; j++) {\n                view.setUint16(index, subarray[j]); index += 2;\n            }\n        }\n    } else {\n        view.setUint16(index, 0); index += 2;\n    }\n\n    return index;\n}\n\nfunction getSizeOfArrayOfArrays(array) {\n    var size = 0;\n\n    for (var i = 0, li = array.length; i < li; i++) {\n        size += array[i].length;\n    }\n\n    return size;\n}\n*/\n\n//var textEncoderUtf8 = null; //(typeof TextEncoder !== 'undefined') ? (new TextEncoder('utf-8')) : null;\nvar textEncoderUtf8 = (typeof TextEncoder !== 'undefined') ? (new TextEncoder('utf-8')) : null;\n\nfunction stringToUint8Array(str) {\n    if (textEncoderUtf8) {\n        return textEncoderUtf8.encode(str);\n    } else {\n\n        /*\n        console.log('' + (str.length * 2));\n\n        var buffer = new ArrayBuffer(str.length * 2);\n        var view = new Uint16Array(buffer);\n        for (var i = 0, li = str.length; i < li; i++) {\n            view[i] = str.charCodeAt(i);\n        }\n        return new Uint8Array(buffer);\n        */\n\n\n        // 1. Let S be the DOMString value.\n        var s = String(str);\n\n        // 2. Let n be the length of S.\n        var n = s.length;\n\n        // 3. Initialize i to 0.\n        var i = 0;\n\n        // 4. Initialize U to be an empty sequence of Unicode characters.\n        var u = [];\n\n        // 5. While i < n:\n        while (i < n) {\n\n          // 1. Let c be the code unit in S at index i.\n          var c = s.charCodeAt(i);\n\n          // 2. Depending on the value of c:\n\n          // c < 0xD800 or c > 0xDFFF\n          if (c < 0xD800 || c > 0xDFFF) {\n            // Append to U the Unicode character with code point c.\n            u.push(c);\n          }\n\n          // 0xDC00 ≤ c ≤ 0xDFFF\n          else if (0xDC00 <= c && c <= 0xDFFF) {\n            // Append to U a U+FFFD REPLACEMENT CHARACTER.\n            u.push(0xFFFD);\n          }\n\n          // 0xD800 ≤ c ≤ 0xDBFF\n          else if (0xD800 <= c && c <= 0xDBFF) {\n            // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n            // CHARACTER.\n            if (i === n - 1) {\n              u.push(0xFFFD);\n            }\n            // 2. Otherwise, i < n−1:\n            else {\n              // 1. Let d be the code unit in S at index i+1.\n              var d = s.charCodeAt(i + 1);\n\n              // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n              if (0xDC00 <= d && d <= 0xDFFF) {\n                // 1. Let a be c & 0x3FF.\n                var a = c & 0x3FF;\n\n                // 2. Let b be d & 0x3FF.\n                var b = d & 0x3FF;\n\n                // 3. Append to U the Unicode character with code point\n                // 2^16+2^10*a+b.\n                u.push(0x10000 + (a << 10) + b);\n\n                // 4. Set i to i+1.\n                i += 1;\n              }\n\n              // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n              // U+FFFD REPLACEMENT CHARACTER.\n              else  {\n                u.push(0xFFFD);\n              }\n            }\n          }\n\n          // 3. Set i to i+1.\n          i += 1;\n        }\n\n        // 6. Return U.\n        return new Uint8Array((new Uint32Array(u)).buffer);        \n    }\n}\n\n/*\nvar textDecoderUtf8 = TextEncoder ? (new TextDecoder('utf-8')) : null;\n\nfunction unint8ArrayToString(array) {\n    if (textDecoderUtf8) {\n        return textDecoderUtf8.decode(array);\n    } else {\n        return String.fromCharCode.apply(null, new Uint8Array(array.buffer));\n    }\n}\n*/\n\n\nvar textDecoderUtf8 = (typeof TextDecoder !== 'undefined') ? (new TextDecoder('utf-8')) : null;\n\nfunction unint8ArrayToString(array, skip) {\n    if (textDecoderUtf8 && !skip) {\n        return textDecoderUtf8.decode(array);\n    } else {\n        // return String.fromCharCode.apply(null, new Uint8Array(array.buffer)); //works only for small strings\n\n        var s = '';\n        //var code_points2 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n        var code_points2 = new Uint8Array(array.byteLength);\n        code_points2.set(array);\n        var code_points = new Uint32Array(code_points2.buffer);\n\n        for (var i = 0, li = code_points.length; i < li; ++i) {\n          var cp = code_points[i];\n          if (cp <= 0xFFFF) {\n            s += String.fromCharCode(cp);\n          } else {\n            cp -= 0x10000;\n            s += String.fromCharCode((cp >> 10) + 0xD800,\n                                     (cp & 0x3FF) + 0xDC00);\n          }\n        }\n        return s;\n\n    }\n}\n\n\nfunction Utf8ArrayToStr(array, skip) {  //more universal\n    if (textDecoderUtf8 && !skip) {\n        return textDecoderUtf8.decode(array);\n    } else {\n\n        var out, i, len, c;\n        var char2, char3;\n\n        array = new Uint8Array(array);\n\n        out = \"\";\n        len = array.length;\n        i = 0;\n\n        while(i < len) {\n            c = array[i++];\n\n            switch(c >> 4) { \n              case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n                // 0xxxxxxx\n                out += String.fromCharCode(c);\n                break;\n              case 12: case 13:\n                // 110x xxxx   10xx xxxx\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                break;\n              case 14:\n                // 1110 xxxx  10xx xxxx  10xx xxxx\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(((c & 0x0F) << 12) |\n                               ((char2 & 0x3F) << 6) |\n                               ((char3 & 0x3F) << 0));\n                break;\n            }\n        }\n\n        return out;\n    }\n}\n\nexport {globals, clamp, vec3Normalize, vec3Length, vec3Cross, simpleFmtCall, getHash, stringToUint8Array, unint8ArrayToString, Utf8ArrayToStr};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Character types for symbols from 0000 to 00FF.\n// Source: ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar baseTypes = [\n  'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S',\n  'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN',\n  'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET',\n  'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS',\n  'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON',\n  'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n  'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n  'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L',\n  'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n  'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON',\n  'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN',\n  'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN',\n  'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET',\n  'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON',\n  'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L',\n  'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n  'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n  'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n  'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n  'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'\n];\n\n// Character types for symbols from 0600 to 06FF.\n// Source: ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt\n// Note that 061D does not exist in the Unicode standard (see\n// http://unicode.org/charts/PDF/U0600.pdf), so we replace it with an\n// empty string and issue a warning if we encounter this character. The\n// empty string is required to properly index the items after it.\nvar arabicTypes = [\n  'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL',\n  'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM',\n  'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM',\n  'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM',\n  'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN',\n  'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n  'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN',\n  'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM',\n  'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN',\n  'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'\n];\n\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\n\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\n\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\n\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\n\nfunction reverseValues(arr, arr2, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    temp = arr2[i];\n    arr2[i] = arr2[j];\n    arr2[j] = temp;\n  }\n}\n\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    indices: indices,\n    types : types,\n    dir: (vertical ? 'ttb' : (isLTR ? 'ltr' : 'rtl')),\n  };\n}\n\n// These are used in bidi(), which is called frequently. We re-use them on\n// each call to avoid unnecessary allocations.\nvar chars = [];\nvar types = [];\nvar indices = [];\n\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n\n  // Get types and fill arrays\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    indices[i] = i;\n\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        //console.log('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n\n  // Detect the bidi method\n  // - If there are no rtl characters then no bidi needed\n  // - If less than 30% chars are rtl then string is primarily ltr\n  // - If more than 30% chars are rtl then string is primarily rtl\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n\n  if (startLevel === -1) {\n    if ((numBidi / strLength) < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n\n  /*\n   X1-X10: skip most of this, since we are NOT doing the embeddings.\n   */\n  var e = (isOdd(startLevel) ? 'R' : 'L');\n  var sor = e;\n  var eor = sor;\n\n  /*\n   W1. Examine each non-spacing mark (NSM) in the level run, and change the\n   type of the NSM to the type of the previous character. If the NSM is at the\n   start of the level run, it will get the type of sor.\n   */\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n\n  /*\n   W2. Search backwards from each instance of a European number until the\n   first strong type (R, L, AL, or sor) is found.  If an AL is found, change\n   the type of the European number to Arabic number.\n   */\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = (lastType === 'AL') ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n\n  /*\n   W3. Change all ALs to R.\n   */\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n\n  /*\n   W4. A single European separator between two European numbers changes to a\n   European number. A single common separator between two numbers of the same\n   type changes to that type:\n   */\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' &&\n        (types[i - 1] === 'EN' || types[i - 1] === 'AN') &&\n        types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n\n  /*\n   W5. A sequence of European terminators adjacent to European numbers changes\n   to all European numbers:\n   */\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      // do before\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      // do after\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n\n  /*\n   W6. Otherwise, separators and terminators change to Other Neutral:\n   */\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n\n  /*\n   W7. Search backwards from each instance of a European number until the\n   first strong type (R, L, or sor) is found. If an L is found,  then change\n   the type of the European number to L.\n   */\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = ((lastType === 'L') ? 'L' : 'EN');\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n\n  /*\n   N1. A sequence of neutrals takes the direction of the surrounding strong\n   text if the text on both sides has the same direction. European and Arabic\n   numbers are treated as though they were R. Start-of-level-run (sor) and\n   end-of-level-run (eor) are used at level run boundaries.\n   */\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1; // reset to end (-1 so next iteration is ok)\n    }\n  }\n\n  /*\n   N2. Any remaining neutrals take the embedding direction.\n   */\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n\n  /*\n   I1. For all characters with an even (left-to-right) embedding direction,\n   those of type R go up one level and those of type AN or EN go up two\n   levels.\n   I2. For all characters with an odd (right-to-left) embedding direction,\n   those of type L, EN or AN go up one level.\n   */\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else { // isOdd\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n\n  /*\n   L1. On each line, reset the embedding level of the following characters to\n   the paragraph embedding level:\n\n   segment separators,\n   paragraph separators,\n   any sequence of whitespace characters preceding a segment separator or\n   paragraph separator, and any sequence of white space characters at the end\n   of the line.\n   */\n\n  // don't bother as text is only single line\n\n  /*\n   L2. From the highest level found in the text to the lowest odd level on\n   each line, reverse any contiguous sequence of characters that are at that\n   level or higher.\n   */\n\n  // find highest level & lowest odd level\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n\n  // now reverse between those limits\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    // find segments to reverse\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, indices, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, indices, start, levels.length);\n    }\n  }\n\n  /*\n   L3. Combining marks applied to a right-to-left base character will at this\n   point precede their base character. If the rendering engine expects them to\n   follow the base characters in the final display process, then the ordering\n   of the marks and the base character must be reversed.\n   */\n\n  // don't bother for now\n\n  /*\n   L4. A character that possesses the mirrored property as specified by\n   Section 4.7, Mirrored, must be depicted by a mirrored glyph if the resolved\n   directionality of that character is R.\n   */\n\n  // don't mirror as characters are already mirrored in the pdf\n\n  // Finally, return string\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\n\nexport {\n  bidi\n};\n\n","\nimport {bidi as bidi_} from './worker-bidi.js';\n\n\n//get rid of compiler mess\nvar bidi = bidi_;\n\n\nvar Typr = {};\n\nTypr.parse = function(buff) {\n    var bin = Typr._bin;\n    var data = new Uint8Array(buff);\n    var offset = 0;\n    \n    var sfnt_version = bin.readFixed(data, offset);\n    offset += 4;\n    var numTables = bin.readUshort(data, offset);\n    offset += 2;\n    var searchRange = bin.readUshort(data, offset);\n    offset += 2;\n    var entrySelector = bin.readUshort(data, offset);\n    offset += 2;\n    var rangeShift = bin.readUshort(data, offset);\n    offset += 2;\n    \n    var tags = [\n        \"cmap\",\n        \"head\",\n        \"hhea\",\n        \"maxp\",\n        \"hmtx\",\n        //\"name\",\n        //\"OS/2\",\n        //\"post\",\n        \n        //\"cvt\",\n        //\"fpgm\",\n        //\"loca\",\n        //\"glyf\",\n        \"kern\",\n        \n        //\"prep\"\n        //\"gasp\"\n        \n        \"GPOS\",\n        \"GSUB\"\n        //\"VORG\",\n        ];\n    \n    var obj = {_data:data};\n    //console.log(sfnt_version, numTables, searchRange, entrySelector, rangeShift);\n    \n    var tabs = {};\n    var tablesOffset = 0;\n    \n    for(var i=0; i<numTables; i++) {\n        var tag = bin.readASCII(data, offset, 4);   offset += 4;\n        var checkSum = bin.readUint(data, offset);  offset += 4;\n        var toffset = bin.readUint(data, offset);   offset += 4;\n        var length = bin.readUint(data, offset);    offset += 4;\n        tabs[tag] = {offset:toffset, length:length};\n        tablesOffset = toffset + length;\n        //if(tags.indexOf(tag)==-1) console.log(\"unknown tag\", tag);\n    }\n    \n    for(var i=0; i< tags.length; i++) {\n        var t = tags[i];\n        //console.log(t);\n        //if(tabs[t]) console.log(t, tabs[t].offset, tabs[t].length);\n        if(tabs[t]) obj[t.trim()] = Typr[t.trim()].parse(data, tabs[t].offset, tabs[t].length, obj);\n    }\n\n    obj._tabs = tabs;\n\n    Typr._processGlyphs(data, tablesOffset, tabs, obj);\n\n    //get tables\n    var gsub = obj['GSUB'];\n    if (gsub) {\n        var llist = gsub.lookupList, flist = gsub.featureList;\n\n        obj.gsubIsolTable = [];\n        obj.gsubInitTable = [];\n        obj.gsubFinaTable = [];\n        obj.gsubMediTable = [];\n\n        obj.gsubRligLigaTable = [];\n\n        for(var fi = 0; fi < flist.length; fi++) {\n            var tag = flist[fi].tag;\n\n            switch (tag) {\n                case 'isol':\n                case 'init':\n                case 'fina':\n                case 'medi':\n\n                    for(var ti = 0; ti < flist[fi].tab.length; ti++) {\n                        var tab = llist[flist[fi].tab[ti]];\n                        \n                        if(tab.ltype == 1) {\n                            switch (tag) {\n                                case 'isol': obj.gsubIsolTable.push(tab.tabs); break;\n                                case 'init': obj.gsubInitTable.push(tab.tabs); break;\n                                case 'fina': obj.gsubFinaTable.push(tab.tabs); break;\n                                case 'medi': obj.gsubMediTable.push(tab.tabs); break;\n                            }\n                        }\n                    }\n\n                    break;\n\n                case 'rlig':\n                case 'liga':\n\n                    for(var ti = 0; ti < flist[fi].tab.length; ti++) {\n                        var tab = llist[flist[fi].tab[ti]];\n                        \n                        if(tab.ltype == 4) {\n                            obj.gsubRligLigaTable.push(tab.tabs);\n                        }\n                    }\n\n                    break;\n            }\n\n        }\n    }\n   \n    return obj;\n}\n\nTypr._processGlyphs = function(data, index, tabs, obj) {\n    var version = data[index]; index += 1;\n    var textureLX = (data[index] << 8) | (data[index+1]); index += 2;\n    var textureLY = (data[index] << 8) | (data[index+1]); index += 2;\n    var size = data[index]; index += 1;\n    var flags = data[index]; index += 1;\n\n    obj.version = version;\n    obj.textureLX = textureLX;\n    obj.textureLY = textureLY;\n    obj.size = size;\n    obj.cly = size * 1.5;\n    obj.flags = flags;\n\n    var glyphs = new Array(obj.maxp.numGlyphs);\n    var fx = 1.0 / textureLX, fy = 1.0 / textureLY;\n    var step = (textureLX > 256) ? 7 : 6;\n\n    var filesIndicesIndex = index + obj.maxp.numGlyphs * step;\n    var filesIndicesCount = (data[filesIndicesIndex] << 8) | data[filesIndicesIndex+1];\n    var files = new Array(filesIndicesCount);\n\n    filesIndicesIndex += 2;\n\n    for (var i = 0, li = filesIndicesCount; i < li; i++) {\n        files[i] = (data[filesIndicesIndex+i*2] << 8) | data[filesIndicesIndex+i*2+1];\n    }\n\n    var fileIndex = 0;\n\n    for (i = 0, li = obj.maxp.numGlyphs; i < li; i++) {\n        if (i == files[fileIndex]) {\n            fileIndex++;\n        }\n\n        glyphs[i] = Typr._processGlyph(data, index, fx, fy, textureLX, obj, i, fileIndex);\n        index += step;\n    }\n\n    obj.glyphs = glyphs;\n}\n\nTypr._processGlyph = function(data, index, fx, fy, textureLX, font, glyphIndex, fileIndex) {\n    var value = (data[index] << 24) | (data[index+1] << 16) | (data[index+2] << 8) | (data[index+3]);\n\n    // w 6bit | h 6bit | sx sign 1bit | abs sx 6bit | sy sign 1bit | abs sy 6bit | plane 2bit \n    var w = (value >> 22) & 63;\n    var h = (value >> 16) & 63;\n    var sx = ((value >> 9) & 63) * (((value >> 15) & 1) ? -1 : 1);\n    var sy = -((value >> 2) & 63) * (((value >> 8) & 1) ? -1 : 1);\n    var plane = (value & 3) + (fileIndex * 4);\n\n    if (textureLX > 256) {\n        value = (data[index+4] << 16) | (data[index+5] << 8) | (data[index+6]);\n    } else {\n        value = (data[index+4] << 8) | (data[index+5]);\n    }    \n\n    var scale = ((font.size/0.75) / font.head.unitsPerEm) * 0.75;\n    var x, y, step = font.hmtx.aWidth[glyphIndex] * scale;\n\n    //store glyph position\n    switch (textureLX) {\n        case 2048: // x 11bit | y 11bit\n            x = ((value >> 11) & 2047), y = (value & 2047); break;\n                   \n        case 1024: // x 10bit | y 10bit\n            x = ((value >> 10) & 1023), y = (value & 1023); break;\n\n        case 512:  // x 9bit | y 9bit\n            x = ((value >> 9) & 511), y = (value & 511); break;\n\n        default:   // x 8bit | y 8bit\n            x = ((value >> 8) & 255), y = (value & 255); break;\n    }\n\n    return {\n        u1 : (x) * fx,\n        v1 : (y * fy) + plane,\n        u2 : (x + w) * fx,\n        v2 : ((y + h) * fy) + plane,\n        lx : w,\n        ly : h,\n        sx : sx, \n        sy : sy, \n        step : (step), \n        plane: plane\n    };\n}\n\nTypr._tabOffset = function(data, tab) {\n    var bin = Typr._bin;\n    var numTables = bin.readUshort(data, 4);\n    var offset = 12;\n    for(var i=0; i<numTables; i++) {\n        var tag = bin.readASCII(data, offset, 4);   offset += 4;\n        var checkSum = bin.readUint(data, offset);  offset += 4;\n        var toffset = bin.readUint(data, offset);   offset += 4;\n        var length = bin.readUint(data, offset);    offset += 4;\n        if(tag==tab) return toffset;\n    }\n    return 0;\n}\n\n\n\n\nTypr._bin = {\n    readFixed : function(data, o) {\n        return ((data[o]<<8) | data[o+1]) +  (((data[o+2]<<8)|data[o+3])/(256*256+4));\n    },\n\n    readF2dot14 : function(data, o) {\n        var num = Typr._bin.readShort(data, o);\n        return num / 16384;\n        \n        var intg = (num >> 14), frac = ((num & 0x3fff)/(0x3fff+1));\n        return (intg>0) ? (intg+frac) : (intg-frac);\n    },\n\n    readInt : function(buff, p) {\n        //if(p>=buff.length) throw \"error\";\n        var a = Typr._bin.t.uint8;\n        a[0] = buff[p+3];\n        a[1] = buff[p+2];\n        a[2] = buff[p+1];\n        a[3] = buff[p];\n        return Typr._bin.t.int32[0];\n    },\n    \n    readInt8 : function(buff, p) {\n        //if(p>=buff.length) throw \"error\";\n        var a = Typr._bin.t.uint8;\n        a[0] = buff[p];\n        return Typr._bin.t.int8[0];\n    },\n\n    readShort : function(buff, p) {\n        //if(p>=buff.length) throw \"error\";\n        var a = Typr._bin.t.uint8;\n        a[1] = buff[p]; a[0] = buff[p+1];\n        return Typr._bin.t.int16[0];\n    },\n\n    readUshort : function(buff, p) {\n        //if(p>=buff.length) throw \"error\";\n        return (buff[p]<<8) | buff[p+1];\n    },\n\n    readUshorts : function(buff, p, len) {\n        var arr = [];\n        for(var i=0; i<len; i++) arr.push(Typr._bin.readUshort(buff, p+i*2));\n        return arr;\n    },\n\n    readUint : function(buff, p) {\n        //if(p>=buff.length) throw \"error\";\n        var a = Typr._bin.t.uint8;\n        a[3] = buff[p];  a[2] = buff[p+1];  a[1] = buff[p+2];  a[0] = buff[p+3];\n        return Typr._bin.t.uint32[0];\n    },\n\n    readUint64 : function(buff, p) {\n        //if(p>=buff.length) throw \"error\";\n        return (Typr._bin.readUint(buff, p)*(0xffffffff+1)) + Typr._bin.readUint(buff, p+4);\n    },\n\n    readASCII : function(buff, p, l) {   // l : length in Characters (not Bytes)\n        //if(p>=buff.length) throw \"error\";\n        var s = \"\";\n        for(var i = 0; i < l; i++) s += String.fromCharCode(buff[p+i]);\n        return s;\n    },\n\n    readUnicode : function(buff, p, l) {\n        //if(p>=buff.length) throw \"error\";\n        var s = \"\";\n        for(var i = 0; i < l; i++)  \n        {\n            var c = (buff[p++]<<8) | buff[p++];\n            s += String.fromCharCode(c);\n        }\n        return s;\n    },\n\n    readBytes : function(buff, p, l) {\n        //if(p>=buff.length) throw \"error\";\n        var arr = [];\n        for(var i=0; i<l; i++) arr.push(buff[p+i]);\n        return arr;\n    },\n\n    readASCIIArray : function(buff, p, l) {  // l : length in Characters (not Bytes)\n        //if(p>=buff.length) throw \"error\";\n        var s = [];\n        for(var i = 0; i < l; i++)  \n            s.push(String.fromCharCode(buff[p+i]));\n        return s;\n    }\n};\n\nTypr._bin.t = {\n    buff: new ArrayBuffer(8),\n};\nTypr._bin.t.int8   = new Int8Array  (Typr._bin.t.buff);\nTypr._bin.t.uint8  = new Uint8Array (Typr._bin.t.buff);\nTypr._bin.t.int16  = new Int16Array (Typr._bin.t.buff);\nTypr._bin.t.uint16 = new Uint16Array(Typr._bin.t.buff);\nTypr._bin.t.int32  = new Int32Array (Typr._bin.t.buff);\nTypr._bin.t.uint32 = new Uint32Array(Typr._bin.t.buff);\n\n\n\n\n\n// OpenType Layout Common Table Formats\n\nTypr._lctf = {};\n\nTypr._lctf.parse = function(data, offset, length, font, subt) {\n    var bin = Typr._bin;\n    var obj = {};\n    var offset0 = offset;\n    var tableVersion = bin.readFixed(data, offset);  offset += 4;\n    \n    var offScriptList  = bin.readUshort(data, offset);  offset += 2;\n    var offFeatureList = bin.readUshort(data, offset);  offset += 2;\n    var offLookupList  = bin.readUshort(data, offset);  offset += 2;\n    \n    \n    obj.scriptList  = Typr._lctf.readScriptList (data, offset0 + offScriptList);\n    obj.featureList = Typr._lctf.readFeatureList(data, offset0 + offFeatureList);\n    obj.lookupList  = Typr._lctf.readLookupList (data, offset0 + offLookupList, subt);\n    \n    return obj;\n}\n\nTypr._lctf.readLookupList = function(data, offset, subt) {\n    var bin = Typr._bin;\n    var offset0 = offset;\n    var obj = [];\n    var count = bin.readUshort(data, offset);  offset+=2;\n\n    for(var i=0; i<count; i++) \n    {\n        var noff = bin.readUshort(data, offset);  offset+=2;\n        var lut = Typr._lctf.readLookupTable(data, offset0 + noff, subt);\n        obj.push(lut);\n    }\n    return obj;\n}\n\nTypr._lctf.readLookupTable = function(data, offset, subt) {\n    //console.log(\"Parsing lookup table\", offset);\n    var bin = Typr._bin;\n    var offset0 = offset;\n    var obj = {tabs:[]};\n    \n    obj.ltype = bin.readUshort(data, offset);  offset+=2;\n    obj.flag  = bin.readUshort(data, offset);  offset+=2;\n    var cnt   = bin.readUshort(data, offset);  offset+=2;\n    \n    for(var i=0; i<cnt; i++) {\n        var noff = bin.readUshort(data, offset);  offset+=2;\n        var tab = subt(data, obj.ltype, offset0 + noff);\n        //console.log(obj.type, tab);\n        obj.tabs.push(tab);\n    }\n    return obj;\n}\n\nTypr._lctf.numOfOnes = function(n) {\n    var num = 0;\n    for(var i=0; i<32; i++) if(((n>>>i)&1) != 0) num++;\n    return num;\n}\n\nTypr._lctf.readClassDef = function(data, offset) {\n    var bin = Typr._bin;\n    var obj = { start:[], end:[], class:[] };\n    var format = bin.readUshort(data, offset);  offset+=2;\n\n    if(format==1) {\n        var startGlyph  = bin.readUshort(data, offset);  offset+=2;\n        var glyphCount  = bin.readUshort(data, offset);  offset+=2;\n        for(var i=0; i<glyphCount; i++) {\n            obj.start.push(startGlyph+i);\n            obj.end  .push(startGlyph+i);\n            obj.class.push(bin.readUshort(data, offset));  offset+=2;\n        }\n    }\n\n    if(format==2) {\n        var count = bin.readUshort(data, offset);  offset+=2;\n        for(var i=0; i<count; i++) {\n            obj.start.push(bin.readUshort(data, offset));  offset+=2;\n            obj.end  .push(bin.readUshort(data, offset));  offset+=2;\n            obj.class.push(bin.readUshort(data, offset));  offset+=2;\n        }\n    }\n    return obj;\n}\n\nTypr._lctf.readValueRecord = function(data, offset, valFmt) {\n    var bin = Typr._bin;\n    var arr = [];\n    arr.push( (valFmt&1) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&1) ? 2 : 0;\n    arr.push( (valFmt&2) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&2) ? 2 : 0;\n    arr.push( (valFmt&4) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&4) ? 2 : 0;\n    arr.push( (valFmt&8) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&8) ? 2 : 0;\n    return arr;\n}\n\nTypr._lctf.readCoverage = function(data, offset) {\n    var bin = Typr._bin;\n    var cvg = {};\n    cvg.fmt   = bin.readUshort(data, offset);  offset+=2;\n    var count = bin.readUshort(data, offset);  offset+=2;\n    //console.log(\"parsing coverage\", offset-4, format, count);\n    if(cvg.fmt==1) cvg.tab = bin.readUshorts(data, offset, count); \n    if(cvg.fmt==2) cvg.tab = bin.readUshorts(data, offset, count*3);\n\n    //get min,max\n\n    var min = Number.POSITIVE_INFINITY, max = 0;\n    var tab = cvg.tab;\n\n    if(cvg.fmt==1) {\n\n        for(var i=0; i<tab.length; i++) {\n            var v = tab[i];\n            if (v > max) max = v;\n            if (v < min) min = v;\n        }\n    }\n\n    if(cvg.fmt==2) {\n        for(var i=0; i<tab.length; i+=3) {\n            var start = tab[i], end = tab[i+1];\n            if (start > max) max = start;\n            if (start < min) min = start;\n            if (end > max) max = end;\n            if (end < min) min = end;\n        }\n    }\n\n    cvg.min = min;\n    cvg.max = max;\n\n    return cvg;\n}\n\nTypr._lctf.coverageIndex = function(cvg, val) {\n    if (val < cvg.min || val > cvg.max) {\n        return -1;\n    }\n\n    var tab = cvg.tab;\n    if(cvg.fmt==1) return tab.indexOf(val);\n    \n    for(var i=0; i<tab.length; i+=3) {\n        var start = tab[i], end = tab[i+1], index = tab[i+2];\n        if(start<=val && val<=end) return index + (val-start);\n    }\n    return -1;\n}\n\nTypr._lctf.readFeatureList = function(data, offset) {\n    var bin = Typr._bin;\n    var offset0 = offset;\n    var obj = [];\n    \n    var count = bin.readUshort(data, offset);  offset+=2;\n    \n    for(var i=0; i<count; i++) {\n        var tag = bin.readASCII(data, offset, 4);  offset+=4;\n        var noff = bin.readUshort(data, offset);  offset+=2;\n        obj.push({tag: tag.trim(), tab:Typr._lctf.readFeatureTable(data, offset0 + noff)});\n    }\n    return obj;\n}\n\nTypr._lctf.readFeatureTable = function(data, offset) {\n    var bin = Typr._bin;\n    \n    var featureParams = bin.readUshort(data, offset);  offset+=2;   // = 0\n    var lookupCount = bin.readUshort(data, offset);  offset+=2;\n    \n    var indices = [];\n    for(var i=0; i<lookupCount; i++) indices.push(bin.readUshort(data, offset+2*i));\n    return indices;\n}\n\n\nTypr._lctf.readScriptList = function(data, offset) {\n    var bin = Typr._bin;\n    var offset0 = offset;\n    var obj = {};\n    \n    var count = bin.readUshort(data, offset);  offset+=2;\n    \n    for(var i=0; i<count; i++) {\n        var tag = bin.readASCII(data, offset, 4);  offset+=4;\n        var noff = bin.readUshort(data, offset);  offset+=2;\n        obj[tag.trim()] = Typr._lctf.readScriptTable(data, offset0 + noff);\n    }\n    return obj;\n}\n\nTypr._lctf.readScriptTable = function(data, offset) {\n    var bin = Typr._bin;\n    var offset0 = offset;\n    var obj = {};\n    \n    var defLangSysOff = bin.readUshort(data, offset);  offset+=2;\n    obj.default = Typr._lctf.readLangSysTable(data, offset0 + defLangSysOff);\n    \n    var langSysCount = bin.readUshort(data, offset);  offset+=2;\n    \n    for(var i=0; i<langSysCount; i++) {\n        var tag = bin.readASCII(data, offset, 4);  offset+=4;\n        var langSysOff = bin.readUshort(data, offset);  offset+=2;\n        obj[tag.trim()] = Typr._lctf.readLangSysTable(data, offset0 + langSysOff);\n    }\n    return obj;\n}\n\nTypr._lctf.readLangSysTable = function(data, offset) {\n    var bin = Typr._bin;\n    var obj = {};\n    \n    var lookupOrder = bin.readUshort(data, offset);  offset+=2;\n    //if(lookupOrder!=0)  throw \"lookupOrder not 0\";\n    obj.reqFeature = bin.readUshort(data, offset);  offset+=2;\n    //if(obj.reqFeature != 0xffff) throw \"reqFeatureIndex != 0xffff\";\n    \n    //console.log(lookupOrder, obj.reqFeature);\n    \n    var featureCount = bin.readUshort(data, offset);  offset+=2;\n    obj.features = bin.readUshorts(data, offset, featureCount);\n    return obj;\n}\n\n\nTypr.cmap = {};\nTypr.cmap.parse = function(data, offset, length) {\n    data = new Uint8Array(data.buffer, offset, length);\n    offset = 0;\n\n    var offset0 = offset;\n    var bin = Typr._bin;\n    var obj = {};\n    var version   = bin.readUshort(data, offset);  offset += 2;\n    var numTables = bin.readUshort(data, offset);  offset += 2;\n    \n    //console.log(version, numTables);\n    \n    var offs = [];\n    obj.tables = [];\n    \n    \n    for(var i=0; i<numTables; i++) {\n        var platformID = bin.readUshort(data, offset);  offset += 2;\n        var encodingID = bin.readUshort(data, offset);  offset += 2;\n        var noffset = bin.readUint(data, offset);       offset += 4;\n        \n        var id = \"p\"+platformID+\"e\"+encodingID;\n        \n        //console.log(\"cmap subtable\", platformID, encodingID, noffset);\n                \n        var tind = offs.indexOf(noffset);\n        \n        if(tind==-1) {\n            tind = obj.tables.length;\n            var subt;\n            offs.push(noffset);\n            var format = bin.readUshort(data, noffset);\n            if     (format== 0) subt = Typr.cmap.parse0(data, noffset);\n            else if(format== 4) subt = Typr.cmap.parse4(data, noffset);\n            else if(format== 6) subt = Typr.cmap.parse6(data, noffset);\n            else if(format==12) subt = Typr.cmap.parse12(data,noffset);\n            else console.log(\"unknown format: \"+format, platformID, encodingID, noffset);\n            obj.tables.push(subt);\n        }\n        \n        if(obj[id]!=null) throw \"multiple tables for one platform+encoding\";\n        obj[id] = tind;\n    }\n    return obj;\n}\n\nTypr.cmap.parse0 = function(data, offset) {\n    var bin = Typr._bin;\n    var obj = {};\n    obj.format = bin.readUshort(data, offset);  offset += 2;\n    var len    = bin.readUshort(data, offset);  offset += 2;\n    var lang   = bin.readUshort(data, offset);  offset += 2;\n    obj.map = [];\n    for(var i=0; i<len-6; i++) obj.map.push(data[offset+i]);\n    return obj;\n}\n\nTypr.cmap.parse4 = function(data, offset) {\n    var bin = Typr._bin;\n    var offset0 = offset;\n    var obj = {};\n    \n    obj.format = bin.readUshort(data, offset);  offset+=2;\n    var length = bin.readUshort(data, offset);  offset+=2;\n    var language = bin.readUshort(data, offset);  offset+=2;\n    var segCountX2 = bin.readUshort(data, offset);  offset+=2;\n    var segCount = segCountX2/2;\n    obj.searchRange = bin.readUshort(data, offset);  offset+=2;\n    obj.entrySelector = bin.readUshort(data, offset);  offset+=2;\n    obj.rangeShift = bin.readUshort(data, offset);  offset+=2;\n    obj.endCount   = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n    offset+=2;\n    obj.startCount = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n    obj.idDelta = [];\n    for(var i=0; i<segCount; i++) {obj.idDelta.push(bin.readShort(data, offset));  offset+=2;}\n    obj.idRangeOffset = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n    obj.glyphIdArray = [];\n    while(offset< offset0+length) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n    return obj;\n}\n\nTypr.cmap.parse6 = function(data, offset) {\n    var bin = Typr._bin;\n    var offset0 = offset;\n    var obj = {};\n    \n    obj.format = bin.readUshort(data, offset);  offset+=2;\n    var length = bin.readUshort(data, offset);  offset+=2;\n    var language = bin.readUshort(data, offset);  offset+=2;\n    obj.firstCode = bin.readUshort(data, offset);  offset+=2;\n    var entryCount = bin.readUshort(data, offset);  offset+=2;\n    obj.glyphIdArray = [];\n    for(var i=0; i<entryCount; i++) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n    \n    return obj;\n}\n\nTypr.cmap.parse12 = function(data, offset) {\n    var bin = Typr._bin;\n    var offset0 = offset;\n    var obj = {};\n    \n    obj.format = bin.readUshort(data, offset);  offset+=2;\n    offset += 2;\n    var length = bin.readUint(data, offset);  offset+=4;\n    var lang   = bin.readUint(data, offset);  offset+=4;\n    var nGroups= bin.readUint(data, offset);  offset+=4;\n    obj.groups = [];\n    \n    for(var i=0; i<nGroups; i++) {\n        var off = offset + i * 12;\n        var startCharCode = bin.readUint(data, off+0);\n        var endCharCode   = bin.readUint(data, off+4);\n        var startGlyphID  = bin.readUint(data, off+8);\n        obj.groups.push([  startCharCode, endCharCode, startGlyphID  ]);\n    }\n    return obj;\n}\n\n\n\nTypr.GPOS = {};\nTypr.GPOS.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GPOS.subt);  }\n\n\n\nTypr.GPOS.subt = function(data, ltype, offset) { // lookup type\n    if(ltype!=2) return null;\n    \n    var bin = Typr._bin, offset0 = offset, tab = {};\n    \n    tab.format  = bin.readUshort(data, offset);  offset+=2;\n    var covOff  = bin.readUshort(data, offset);  offset+=2;\n    tab.coverage = Typr._lctf.readCoverage(data, covOff+offset0);\n    tab.valFmt1 = bin.readUshort(data, offset);  offset+=2;\n    tab.valFmt2 = bin.readUshort(data, offset);  offset+=2;\n    var ones1 = Typr._lctf.numOfOnes(tab.valFmt1);\n    var ones2 = Typr._lctf.numOfOnes(tab.valFmt2);\n\n    if(tab.format==1) {\n        tab.pairsets = [];\n        var count = bin.readUshort(data, offset);  offset+=2;\n        \n        for(var i=0; i<count; i++) {\n            var psoff = bin.readUshort(data, offset);  offset+=2;\n            psoff += offset0;\n            var pvcount = bin.readUshort(data, psoff);  psoff+=2;\n            var arr = [];\n\n            for(var j=0; j<pvcount; j++) {\n                var gid2 = bin.readUshort(data, psoff);  psoff+=2;\n                var value1, value2;\n                if(tab.valFmt1!=0) {  value1 = Typr._lctf.readValueRecord(data, psoff, tab.valFmt1);  psoff+=ones1*2;  }\n                if(tab.valFmt2!=0) {  value2 = Typr._lctf.readValueRecord(data, psoff, tab.valFmt2);  psoff+=ones2*2;  }\n                arr.push({gid2:gid2, val1:value1, val2:value2});\n            }\n            tab.pairsets.push(arr);\n        }\n    }\n\n    if(tab.format==2) {\n        var classDef1 = bin.readUshort(data, offset);  offset+=2;\n        var classDef2 = bin.readUshort(data, offset);  offset+=2;\n        var class1Count = bin.readUshort(data, offset);  offset+=2;\n        var class2Count = bin.readUshort(data, offset);  offset+=2;\n        \n        tab.classDef1 = Typr._lctf.readClassDef(data, offset0 + classDef1);\n        tab.classDef2 = Typr._lctf.readClassDef(data, offset0 + classDef2);\n        \n        tab.matrix = [];\n        for(var i=0; i<class1Count; i++) {\n            var row = [];\n            for(var j=0; j<class2Count; j++) {\n                var value1 = null, value2 = null;\n                if(tab.valFmt1!=0) { value1 = Typr._lctf.readValueRecord(data, offset, tab.valFmt1);  offset+=ones1*2; }\n                if(tab.valFmt2!=0) { value2 = Typr._lctf.readValueRecord(data, offset, tab.valFmt2);  offset+=ones2*2; }\n                row.push({val1:value1, val2:value2});\n            }\n            tab.matrix.push(row);\n        }\n    }\n    return tab;\n}\n\nTypr.GSUB = {};\nTypr.GSUB.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GSUB.subt);  }\n\n\nTypr.GSUB.subt = function(data, ltype, offset) { // lookup type\n    var bin = Typr._bin, offset0 = offset, tab = {};\n    \n    if(ltype!=1 && ltype!=4) return null;\n    \n    tab.fmt  = bin.readUshort(data, offset);  offset+=2;\n    var covOff  = bin.readUshort(data, offset);  offset+=2;\n    tab.coverage = Typr._lctf.readCoverage(data, covOff+offset0);   // not always is coverage here\n    \n    if(false) {}\n    else if(ltype==1) {\n        if(tab.fmt==1) {\n            tab.delta = bin.readShort(data, offset);  offset+=2;\n        }\n        else if(tab.fmt==2) {\n            var cnt = bin.readUshort(data, offset);  offset+=2;\n            tab.newg = bin.readUshorts(data, offset, cnt);  offset+=tab.newg.length*2;\n        }\n    }\n    else if(ltype==4) {\n        tab.vals = [];\n        var cnt = bin.readUshort(data, offset);  offset+=2;\n        for(var i=0; i<cnt; i++) {\n            var loff = bin.readUshort(data, offset);  offset+=2;\n            tab.vals.push(Typr.GSUB.readLigatureSet(data, offset0+loff));\n        }\n        //console.log(tab.coverage);\n        //console.log(tab.vals);\n    } \n    \n    return tab;\n}\n\nTypr.GSUB.readChainSubClassSet = function(data, offset) {\n    var bin = Typr._bin, offset0 = offset, lset = [];\n    var cnt = bin.readUshort(data, offset);  offset+=2;\n    for(var i=0; i<cnt; i++) {\n        var loff = bin.readUshort(data, offset);  offset+=2;\n        lset.push(Typr.GSUB.readChainSubClassRule(data, offset0+loff));\n    }\n    return lset;\n}\n\nTypr.GSUB.readChainSubClassRule= function(data, offset) {\n    var bin = Typr._bin, offset0 = offset, rule = {};\n    var pps = [\"backtrack\", \"input\", \"lookahead\"];\n    for(var pi=0; pi<pps.length; pi++) {\n        var cnt = bin.readUshort(data, offset);  offset+=2;  if(pi==1) cnt--;\n        rule[pps[pi]]=bin.readUshorts(data, offset, cnt);  offset+= rule[pps[pi]].length*2;\n    }\n    var cnt = bin.readUshort(data, offset);  offset+=2;\n    rule.subst = bin.readUshorts(data, offset, cnt*2);  offset += rule.subst.length*2;\n    return rule;\n}\n\nTypr.GSUB.readLigatureSet = function(data, offset) {\n    var bin = Typr._bin, offset0 = offset, lset = [];\n    var lcnt = bin.readUshort(data, offset);  offset+=2;\n    for(var j=0; j<lcnt; j++) {\n        var loff = bin.readUshort(data, offset);  offset+=2;\n        lset.push(Typr.GSUB.readLigature(data, offset0+loff));\n    }\n    return lset;\n}\n\nTypr.GSUB.readLigature = function(data, offset) {\n    var bin = Typr._bin, lig = {chain:[]};\n    lig.nglyph = bin.readUshort(data, offset);  offset+=2;\n    var ccnt = bin.readUshort(data, offset);  offset+=2;\n    for(var k=0; k<ccnt-1; k++) {  lig.chain.push(bin.readUshort(data, offset));  offset+=2;  }\n    return lig;\n}\n\n\n\nTypr.head = {};\nTypr.head.parse = function(data, offset, length) {\n    var bin = Typr._bin;\n    var obj = {};\n    var tableVersion = bin.readFixed(data, offset);  offset += 4;\n    obj.fontRevision = bin.readFixed(data, offset);  offset += 4;\n    var checkSumAdjustment = bin.readUint(data, offset);  offset += 4;\n    var magicNumber = bin.readUint(data, offset);  offset += 4;\n    obj.flags = bin.readUshort(data, offset);  offset += 2;\n    obj.unitsPerEm = bin.readUshort(data, offset);  offset += 2;\n    obj.created  = bin.readUint64(data, offset);  offset += 8;\n    obj.modified = bin.readUint64(data, offset);  offset += 8;\n    obj.xMin = bin.readShort(data, offset);  offset += 2;\n    obj.yMin = bin.readShort(data, offset);  offset += 2;\n    obj.xMax = bin.readShort(data, offset);  offset += 2;\n    obj.yMax = bin.readShort(data, offset);  offset += 2;\n    obj.macStyle = bin.readUshort(data, offset);  offset += 2;\n    obj.lowestRecPPEM = bin.readUshort(data, offset);  offset += 2;\n    obj.fontDirectionHint = bin.readShort(data, offset);  offset += 2;\n    obj.indexToLocFormat  = bin.readShort(data, offset);  offset += 2;\n    obj.glyphDataFormat   = bin.readShort(data, offset);  offset += 2;\n    return obj;\n}\n\n\nTypr.hhea = {};\nTypr.hhea.parse = function(data, offset, length) {\n    var bin = Typr._bin;\n    var obj = {};\n    var tableVersion = bin.readFixed(data, offset);  offset += 4;\n    obj.ascender  = bin.readShort(data, offset);  offset += 2;\n    obj.descender = bin.readShort(data, offset);  offset += 2;\n    obj.lineGap = bin.readShort(data, offset);  offset += 2;\n    \n    obj.advanceWidthMax = bin.readUshort(data, offset);  offset += 2;\n    obj.minLeftSideBearing  = bin.readShort(data, offset);  offset += 2;\n    obj.minRightSideBearing = bin.readShort(data, offset);  offset += 2;\n    obj.xMaxExtent = bin.readShort(data, offset);  offset += 2;\n    \n    obj.caretSlopeRise = bin.readShort(data, offset);  offset += 2;\n    obj.caretSlopeRun  = bin.readShort(data, offset);  offset += 2;\n    obj.caretOffset    = bin.readShort(data, offset);  offset += 2;\n    \n    offset += 4*2;\n    \n    obj.metricDataFormat = bin.readShort (data, offset);  offset += 2;\n    obj.numberOfHMetrics = bin.readUshort(data, offset);  offset += 2;\n    return obj;\n}\n\n\nTypr.hmtx = {};\nTypr.hmtx.parse = function(data, offset, length, font) {\n    var bin = Typr._bin;\n    var obj = {};\n    \n    obj.aWidth = [];\n    obj.lsBearing = [];\n        \n    var aw = 0, lsb = 0;\n    \n    for(var i=0; i<font.maxp.numGlyphs; i++) {\n        if(i<font.hhea.numberOfHMetrics) {  aw=bin.readUshort(data, offset);  offset += 2;  lsb=bin.readShort(data, offset);  offset+=2;  }\n        obj.aWidth.push(aw);\n        obj.lsBearing.push(lsb);\n    }\n    \n    return obj;\n}\n\n\nTypr.kern = {};\nTypr.kern.parse = function(data, offset, length, font) {\n    var bin = Typr._bin;\n    \n    var version = bin.readUshort(data, offset);  offset+=2;\n    if(version==1) return Typr.kern.parseV1(data, offset-2, length, font);\n    var nTables = bin.readUshort(data, offset);  offset+=2;\n    \n    var map = {glyph1: [], rval:[]};\n    for(var i=0; i<nTables; i++) {\n        offset+=2;  // skip version\n        var length  = bin.readUshort(data, offset);  offset+=2;\n        var coverage = bin.readUshort(data, offset);  offset+=2;\n        var format = coverage>>>8;\n        /* I have seen format 128 once, that's why I do */ format &= 0xf;\n        if(format==0) offset = Typr.kern.readFormat0(data, offset, map);\n        else throw \"unknown kern table format: \"+format;\n    }\n    return map;\n}\n\nTypr.kern.parseV1 = function(data, offset, length, font) {\n    var bin = Typr._bin;\n    \n    var version = bin.readFixed(data, offset);  offset+=4;\n    var nTables = bin.readUint(data, offset);  offset+=4;\n    \n    var map = {glyph1: [], rval:[]};\n    for(var i=0; i<nTables; i++) {\n        var length = bin.readUint(data, offset);   offset+=4;\n        var coverage = bin.readUshort(data, offset);  offset+=2;\n        var tupleIndex = bin.readUshort(data, offset);  offset+=2;\n        var format = coverage>>>8;\n        /* I have seen format 128 once, that's why I do */ format &= 0xf;\n        if(format==0) offset = Typr.kern.readFormat0(data, offset, map);\n        else throw \"unknown kern table format: \"+format;\n    }\n    return map;\n}\n\nTypr.kern.readFormat0 = function(data, offset, map) {\n    var bin = Typr._bin;\n    var pleft = -1;\n    var nPairs        = bin.readUshort(data, offset);  offset+=2;\n    var searchRange   = bin.readUshort(data, offset);  offset+=2;\n    var entrySelector = bin.readUshort(data, offset);  offset+=2;\n    var rangeShift    = bin.readUshort(data, offset);  offset+=2;\n    for(var j=0; j<nPairs; j++) {\n        var left  = bin.readUshort(data, offset);  offset+=2;\n        var right = bin.readUshort(data, offset);  offset+=2;\n        var value = bin.readShort (data, offset);  offset+=2;\n        if(left!=pleft) { map.glyph1.push(left);  map.rval.push({ glyph2:[], vals:[] }) }\n        var rval = map.rval[map.rval.length-1];\n        rval.glyph2.push(right);   rval.vals.push(value);\n        pleft = left;\n    }\n    return offset;\n}\n\n\n\nTypr.maxp = {};\nTypr.maxp.parse = function(data, offset, length) {\n    //console.log(data.length, offset, length);\n    \n    var bin = Typr._bin;\n    var obj = {};\n    \n    // both versions 0.5 and 1.0\n    var ver = bin.readUint(data, offset); offset += 4;\n    obj.numGlyphs = bin.readUshort(data, offset);  offset += 2;\n    \n    // only 1.0\n    if(ver == 0x00010000) {\n        obj.maxPoints             = bin.readUshort(data, offset);  offset += 2;\n        obj.maxContours           = bin.readUshort(data, offset);  offset += 2;\n        obj.maxCompositePoints    = bin.readUshort(data, offset);  offset += 2;\n        obj.maxCompositeContours  = bin.readUshort(data, offset);  offset += 2;\n        obj.maxZones              = bin.readUshort(data, offset);  offset += 2;\n        obj.maxTwilightPoints     = bin.readUshort(data, offset);  offset += 2;\n        obj.maxStorage            = bin.readUshort(data, offset);  offset += 2;\n        obj.maxFunctionDefs       = bin.readUshort(data, offset);  offset += 2;\n        obj.maxInstructionDefs    = bin.readUshort(data, offset);  offset += 2;\n        obj.maxStackElements      = bin.readUshort(data, offset);  offset += 2;\n        obj.maxSizeOfInstructions = bin.readUshort(data, offset);  offset += 2;\n        obj.maxComponentElements  = bin.readUshort(data, offset);  offset += 2;\n        obj.maxComponentDepth     = bin.readUshort(data, offset);  offset += 2;\n    }\n    \n    return obj;\n}\n\n\nTypr.U = {};\n\nTypr.U.codeToGlyph = function(font, code) {\n    var cmap = font.cmap;\n    \n    \n    var tind = -1;\n    if(cmap.p0e4!=null) tind = cmap.p0e4;\n    else if(cmap.p3e1!=null) tind = cmap.p3e1;\n    else if(cmap.p1e0!=null) tind = cmap.p1e0;\n    \n    if(tind==-1) throw \"no familiar platform and encoding!\";\n    \n    var tab = cmap.tables[tind];\n    \n    if (tab.format==0) {\n        if(code>=tab.map.length) return 0;\n        return tab.map[code];\n    } else if(tab.format==4) {\n        var sind = -1;\n        for(var i=0; i<tab.endCount.length; i++)   if(code<=tab.endCount[i]){  sind=i;  break;  } \n        if(sind==-1) return 0;\n        if(tab.startCount[sind]>code) return 0;\n        \n        var gli = 0;\n        if(tab.idRangeOffset[sind]!=0) gli = tab.glyphIdArray[(code-tab.startCount[sind]) + (tab.idRangeOffset[sind]>>1) - (tab.idRangeOffset.length-sind)];\n        else                           gli = code + tab.idDelta[sind];\n        return gli & 0xFFFF;\n    } else if(tab.format==12) {\n        if(code>tab.groups[tab.groups.length-1][1]) return 0;\n        for(var i=0; i<tab.groups.length; i++) {\n            var grp = tab.groups[i];\n            if(grp[0]<=code && code<=grp[1]) return grp[2] + (code-grp[0]);\n        }\n        return 0;\n    }\n    else throw \"unknown cmap table format \"+tab.format;\n}\n\n\nTypr.U._getGlyphClass = function(g, cd) {\n    for(var i=0; i<cd.start.length; i++) \n        if(cd.start[i]<=g && cd.end[i]>=g) return cd.class[i];\n    return 0;\n}\n\nTypr.U.getPairAdjustment = function(font, g1, g2) {\n    if(font.GPOS) {\n        var ltab = null;\n        for(var i = 0; i < font.GPOS.featureList.length; i++) {\n            var fl = font.GPOS.featureList[i];\n            if (fl.tag==\"kern\")\n                for(var j=0; j<fl.tab.length; j++) \n                    if(font.GPOS.lookupList[fl.tab[j]].ltype==2) ltab=font.GPOS.lookupList[fl.tab[j]];\n        }\n        if(ltab) {\n            for(var i = 0; i < ltab.tabs.length; i++) {\n                var tab = ltab.tabs[i];\n                var ind = Typr._lctf.coverageIndex(tab.coverage, g1);\n                if (ind==-1) continue;\n                var adj = 0;\n                if (tab.format==1) {\n                    var right = tab.pairsets[ind];\n                    for (var j=0; j<right.length; j++) if (right[j].gid2==g2) adj = right[j];\n                    if (adj==null) continue;\n                } else if (tab.format==2) {\n                    var c1 = Typr.U._getGlyphClass(g1, tab.classDef1);\n                    var c2 = Typr.U._getGlyphClass(g2, tab.classDef2);\n                    adj = tab.matrix[c1][c2];\n                }\n                return adj.val1[2];\n            }\n        }\n    }\n    if(font.kern) {\n        var ind1 = font.kern.glyph1.indexOf(g1);\n        if(ind1!=-1) {\n            var ind2 = font.kern.rval[ind1].glyph2.indexOf(g2);\n            if(ind2!=-1) return font.kern.rval[ind1].vals[ind2];\n        }\n    }\n    \n    return 0;\n}\n\n/*\nTypr.U.isRTL = function(str) {           \n    var weakChars       = '\\u0000-\\u0040\\u005B-\\u0060\\u007B-\\u00BF\\u00D7\\u00F7\\u02B9-\\u02FF\\u2000-\\u2BFF\\u2010-\\u2029\\u202C\\u202F-\\u2BFF',\n        rtlChars        = '\\u0591-\\u07FF\\u200F\\u202B\\u202E\\uFB1D-\\uFDFD\\uFE70-\\uFEFC',\n        rtlDirCheck     = new RegExp('^['+weakChars+']*['+rtlChars+']');\n\n    return rtlDirCheck.test(str);\n};*/\n\n// var wsep = \"\\n\\t\\\" ,.:;!?()  ،\";\n//Typr.U.WSepTable = [9, 10, 32, 33, 34, 40, 41, 44, 46, 58, 59, 63, 1548]\n\n//var L = \"ꡲ્૗\";\n//Typr.U.LTable = [ 2765, 2775, 43122 ]\n\n//var R = \"آأؤإاةدذرزوٱٲٳٵٶٷڈډڊڋڌڍڎڏڐڑڒړڔڕږڗژڙۀۃۄۅۆۇۈۉۊۋۍۏےۓەۮۯܐܕܖܗܘܙܞܨܪܬܯݍݙݚݛݫݬݱݳݴݸݹࡀࡆࡇࡉࡔࡧࡩࡪࢪࢫࢬࢮࢱࢲࢹૅેૉ૊૎૏ૐ૑૒૝ૡ૤૯஁ஃ஄அஉ஌எஏ஑னப஫஬\";\nTypr.U.RTable = [\n    1570, 1571, 1572, 1573, 1575, 1577, 1583, 1584, 1585, 1586,\n    1608, 1649, 1650, 1651, 1653, 1654, 1655, 1672, 1673, 1674,\n    1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,\n    1685, 1686, 1687, 1688, 1689, 1728, 1731, 1732, 1733, 1734,\n    1735, 1736, 1737, 1738, 1739, 1741, 1743, 1746, 1747, 1749,\n    1774, 1775, 1808, 1813, 1814, 1815, 1816, 1817, 1822, 1832,\n    1834, 1836, 1839, 1869, 1881, 1882, 1883, 1899, 1900, 1905,\n    1907, 1908, 1912, 1913, 2112, 2118, 2119, 2121, 2132, 2151,\n    2153, 2154, 2218, 2219, 2220, 2222, 2225, 2226, 2233, 2757,\n    2759, 2761, 2762, 2766, 2767, 2768, 2769, 2770, 2781, 2785,\n    2788, 2799, 2945, 2947, 2948, 2949, 2953, 2956, 2958, 2959,\n    2961, 2985, 2986, 2987, 2988 ];\n\n\nTypr.U.stringToGlyphs = function(fonts, str) {\n    var gls = [], g, i, li, j, lj, k, ti, c, c2, gsub, font, llist, flist, t, gsubTable;\n    var gl, gfonts = [], codes = [], scodes = [], scodesType = [], str2 = '';\n\n    var bidiResult = bidi(str, -1, false);\n\n    var rtable = Typr.U.RTable;\n\n   for (i = 0, li = str.length; i < li; i++) {\n        c = str.charCodeAt(i);\n        scodes.push(c);\n        scodesType.push(0);\n\n        //types wsep = 1, L = 2, R = 3\n\n        if (c == 2765 || c == 2775 || c == 43122) { // L\n            scodesType[i] = 2;\n        } else if (c == 1548) { // wsep\n            scodesType[i] = 1;\n        } else if (c <= 63) { // wsep\n            if (c == 9 || c == 10 || c == 32 || c == 33 || c == 34 || c == 40 || c == 41 || c == 44 || c == 46 || c == 58 || c == 59 || c == 63) {\n                scodesType[i] = 1;\n            }\n        } else if (c >= 1570 && c <= 2988) { // R\n            if (rtable.indexOf(c) != -1) {\n                scodesType[i] = 3;\n            }\n        }\n    }\n\n    //basic shaping\n    for (i = 0, li = str.length; i < li; i++) {\n        c = scodes[i];\n\n        if (scodesType[i] != 1) { //not wsep\n            if (i < li - 2) {\n                c2 = scodes[i+1];\n\n                //myanmar \n                if (c2 == 0x103c) { //medial ra - prebase substitution\n                    scodes[i] = c2;\n                    scodes[i+1] = c;\n                    i++;\n                    continue;\n                }\n            }\n        }\n    }\n\n    //get glyphs and fonts for codes\n    for (i = 0, li = str.length; i < li; i++) {\n        c = scodes[i];\n\n        for (j = 0, lj = fonts.length; j < lj; j++) {\n            font = fonts[j];\n            g = Typr.U.codeToGlyph(font, c);\n            if (g) {\n                break;\n            }\n        }\n\n        gls.push(g);\n        gfonts.push(g ? j : 0);\n    }\n\n    codes = scodes;\n    font = null;\n    \n    \n    for(var ci = 0; ci < gls.length; ci++) {\n        gl = gls[ci];\n\n        if (font != gfonts[ci]) {\n            font = fonts[gfonts[ci]];\n            gsub = font['GSUB'];\n        }\n\n        if(!gsub) {\n            continue;\n        }\n\n        var t1 = scodesType[ci-1], t2 = scodesType[ci], t3 = scodesType[ci+1];\n\n        var slft = (ci==0) || (t1 == 1);\n        var srgt = (ci==gls.length-1) || (t3 == 1);\n        \n        if(!slft && (t1 == 3)) slft=true;\n        if(!srgt && (t2 == 3)) srgt=true;\n        \n        if(!srgt && (t3 == 2)) srgt=true;\n        if(!slft && (t2 == 2)) slft=true;\n        \n        gsubTable = null;\n        if (slft) {\n            gsubTable = srgt ? font.gsubIsolTable : font.gsubInitTable;        \n        } else {\n            gsubTable = srgt ? font.gsubFinaTable : font.gsubMediTable;            \n        }\n        \n        if (gsubTable) {\n            for(ti = 0; ti < gsubTable.length; ti++) {\n                var tab = gsubTable[ti];\n\n                for(j = 0; j < tab.length; j++) {\n                    var ttab = tab[j];\n                    var ind = Typr._lctf.coverageIndex(ttab.coverage,gl);\n                    if(ind == -1) continue;  \n\n                    if(ttab.fmt == 0) {\n                        gls[ci] = ind+ttab.delta;\n                    } else {\n                        if (!ttab.newg) {\n                            gls[ci] = gl;\n                            console.log(ci, gl, 'subst-error', ' original:', str);\n                        } else {\n                            gls[ci] = ttab.newg[ind];\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    font = null;\n    \n    for(var ci=0; ci<gls.length; ci++) {\n        gl = gls[ci];\n\n        if (font != gfonts[ci]) {\n            font = fonts[gfonts[ci]];\n            gsub = font['GSUB'];\n        }\n\n        if(!gsub) {\n            continue;\n        }\n\n        gsubTable = font.gsubRligLigaTable;\n\n        if (gsubTable) {\n            var rlim = Math.min(3, gls.length-ci-1);\n\n            for(ti = 0; ti < gsubTable.length; ti++) {\n                var tab = gsubTable[ti];\n\n                for(j = 0; j < tab.length; j++) {\n                    var ttab = tab[j];\n                    var ind = Typr._lctf.coverageIndex(ttab.coverage, gl);\n                    if(ind==-1) continue;  \n\n                    var vals = ttab.vals[ind];\n                    \n                    for(k=0; k<vals.length; k++) {\n                        var lig = vals[k], rl = lig.chain.length;  if(rl>rlim) continue;\n                        var good = true;\n                        for(var l=0; l<rl; l++) if(lig.chain[l]!=gls[ci+(1+l)]) good=false;\n                        if(!good) continue;\n                        gls[ci]=lig.nglyph;\n                        for(var l=0; l<rl; l++) gls[ci+l+1]=-1;\n                        //console.log(\"lig\", fl.tag,  gl, lig.chain, lig.nglyph);\n                    }\n                }\n            }\n        }\n    }\n\n    var indices = bidiResult.indices;\n    var gls2 = gls.slice();\n    var codes2 = codes.slice();\n    var gfonts2 = gfonts.slice();\n\n    for (i = 0, li = gls.length; i < li; i++) {\n        c = indices[i];\n        gls2[i] = gls[c];\n        codes2[i] = codes[c];\n        gfonts2[i] = gfonts[c];\n    }\n\n    return [gls2, gfonts2, codes2];\n}\n\n\nexport {Typr};\n\n\n\n","\nimport {globals as globals_, vec3Normalize as vec3Normalize_,\n        vec3Length as vec3Length_, vec3Cross as vec3Cross_} from './worker-globals.js';\n\nimport {Typr as Typr_} from './worker-font.js';\n\n\n//get rid of compiler mess\nvar globals = globals_,\n    vec3Normalize = vec3Normalize_, vec3Length = vec3Length_,\n    vec3Cross = vec3Cross_,\n    Typr = Typr_;\n\n\nvar setFont = function(fontData) {\n    //console.log('setFont ' + fontData['url']);\n    //debugger;\n\n    var font = Typr.parse(fontData['data']);\n\n    globals.fontsStorage[fontData['url']] = font;\n};\n\n\nvar setFontMap = function(fontMap) {\n    var fonts = fontMap['map'];\n    for (var key in fonts) {\n        globals.fonts[key] = globals.fontsStorage[fonts[key]];\n    }\n\n    globals.fontsMap = fonts;\n};\n\n\n//http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/\n\nvar mat3toQuad2 = function(m) {  //TODO: use m as one dimensional vector\n\n    var tr = m[0][0] + m[1][1] + m[2][2], qx,qy,qz,qw,s;\n\n    if (tr > 0) { \n      s = Math.sqrt(tr+1.0) * 2; // S=4*qw \n      qw = 0.25 * s;\n      qx = (m[2][1] - m[1][2]) / s;\n      qy = (m[0][2] - m[2][0]) / s; \n      qz = (m[1][0] - m[0][1]) / s; \n    } else if ((m[0][0] > m[1][1])&(m[0][0] > m[2][2])) { \n      s = Math.sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]) * 2; // S=4*qx \n      qw = (m[2][1] - m[1][2]) / s;\n      qx = 0.25 * s;\n      qy = (m[0][1] + m[1][0]) / s; \n      qz = (m[0][2] + m[2][0]) / s; \n    } else if (m[1][1] > m[2][2]) { \n      s = Math.sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]) * 2; // S=4*qy\n      qw = (m[0][2] - m[2][0]) / s;\n      qx = (m[0][1] + m[1][0]) / s; \n      qy = 0.25 * s;\n      qz = (m[1][2] + m[2][1]) / s; \n    } else { \n      s = Math.sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]) * 2; // S=4*qz\n      qw = (m[1][0] - m[0][1]) / s;\n      qx = (m[0][2] + m[2][0]) / s;\n      qy = (m[1][2] + m[2][1]) / s;\n      qz = 0.25 * s;\n    }\n\n    return [qx,qy,qz,qw];\n}\n\n\nvar addChar = function(pos, dir, verticalShift, char, factor, spacing, index, index2, textVector, fonts, vertexBuffer, texcoordsBuffer, flat, planes, fontIndex, singleBuffer) {\n    var n, font = fonts[fontIndex];\n    var up = [0,0,0];\n\n    if (globals.geocent && !flat) {\n        n = [0,0,0];\n        vec3Normalize(globals.bboxMin, up);\n        vec3Cross(up, dir, n);\n    } else {\n        n = [-dir[1],dir[0],0];\n    }\n\n    vec3Cross(dir, n, up);\n\n    var p1 = [pos[0], pos[1], pos[2]];\n    var p2 = [p1[0], p1[1], p1[2]];\n\n    //var chars = font.chars;\n    \n    var fc = font.glyphs[char];\n    char = 0; // hack\n\n    if (!fc) {\n        return [pos, index, index2, 0];\n    }\n\n    var l = 0;\n    var nx = textVector[0];\n    var ny = textVector[1];\n    var nz = textVector[2];\n\n    if (char == 9 || char == 32) {  //tab or space\n        fc = chars[32]; //space\n\n        if (fc) {\n            pos[0] += dir[0] * (fc.step) * factor * spacing;\n            pos[1] += dir[1] * (fc.step) * factor * spacing;\n            l = fc.lx * factor;\n        }\n    } else {\n        if (fc.lx == 0) {\n            pos[0] = pos[0] + dir[0] * fc.step * factor * spacing;\n            pos[1] = pos[1] + dir[1] * fc.step * factor * spacing;\n            l = fc.lx * factor;\n        } else {\n            var planeShift = fontIndex * 4000;\n            var plane = fc.plane + planeShift;\n\n            if (planes) {\n                if (!planes[fontIndex]) {\n                    planes[fontIndex] = {};\n                }\n                \n                planes[fontIndex][plane] = true;\n            }\n\n            var factorX = fc.lx * factor;\n            var factorY = fc.ly * factor;\n\n            if (singleBuffer) {\n\n                if (globals.processLineLabel && globals.useLineLabel2) {\n\n                    p1[0] = p1[0] + dir[0] * fc.sx * factor;\n                    p1[1] = p1[1] + dir[1] * fc.sx * factor;\n                    p1[2] = p1[2] + dir[2] * fc.sx * factor;\n                    p1[0] = p1[0] + n[0] * (fc.sy - font.size) * factor;\n                    p1[1] = p1[1] + n[1] * (fc.sy - font.size) * factor;\n                    p1[2] = p1[2] + n[2] * (fc.sy - font.size) * factor;\n\n                    var n2 = [n[0] * verticalShift, n[1] * verticalShift, n[2] * verticalShift];\n                    var n3 = [n2[0] + n[0] * factorY, n2[1] + n[1] * factorY, n2[2] + n[2] * factorY];\n\n                    singleBuffer[index] = p1[0] - n2[0];\n                    singleBuffer[index+1] = p1[1] - n2[1];\n                    singleBuffer[index+2] = p1[2] - n2[2];\n\n                    \n                    var m = [ [dir[0], dir[1], dir[2]], \n                              [n[0], n[1], n[2]], \n                              [up[0], up[1], up[2]] ];\n\n                    /*\n                    var m = [ dir[0], dir[1], dir[2], \n                              n[0], n[1], n[2], \n                              up[0], up[1], up[2] ];*/\n\n                    var q = mat3toQuad2(m);\n                    singleBuffer[index+3] = q[0];  //x\n                    singleBuffer[index+4] = q[1];  //y\n                    singleBuffer[index+5] = q[2];  //z\n                    singleBuffer[index+6] = q[3];  //w\n                   \n                    if (!globals.lineLabelPass) {\n                        singleBuffer[index+7] = factorX;\n                        singleBuffer[index+8] = factorY;\n                    }\n\n                    singleBuffer[index+9] = fc.u1;\n                    singleBuffer[index+10] = fc.v1 + planeShift;\n\n                    var dtx = (fc.u2 - fc.u1) * 1024;\n                    var dty = (fc.v2 - fc.v1);// * 1024;\n\n                    singleBuffer[index+11] = dtx + dty;  // u store in decimal part, v stored in fraction part\n\n                    var dx = dir[0]*0.5*factorX - n[0]*0.5*factorY - n2[0];\n                    var dy = dir[1]*0.5*factorX - n[1]*0.5*factorY - n2[1];\n                    var dz = dir[2]*0.5*factorX - n[2]*0.5*factorY - n2[2];\n\n                    //globals.lineLabelPoints.push([p1[0] + dx, p1[1] + dy, p1[2] + dz, Math.sqrt(factorX*factorX + factorY*factorY)*0.5]);\n                    globals.lineLabelPoints.push([p1[0] + dx, p1[1] + dy, p1[2] + dz, Math.sqrt(factorX*factorX + factorY*factorY)*0.5, \n                                                  singleBuffer[index], singleBuffer[index+1], singleBuffer[index+2],\n                                                  singleBuffer[index+3], singleBuffer[index+4], singleBuffer[index+5], singleBuffer[index+6], factorX, factorY]);\n\n                    index += 12;\n\n                } else {\n                    singleBuffer[index] = p1[0] + fc.sx * factor;\n                    singleBuffer[index+1] = p1[1] + (fc.sy - font.size) * factor;\n                    singleBuffer[index+2] = singleBuffer[index] + factorX;\n                    singleBuffer[index+3] = singleBuffer[index+1] - factorY;\n                    singleBuffer[index+4] = fc.u1;\n                    singleBuffer[index+5] = fc.v1 + planeShift;\n                    singleBuffer[index+6] = fc.u2;\n                    singleBuffer[index+7] = fc.v2 + planeShift;\n\n                    index += 8;\n                }\n\n            } else {\n\n                var n2 = [n[0] * verticalShift, n[1] * verticalShift, n[2] * verticalShift];\n                var n3 = [n2[0] + n[0] * factorY, n2[1] + n[1] * factorY, n2[2] + n[2] * factorY];\n                \n                p1[0] = p1[0] + dir[0] * fc.sx * factor;\n                p1[1] = p1[1] + dir[1] * fc.sx * factor;\n                p1[2] = p1[2] + dir[2] * fc.sx * factor;\n                p1[0] = p1[0] + n[0] * (fc.sy - font.size) * factor;\n                p1[1] = p1[1] + n[1] * (fc.sy - font.size) * factor;\n                p1[2] = p1[2] + n[2] * (fc.sy - font.size) * factor;\n\n                p2[0] = p1[0] + dir[0] * factorX;\n                p2[1] = p1[1] + dir[1] * factorX;\n                p2[2] = p1[2] + dir[2] * factorX;\n\n                //first polygon\n                vertexBuffer[index] = p1[0] - n2[0];\n                vertexBuffer[index+1] = p1[1] - n2[1];\n                vertexBuffer[index+2] = p1[2] - n2[2];\n                vertexBuffer[index+3] = nz;\n\n                texcoordsBuffer[index2] = fc.u1;\n                texcoordsBuffer[index2+1] = fc.v1 +  planeShift;\n                texcoordsBuffer[index2+2] = nx;\n                texcoordsBuffer[index2+3] = ny;\n\n                vertexBuffer[index+4] = p1[0] - n3[0];\n                vertexBuffer[index+5] = p1[1] - n3[1];\n                vertexBuffer[index+6] = p1[2] - n3[2];\n                vertexBuffer[index+7] = nz;\n\n                texcoordsBuffer[index2+4] = fc.u1;\n                texcoordsBuffer[index2+5] = fc.v2 +  planeShift;\n                texcoordsBuffer[index2+6] = nx;\n                texcoordsBuffer[index2+7] = ny;\n\n                vertexBuffer[index+8] = p2[0] - n2[0];\n                vertexBuffer[index+9] = p2[1] - n2[1];\n                vertexBuffer[index+10] = p2[2] - n2[2];\n                vertexBuffer[index+11] = nz;\n\n                texcoordsBuffer[index2+8] = fc.u2;\n                texcoordsBuffer[index2+9] = fc.v1 +  planeShift;\n                texcoordsBuffer[index2+10] = nx;\n                texcoordsBuffer[index2+11] = ny;\n\n\n                //next polygon\n                vertexBuffer[index+12] = p1[0] - n3[0];\n                vertexBuffer[index+13] = p1[1] - n3[1];\n                vertexBuffer[index+14] = p1[2] - n3[2];\n                vertexBuffer[index+15] = nz;\n\n                texcoordsBuffer[index2+12] = fc.u1;\n                texcoordsBuffer[index2+13] = fc.v2 +  planeShift;\n                texcoordsBuffer[index2+14] = nx;\n                texcoordsBuffer[index2+15] = ny;\n\n                vertexBuffer[index+16] = p2[0] - n3[0];\n                vertexBuffer[index+17] = p2[1] - n3[1];\n                vertexBuffer[index+18] = p2[2] - n3[2];\n                vertexBuffer[index+19] = nz;\n\n                texcoordsBuffer[index2+16] = fc.u2;\n                texcoordsBuffer[index2+17] = fc.v2 +  planeShift;\n                texcoordsBuffer[index2+18] = nx;\n                texcoordsBuffer[index2+19] = ny;\n\n                vertexBuffer[index+20] = p2[0] - n2[0];\n                vertexBuffer[index+21] = p2[1] - n2[1];\n                vertexBuffer[index+22] = p2[2] - n2[2];\n                vertexBuffer[index+23] = nz;\n\n                texcoordsBuffer[index2+20] = fc.u2;\n                texcoordsBuffer[index2+21] = fc.v1 +  planeShift;\n                texcoordsBuffer[index2+22] = nx;\n                texcoordsBuffer[index2+23] = ny;\n\n                index += 24;\n                index2 += 24;\n            }\n\n            pos[0] = pos[0] + dir[0] * fc.step * factor * spacing;\n            pos[1] = pos[1] + dir[1] * fc.step * factor * spacing;\n            l = fc.lx * factor;\n        }\n    }\n\n    return [pos, index, index2, l * spacing];\n};\n\n\nvar getCharVerticesCount = function(origin) {\n    return (origin ? 3 : 4) * 3 * 2;\n};\n\n\nvar addText = function(pos, dir, text, size, spacing, fonts, vertexBuffer, texcoordsBuffer, flat, index, planes, glyphsRes, singleBuffer) {\n    var textVector = [0,1,0];\n    var p1 = [pos[0], pos[1], pos[2]];\n\n    var res = glyphsRes ? glyphsRes : Typr.U.stringToGlyphs(fonts, text);\n    var glyphs = res[0];\n    var gfonts = res[1];\n\n    for (var i = 0, li = glyphs.length; i < li; i++) {\n        var glyph = glyphs[i];\n        var font = fonts[gfonts[i]];\n\n        if (font) {\n            var factor = getFontFactor(size, font);\n\n            var shift = addChar(p1, dir, 0, glyph, factor, spacing, index, index, textVector, fonts, vertexBuffer, texcoordsBuffer, flat, planes, gfonts[i], singleBuffer);\n\n            //var gid2 = (i<gls.length-1 && gls[i+1]!=-1)  ? gls[i+1] : 0;\n            //x += Typr.U.getPairAdjustment(font, gid, gid2);\n\n            p1 = shift[0];\n            index = shift[1];\n        }\n    }\n\n    return index;\n};\n\n\nvar addTextOnPath = function(points, distance, text, size, spacing, textVector, fonts, verticalOffset, vertexBuffer, texcoordsBuffer, index, planes, glyphsRes, singleBuffer) {\n    if (textVector == null) {\n        textVector = [0,1,0];\n    }\n\n    var p1 = points[0];\n    //var newLineSpace = getLineHeight(size, fonts);\n    //var s = [p1[0], p1[1], p1[2]];\n\n    p1 = [p1[0], p1[1], p1[2]];\n    var l = distance;\n\n    var res = glyphsRes ? glyphsRes : Typr.U.stringToGlyphs(fonts, text);\n    var glyphs = res[0];\n    var gfonts = res[1];\n\n    globals.processLineLabel = true;\n\n    for (var i = 0, li = glyphs.length; i < li; i++) {\n        /*  \n        var char = text.charCodeAt(i);\n\n        if (char == 10) { //new line\n            s[0] += -dir[1] * newLineSpace;\n            s[1] += dir[0] * newLineSpace;\n            p1 = [s[0], s[1], s[2]];\n            continue;\n        }\n\n        if (char == 9) { //tab\n            char = 32;\n        }\n        */\n\n        var glyph = glyphs[i];\n        var font = fonts[gfonts[i]];\n\n        if (font) {\n            var factor = getFontFactor(size, font);\n\n            var ll = 0.01;\n            var fc = font.glyphs[glyph];\n            if (fc) {\n                ll = fc.step * factor * spacing;\n            }\n\n            var posAndDir = getPathPositionAndDirection(points, l);\n            var posAndDir2 = getPathPositionAndDirection(points, l+ll);\n\n            //average dir\n            var dir = [(posAndDir2[1][0] + posAndDir[1][0])*0.5,\n                (posAndDir2[1][1] + posAndDir[1][1])*0.5,\n                (posAndDir2[1][2] + posAndDir[1][2])*0.5];\n\n            vec3Normalize(dir);\n\n            var shift = addChar(posAndDir[0], dir, -factor*font.size*0.7+verticalOffset, glyph, factor, spacing, index, index, textVector, fonts, vertexBuffer, texcoordsBuffer, null, planes, gfonts[i], singleBuffer);\n\n            p1 = shift[0];\n            index = shift[1];\n            //index2 = shift[2];\n            l += ll;\n        }\n    }\n\n    globals.processLineLabel = false;\n\n    return index;\n};\n\n\nvar addStreetTextOnPath = function(points, text, size, spacing, fonts, verticalOffset, vertexBuffer, texcoordsBuffer, index, planes, glyphsRes, singleBuffer) {\n    var textLength = getTextLength(text, size, spacing, fonts, glyphsRes);\n    var pathLength = getPathLength(points);\n    var shift = (pathLength -  textLength)*0.5;\n    if (shift < 0) {\n        shift = 0;\n    }\n\n    if (textLength > pathLength) {\n        return;\n    }\n\n    var textVector = getPathTextVector(points, shift, text, size, spacing, fonts, glyphsRes);\n    globals.textVector = textVector;\n    globals.textCenter = getPathPositionAndDirection(points, pathLength * 0.5)[0];\n    globals.textLength = textLength;\n\n    return addTextOnPath(points, shift, text, size, spacing, textVector, fonts, verticalOffset, vertexBuffer, texcoordsBuffer, index, planes, glyphsRes, singleBuffer);\n};\n\n\nvar getFontFactor = function(size, font) {\n    return font ? ((size / font.size) * 1.52) : 1;\n};\n\n\nvar getLineHeight = function(size, lineHeight, fonts) {\n    var factor = getFontFactor(size, fonts[0]);\n    //return font.space * factor;\n    return fonts[0].cly * factor * lineHeight;\n};\n\n\nvar getTextLength = function(text, size, spacing, fonts, glyphsRes) {\n    var l = 0;\n\n    var res = glyphsRes ? glyphsRes : Typr.U.stringToGlyphs(fonts, text);\n    var glyphs = res[0];\n    var gfonts = res[1];\n\n    for (var i = 0, li = glyphs.length; i < li; i++) {\n        var glyph = glyphs[i];\n        var font = fonts[gfonts[i]];\n\n        if (font) {\n            var factor = getFontFactor(size, font) * spacing;\n            var fc = font.glyphs[glyph];\n\n            if (fc) {\n                if (i == (li-1)) {\n                    l += fc.lx * factor;\n                } else {\n                    l += fc.step * factor;\n                }\n            }\n        }\n    }\n\n    return l;\n};\n\n\nvar getSplitIndex = function(text, width, size, spacing, fonts, glyphsRes) {\n    var l = 0;\n\n    var res = glyphsRes ? glyphsRes : Typr.U.stringToGlyphs(fonts, text);\n    var glyphs = res[0];\n    var gfonts = res[1];\n    var codes = res[2];\n\n    for (var i = 0, li = glyphs.length; i < li; i++) {\n        var glyph = glyphs[i];\n        var char = codes[i];//text.charCodeAt(i);\n\n        if (l > width && (char == 10 || char == 9 || char == 32)) {\n            return i;\n        }\n\n        if (char == 10) { //new line\n            continue;\n        }\n\n        var font = fonts[gfonts[i]];\n\n        if (font) {\n            var factor = getFontFactor(size, font) * spacing;\n            var fc = font.glyphs[glyph];\n\n            if (fc) {\n                if (i == (li-1)) {\n                    l += fc.lx * factor;\n                } else {\n                    l += fc.step * factor;\n                }\n            }\n        }\n    }\n\n    return li;\n};\n\n\nvar getPathLength = function(points) {\n    var l = 0;\n\n    for (var i = 0, li = points.length-1; i < li; i++) {\n        var p1 = points[i];\n        var p2 = points[i+1];\n        var dir = [p2[0] - p1[0], p2[1] - p1[1], p2[2] - p1[2]];\n\n        l += vec3Length(dir);\n    }\n\n    return l;\n};\n\n\nvar getPathPositionAndDirection = function(points, distance) {\n    var l = 0;\n    var p1 = [0,0,0];\n    var dir = [1,0,0];\n\n    for (var i = 0, li = points.length-1; i < li; i++) {\n        p1 = points[i];\n        var p2 = points[i+1];\n        dir = [p2[0] - p1[0], p2[1] - p1[1], p2[2] - p1[2]];\n\n        var ll = vec3Length(dir);\n\n        if ((l + ll) > distance) {\n\n            var factor = (distance - l) / (ll);\n            var p = [p1[0] + dir[0] * factor,\n                p1[1] + dir[1] * factor,\n                p1[2] + dir[2] * factor];\n\n            vec3Normalize(dir);\n\n            return [p, dir];\n        }\n\n        l += ll;\n    }\n\n    return [p1, dir];\n};\n\n\nvar getPathTextVector = function(points, shift, text, size, spacing, fonts, glyphsRes) {\n    var l = 0;\n    var p1 = [0,0,0];\n    var dir = [1,0,0];\n    var textDir = [0,0,0];\n    var textStart = shift;\n    var textEnd = shift + getTextLength(text, size, spacing, fonts, glyphsRes);\n    var bboxMin = globals.bboxMin;\n    var geocent = globals.geocent;\n\n    for (var i = 0, li = points.length-1; i < li; i++) {\n        p1 = points[i];\n        var p2 = points[i+1];\n        dir = [p2[0] - p1[0], p2[1] - p1[1], p2[2] - p1[2]];\n\n        l += vec3Length(dir);\n\n        if (l > textStart) {\n            vec3Normalize(dir);\n            textDir[0] += dir[0];\n            textDir[1] += dir[1];\n            textDir[2] += dir[2];\n        }\n\n        if (l > textEnd) {\n            vec3Normalize(textDir);\n\n            if (geocent) {\n                var nn = [0,0,0];\n                vec3Normalize(bboxMin, nn);\n                vec3Cross(nn, textDir, nn);\n                return nn;\n            } else {\n                return [-textDir[1], textDir[0],0];\n            }\n        }\n    }\n\n    return textDir;\n};\n\n\nvar areTextCharactersAvailable = function(text, fonts, glyphsRes) {\n    if (!text || text == '') {\n        return false;\n    }\n\n    var res = glyphsRes ? glyphsRes : Typr.U.stringToGlyphs(fonts, text);\n    var glyphs = res[0];\n    //var gfonts = res[1];\n\n    if (glyphs.indexOf(0) != -1) {\n        return false;\n    }\n\n    return true;\n};\n\n\nvar hasLatin = function(str) {\n    for (var i = 0, li = str.length; i < li; i++) {\n        var c = str.charCodeAt(i);\n        if ((c >= 0x41 && c <= 0x5a) || (c >= 0x61 && c <= 0x7a) ||\n            ((c >= 0xc0 && c <= 0xff) && c!= 0xd7 && c!= 0xf7) || (c >= 0x100 && c <= 0x17f)) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\n\nvar isCJK = function(str) {\n    for (var i = 0, li = str.length; i < li; i++) {\n        var c = str.charCodeAt(i);\n\n        if (!((c >= 0x4E00 && c <= 0x62FF) || (c >= 0x6300 && c <= 0x77FF) ||\n              (c >= 0x7800 && c <= 0x8CFF) || (c >= 0x8D00 && c <= 0x9FFF) || \n              (c >= 0x3400 && c <= 0x4DBF) || (c >= 0x20000 && c <= 0x215FF) || \n              (c >= 0x21600 && c <= 0x230FF) || (c >= 0x23100 && c <= 0x245FF) || \n              (c >= 0x24600 && c <= 0x260FF) || (c >= 0x26100 && c <= 0x275FF) || \n              (c >= 0x27600 && c <= 0x290FF) || (c >= 0x29100 && c <= 0x2A6DF) || \n              (c >= 0x2A700 && c <= 0x2B73F) || (c >= 0x2B740 && c <= 0x2B81F) || \n              (c >= 0x2B820 && c <= 0x2CEAF) || (c >= 0x2CEB0 && c <= 0x2EBEF) || \n              (c >= 0xF900 && c <= 0xFAFF) || (c >= 0x3300 && c <= 0x33FF) || \n              (c >= 0xFE30 && c <= 0xFE4F) || (c >= 0xF900 && c <= 0xFAFF) || \n              (c >= 0x2F800 && c <= 0x2FA1F) || \n              (c >= 0x0 && c <= 0x40) || (c >= 0xa0 && c <= 0xbf)  )) { //neutral\n            return false;\n        }\n    }\n\n    return true;\n};\n\n\nvar getFonts = function(fonts) {\n    var fontsMap = [];\n    for (var i = 0, li = fonts.length; i < li; i++) {\n        fontsMap.push(globals.fonts[fonts[i]]);\n    }\n\n    return fontsMap;\n};\n\n\nvar getFontsStorage = function(fonts) {\n    var fontsMap = [];\n    for (var i = 0, li = fonts.length; i < li; i++) {\n        fontsMap.push(globals.fontsMap[fonts[i]]);\n    }\n\n    return fontsMap;\n};\n\n\nvar getTextGlyphs = function(text, fonts) {\n    return Typr.U.stringToGlyphs(fonts, text);\n};\n\n\nexport {addStreetTextOnPath, getTextLength, getLineHeight, getFontFactor, getSplitIndex, areTextCharactersAvailable,\n        addText, addTextOnPath, setFont, setFontMap, getCharVerticesCount, getFonts, getFontsStorage, hasLatin, isCJK, getTextGlyphs};\n\n\n","\nimport {globals as globals_, simpleFmtCall as simpleFmtCall_, getHash as getHash_, clamp as clamp_} from './worker-globals.js';\nimport {areTextCharactersAvailable as areTextCharactersAvailable_, hasLatin as hasLatin_, isCJK as isCJK_ } from './worker-text.js';\n\n//get rid of compiler mess\nvar globals = globals_;\nvar clamp = clamp_;\nvar simpleFmtCall = simpleFmtCall_;\nvar getHash = getHash_;\nvar hasLatin = hasLatin_, isCJK = isCJK_;\nvar areTextCharactersAvailable = areTextCharactersAvailable_;\n\n\nvar getLayer = function(layerId, featureType, index) {\n    var layer = globals.stylesheetData.layers[layerId];\n    if (layer == null) {\n        logError('wrong-Layer', layerId, null, null, index, featureType);\n        return {};\n    } else {\n        return layer;\n    }\n};\n\n\nvar getLayerExpresionValue = function(layer, value, feature, lod, key, depth) {\n    var finalValue;\n    if (!depth) {\n        depth = 0;\n    }\n    if (depth > 100) {\n        return void(0);\n    }\n\n\n    switch(typeof value) {\n    case 'string':\n\n        if (value.length > 0) {\n\n            switch (value.charAt(0)) {\n                case '#': \n                case '$':\n                case '@':\n                case '&':\n                case '%':\n\n                    finalValue = getLayerPropertyValueInnerString(layer, key, feature, lod, value, depth + 1);\n\n                    if (typeof finalValue == 'undefined') {\n                        logError('wrong-expresion', layer['$$layer-id'], value, value, null, 'feature-property');\n                    }\n\n                    return finalValue;\n            }\n\n\n            return simpleFmtCall(value, (function(str){  \n\n                if (str.length > 0) {\n\n                    switch (str.charAt(0)) {\n                        case '#': \n                        case '$':\n                        case '@':\n                        case '&':\n                        case '%':\n\n                            finalValue = getLayerPropertyValueInnerString(layer, key, feature, lod, str, depth + 1);\n\n                            if (typeof finalValue == 'undefined') {\n                                logError('wrong-expresion', layer['$$layer-id'], value, value, null, 'feature-property');\n                            }\n        \n                            return finalValue;\n                    }\n\n                    if (str.indexOf('{') != -1) {\n\n                        try {\n                            str = str.replace(/'/g, '\"');\n                            finalValue = JSON.parse(str);\n                        } catch(e) {\n                            logError('wrong-expresion', layer['$$layer-id'], value, value, null, 'feature-property');\n                            return \"\";\n                        }\n\n                        if (typeof finalValue == 'undefined') {\n                            logError('wrong-expresion', layer['$$layer-id'], value, value, null, 'feature-property');\n                            return \"\";\n                        } else {\n                            return getLayerPropertyValueInner(layer, key, feature, lod, finalValue, depth + 1);\n                        }\n\n                    } else {\n                        return str;\n                    }\n\n                }\n\n            }));\n        }\n\n        break;\n    }\n    \n    return value;\n};\n\n\nvar hasLayerProperty = function(layer, key) {\n    return (typeof layer[key] !== 'undefined');\n};\n\n\nvar getLayerPropertyValue = function(layer, key, feature, lod) {\n    var value = getLayerPropertyValueInner(layer, key, feature, lod);\n    return validateLayerPropertyValue(layer['$$layer-id'], key, value);\n};\n\n\nvar getLayerPropertyValueInnerString = function(layer, key, feature, lod, value, depth) {\n    var finalValue = value;\n\n    //is it feature property, variable or constant?\n    switch(value.charAt(0)) {\n        case '$': finalValue = feature.properties[value.substr(1)]; break;\n        case '@': finalValue = globals.stylesheetConstants[value]; break;\n        case '%': finalValue = globals.stylesheetVariables[value.substr(1)]; break;\n        case '&': finalValue = globals.stylesheetLocals[value]; break;\n        case '#': \n            //debugger;\n            switch(value) {\n                case '#id':        return feature.id;\n                case '#type':      return globals.featureType;\n                case '#group':     return globals.groupId;\n                case '#lod':       return globals.tileLod;\n                case '#ix':        return globals.tileIX;\n                case '#iy':        return globals.tileIY;\n                case '#tileSize':  return globals.tileSize;\n                case '#pixelSize': return globals.pixelSize;\n                case '#metric':    return globals.metricUnits;\n                case '#dpr':       return globals.pixelFactor;\n                case '#language':  return globals.language;\n            }\n            break;\n    }\n\n    if (value.charAt(0) == '&') {\n        if (typeof finalValue === 'undefined') {\n            finalValue = layer[value];\n            if (typeof finalValue !== 'undefined') {\n\n                if (typeof finalValue === 'string') {\n                    finalValue = getLayerExpresionValue(layer, finalValue, feature, lod, key, depth+1);\n                } else {\n                    if (typeof finalValue !== 'undefined') {\n                        finalValue = getLayerPropertyValueInner(layer, key, feature, lod, finalValue, depth+1);\n                    }\n                }\n\n                globals.stylesheetLocals[value] = finalValue;\n            }\n        }\n    } else { // @,$,%\n\n        if (typeof finalValue === 'string') {\n            finalValue = getLayerExpresionValue(layer, finalValue, feature, lod, key, depth+1);\n        } else {\n            if (typeof finalValue !== 'undefined' && value.charAt(0) == '@') {\n                finalValue = getLayerPropertyValueInner(layer, key, feature, lod, finalValue, depth+1);\n            }\n        }\n\n    }\n\n    return finalValue;\n};\n\nvar getLayerPropertyValueInner = function(layer, key, feature, lod, value, depth) {\n    var index = 0, i, li, finalValue, root, v1, v2, v3, v4;\n    var tmpValue;\n\n    \n    if ((typeof value) === 'undefined') {\n        /*\n        if (layer[key]) {\n            value = JSON.parse(JSON.stringify(layer[key])); //make copy\n        } else {\n            value = layer[key];\n        }*/\n\n        value = layer[key];\n\n        root = true;\n        depth = 0;\n    } else {\n        if (depth > 100) {\n            return void(0);\n        }\n    }\n\n    switch(typeof value) {\n    case 'string':\n\n        if (value.length > 0) {\n            finalValue = getLayerPropertyValueInnerString(layer, key, feature, lod, value, depth);\n\n            if (typeof finalValue !== 'undefined') {\n                return finalValue;\n            } else {\n                logError('wrong-object', layer['$$layer-id'], key, value, null, 'feature-property');\n                \n                if (root) {\n                    return getDefaultLayerPropertyValue(key);\n                } else {\n                    return void(0);\n                }\n            }\n        }\n\n        return value;\n\n    case 'object':\n\n            //is it null?\n        if (value == null) {\n            if (root) {\n                return getDefaultLayerPropertyValue(key);\n            } else {\n                return void(0);\n            }\n        }\n\n        //is it array (rgb, rgba, vec2)?\n        if (Array.isArray(value)) {\n\n            if (key == 'icon-source') {\n                //index++;\n                if (globals.stylesheetBitmaps[value[0]] == null) {\n                    logError('wrong-object', layer['$$layer-id'], key, value, null, 'bitmap');\n\n                    if (root) {\n                        return getDefaultLayerPropertyValue(key);\n                    } else {\n                        return void(0);\n                    }\n                }\n            }\n\n            if (key != 'filter') {\n                tmpValue = new Array(value.length);\n\n                for (i = index, li = value.length; i < li; i++) {\n                    tmpValue[i] = getLayerPropertyValueInner(layer, key, feature, lod, value[i], depth + 1);\n                }\n\n                return tmpValue;\n            }\n\n            return value;\n        }\n\n        var functionName, functionValue, functionError, finalValue;\n\n        for (functionName in value) {\n            break;\n        }\n\n        if (!functionName) {\n            if (root) {\n                return getDefaultLayerPropertyValue(key);\n            } else {\n                return void(0);\n            }\n        }\n\n        functionValue = value[functionName];\n\n        switch (functionName) {\n            case 'if':\n\n                if (!Array.isArray(functionValue) || functionValue.length != 3) {\n                    functionError = true;\n                } else {\n                    if (getFilterResult(functionValue[0], feature, globals.featureType, globals.groupId, layer, key, lod, 0)) {\n                        finalValue = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[1], depth + 1);\n                    } else {\n                        finalValue = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[2], depth + 1);\n                    }\n\n                    if (typeof finalValue === 'undefined') {\n                        functionError = true;\n                    } else {\n                        return finalValue;\n                    }\n                }\n\n                break;\n\n            case 'add':\n            case 'sub':\n            case 'mul':\n            case 'div':\n            case 'mod':\n            case 'pow':\n            case 'tofixed':\n            case 'atan2':\n            case 'random':\n\n                if (!Array.isArray(functionValue) || functionValue.length != 2) {\n                    functionError = true;\n                } else {\n\n                    v1 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[0], depth + 1);\n                    v2 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[1], depth + 1);\n\n                    if (typeof v1 !== 'number' || typeof v2 !== 'number') {\n                        functionError = true;\n                    } else {\n                        switch (functionName) {\n                            case 'add':    return v1 + v2;\n                            case 'sub':    return v1 - v2;\n                            case 'mul':    return v1 * v2;\n                            case 'div':    return v1 / v2;\n                            case 'mod':    return v1 % v2;\n                            case 'pow':    return Math.pow(v1, v2);\n                            case 'atan2':  return Math.atan2(v1, v2);\n                            case 'tofixed': return v1.tofixed(v2);\n                            case 'random': return v1 + Math.random() * (v2-v1);\n                        }\n                    }\n                }\n\n                break;\n\n            case 'clamp':\n\n                if (!Array.isArray(functionValue) || functionValue.length != 3) {\n                    functionError = true;\n                } else {\n\n                    v1 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[0], depth + 1);\n                    v2 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[1], depth + 1);\n                    v3 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[2], depth + 1);\n\n                    if (typeof v1 !== 'number' || typeof v2 !== 'number' || typeof v3 !== 'number') {\n                        functionError = true;\n                    } else {\n                        return clamp(v1, v2, v3);\n                    }\n                }\n\n                break;\n\n            case 'logScale':\n            case 'log-scale':\n\n                if (!Array.isArray(functionValue) || functionValue.length < 2) {\n                    functionError = true;\n                } else {\n\n                    v1 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[0], depth + 1);\n                    v2 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[1], depth + 1);\n                    v3 = 0, v4 = 100;\n\n                    if (functionValue.length > 2) {\n                        v3 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[2], depth + 1);                        \n\n                        if (typeof v3 !== 'number') {\n                            functionError = true;\n                        }\n                    }\n\n                    if (functionValue.length > 3) {\n                        v4 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[3], depth + 1);                        \n\n                        if (typeof v4 !== 'number') {\n                            functionError = true;\n                        }\n                    }\n\n                    if (functionError || typeof v1 !== 'number' || typeof v2 !== 'number') {\n                        functionError = true;\n                    } else {\n                        var imax = v4, imin = v3, smax = v2, s = v1, p, i;\n\n                        if (s > smax) s = smax; \n\n                        p = (imax - imin) / Math.log(smax + 1);\n                        i = p * Math.log(s + 1) + imin;\n\n                        return i;\n                    }\n                }\n\n                break;\n\n\n            case 'sgn':\n            case 'sin':\n            case 'cos':\n            case 'tan':\n            case 'asin':\n            case 'acos':\n            case 'atan':\n            case 'sqrt':\n            case 'abs':\n            case 'log':\n            case 'round':\n            case 'floor':\n            case 'ceil':\n            case 'deg2rad':\n            case 'rad2deg':\n\n                functionValue = getLayerPropertyValueInner(layer, key, feature, lod, functionValue, depth + 1);\n\n                if (typeof functionValue !== 'number') {\n                    functionError = true;\n                } else {\n                    switch (functionName) {\n                        case 'sgn':  return functionValue < 0 ? -1 : 1;\n                        case 'sin':  return Math.sin(functionValue);\n                        case 'cos':  return Math.cos(functionValue);\n                        case 'tan':  return Math.tan(functionValue);\n                        case 'asin': return Math.asin(functionValue);\n                        case 'acos': return Math.acos(functionValue);\n                        case 'atan': return Math.atan(functionValue);\n                        case 'sqrt': return Math.sqrt(functionValue);\n                        case 'abs':  return Math.abs(functionValue);\n                        case 'log':  return Math.log(functionValue);\n                        case 'round': return Math.round(functionValue);\n                        case 'floor': return Math.floor(functionValue);\n                        case 'ceil':  return Math.ceil(functionValue);\n                        case 'deg2rad':  return (functionValue / 180) * Math.PI;\n                        case 'rad2deg':  return (functionValue / Math.PI) * 180;\n                    }\n                }\n\n                break;\n\n            case 'strlen':\n            case 'trim':\n            case 'str2num':\n            case 'lowercase':\n            case 'uppercase':\n            case 'capitalize':\n            case 'has-fonts':\n            case 'has-latin':\n            case 'is-cjk':\n                functionValue = getLayerPropertyValueInner(layer, key, feature, lod, functionValue, depth + 1);\n\n                if (typeof functionValue !== 'string') {\n                    if (typeof functionValue === 'number') {\n                        return functionValue;\n                    } else {\n                        functionError = true;\n                    }\n                } else {\n                    switch (functionName) {\n                        case 'strlen':     return functionValue.length;\n                        case 'trim':       return functionValue.trim();\n                        case 'str2num':    return parseFloat(functionValue);\n                        case 'lowercase':  return functionValue.toLowerCase();\n                        case 'uppercase':  return functionValue.toUpperCase();\n                        case 'capitalize': return functionValue.replace(/(?:^|\\s)\\S/g, function(a) { return a.toUpperCase(); });\n                        case 'has-fonts':  return areTextCharactersAvailable(functionValue);\n                        case 'has-latin':  return hasLatin(functionValue);\n                        case 'is-cjk':     return isCJK(functionValue); \n                    }\n                }\n\n                break;\n\n            case 'find':\n            case 'replace':\n            case 'substr':\n\n                if (Array.isArray(functionValue) && functionValue.length >= 2) {\n\n                    v1 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[0], depth + 1);\n                    v2 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[1], depth + 1);\n\n                    if (functionName == 'find' && typeof v1 === 'string' && typeof v2 === 'string') {\n                        return v1.indexOf(v2);\n                    }\n\n                    if (functionName == 'replace' && functionValue.length == 3) {\n\n                        v3 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[2], depth + 1);\n\n                        if (typeof v1 === 'string' && typeof v2 === 'string' && typeof v3 === 'string') {\n                            return v1.replace(v2,v3);\n                        }\n                    }\n\n                    if (functionName == 'substr') {\n\n                        if (functionValue.length == 2) {\n                            if (typeof v1 === 'string' && typeof v2 === 'number') {\n                                return v1.substr(v2);\n                            }\n                        } else {\n                            v3 = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[2], depth + 1);\n\n                            if (typeof v1 === 'string' && typeof v2 === 'number' && typeof v3 === 'number') {\n                                return v1.substr(v2,v3);\n                            }\n                        }\n                    }\n\n                }\n\n                functionError = true;\n                break;\n\n            case 'min':\n            case 'max':\n\n                if (!Array.isArray(functionValue)) {\n                    functionError = true;\n                } else {\n\n                    finalValue = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[0], depth + 1);\n\n                    for (i = index, li = functionValue.length; i < li; i++) {\n                        tmpValue = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[i], depth + 1);\n\n                        if (typeof tmpValue !== 'number') {\n                            functionError = true;\n                            break;\n                        }\n\n                        if (functionName == 'max') {\n                            finalValue = Math.max(finalValue, tmpValue);\n                        } else {\n                            finalValue = Math.min(finalValue, tmpValue);\n                        }\n                    }\n\n                    return finalValue;\n                }\n\n                break;\n\n            case 'map':\n\n                if (!Array.isArray(functionValue)) {\n                    functionError = true;\n                } else {\n\n                    finalValue = getLayerPropertyValueInner(layer, key, feature, lod, functionValue[0], depth + 1);\n\n                    var mapItems = functionValue[1];\n\n                    if (!Array.isArray(mapItems)) {\n                        functionError = true;\n                    } else {\n\n                        for (i = index, li = mapItems.length; i < li; i++) {\n                            var item = mapItems[i];\n\n                            if (!Array.isArray(item)) {\n                                functionError = true;\n                                break;\n                            } else {\n\n                                var itemValue = getLayerPropertyValueInner(layer, key, feature, lod, item[0], depth + 1);\n\n                                if (finalValue == itemValue) {\n                                    return getLayerPropertyValueInner(layer, key, feature, lod, item[1], depth + 1);\n                                }\n                            }\n                        }\n                    }\n\n                    return getLayerPropertyValueInner(layer, key, feature, lod, functionValue[2], depth + 1);\n                }\n\n                break;\n\n            case 'linear':\n            case 'linear2':\n            case 'discrete':\n            case 'discrete2':\n            case 'lod-scaled':\n\n                //LOD based functions\n                var stops = null;\n                var lodScaledArray = null;\n                var functionValue = lod;\n\n                if (value['lod-scaled'] != null) {\n                    var array = value['lod-scaled'];\n\n                    if ((typeof array[1]) == 'number') {\n                        return array[1] * Math.pow(2*array[2], array[0] - lod);\n                    }\n\n                    stops = array[1];\n                    lodScaledArray = array;\n\n                } if (value['discrete2'] != null || value['linear2'] != null) {\n                    var array = value['discrete2'] || value['linear2'];\n                    stops = array[1];\n                    functionValue = getLayerPropertyValueInner(layer, key, feature, lod, array[0], depth + 1);\n                } else {\n                    stops = value['discrete'] || value['linear'];\n                }\n\n                var lastLod = stops[0][0];\n                var lastValue = stops[0][1];\n                var valueType = (typeof lastValue);\n                var newValue = lastValue;\n\n                var currentLod, currentValue;\n\n                for (var i = 0, li = stops.length; i <= li; i++) {\n\n                    if (i == li) {\n                        newValue = lastValue;\n                        break;\n                    }\n\n                    if (stops[i][0] > functionValue) {\n\n                        if (value['discrete'] != null || value['discrete2'] != null || lodScaledArray != null) { //no interpolation\n                            newValue = lastValue;\n                            break;\n                        } else { //interpolate\n\n                            currentLod = stops[i][0];\n                            currentValue = stops[i][1];\n\n                            if (currentLod == lastLod) { //end of array no interpolation needed\n                                break;\n                            }\n\n                            switch(valueType) {\n\n                            case 'boolean':\n                                lastValue = lastValue ? 1 : 0;\n                                currentValue = lastValue ? 1 : 0;\n                                newValue = lastValue + (currentValue - lastValue) * ((functionValue - lastLod) / (currentLod - lastLod));\n\n                                newValue = newValue > 0.5 ? true : false;\n                                break;\n\n                            case 'number':\n                                newValue = lastValue + (currentValue - lastValue) * ((functionValue - lastLod) / (currentLod - lastLod));\n                                break;\n\n                            case 'object':\n                                newValue = [];\n\n                                for (var j = 0, lj= lastValue.length; j < lj; j++) {\n                                    newValue[j] = lastValue[j] + (currentValue[j] - lastValue[j]) * ((functionValue - lastLod) / (currentLod - lastLod));\n                                }\n\n                                break;\n                            }\n\n                            break;\n                        }\n                    }\n\n                    lastLod = stops[i][0];\n                    lastValue = stops[i][1];\n                }\n\n                if (lodScaledArray != null) {\n                    newValue *= Math.pow(2*lodScaledArray[2], lodScaledArray[0] - functionValue);\n                }\n\n                return newValue;\n\n            default: \n                functionError = true;\n                break;\n        }\n\n        if (functionError) {\n            if (root) {\n                return getDefaultLayerPropertyValue(key);\n            } else {\n                return void(0);\n            }\n        }\n\n\n    case 'number':\n    case 'boolean':\n        return value;\n    }\n\n    if (root) {\n        return getDefaultLayerPropertyValue(key);\n    } else {\n        return void(0);\n    }\n};\n\n\nvar inheritLayer = function(layerId, layer, layerData, stylesheetLayersData, depth) {\n    if (depth > 100) {\n        logError('custom', 'infinite inherit loop in Layer: ' + layerId);\n        return;\n    }\n\n    //do we need inherite Layer?\n    if (layerData['inherit'] != null) {\n        //get inherited Layer\n        var LayerToInherit = stylesheetLayersData['layers'][layerData['inherit']];\n\n        if (LayerToInherit != null) {\n\n            if (LayerToInherit['inherit'] != null) {\n                inheritLayer(layerData['inherit'], layer, LayerToInherit, stylesheetLayersData, depth++);\n            }\n\n            //copy inherited Layer properties\n            for (var key in LayerToInherit) {\n                layer[key] = LayerToInherit[key];\n            }\n        } else {\n            logError('wrong-object', layerId, 'inherit', LayerToInherit, 'Layer');\n            return getDefaultLayerPropertyValue(key);\n        }\n    }\n};\n\n\nvar copyLayer = function(layerId, layer, layerData, stylesheetLayersData) {\n    //do we need inherite Layer?\n    if (layerData['inherit'] != null) {\n        inheritLayer(layerId, layer, layerData, stylesheetLayersData, 0);\n    }\n\n    //copy Layer properties\n    //if inherited properties are present then they will be overwriten\n    for (var key in layerData) {\n        layer[key] = layerData[key];\n    }\n\n    //store layer id\n    layer['$$layer-id'] = layerId;\n};\n\n\nvar logError = function(errorType, layerId, key, value, index, subkey) {\n    if (globals.disableLog) {\n        return;\n    }\n\n    if ((typeof value) == 'object') {\n        value = JSON.stringify(value);\n    }\n    \n    var str = null;\n\n    switch(errorType) {\n    case 'wrong-property-value':\n        str = 'Error: wrong layer property ' + (subkey ? ('\\'' + subkey + '\\'') : '') + ': ' + layerId + '.' + key + ' = ' + value;\n        break;\n\n    case 'wrong-property-value[]':\n        str = 'Error: wrong layer property ' + (subkey ? ('\\'' + subkey + '\\'') : '') + '['+index+']: ' + layerId + '.' + key + ' = ' + value;\n        break;\n\n    case 'wrong-object':\n        str = 'Error: reffered '+ subkey + ' does not exist: ' + layerId + '.' + key + ' = ' + value;\n        break;\n\n    case 'wrong-object[]':\n        str = 'Error: reffered '+ subkey + ' does not exist: ' + layerId + '.' + key + '['+index+'] = ' + value;\n        break;\n\n    case 'wrong-Layer':\n        str = 'Error: reffered '+ subkey + ' Layer does not exist: ' + subkey + '['+index+'].Layer = ' + layerId;\n        break;\n\n    case 'wrong-bitmap':\n        str = 'Error: wrong definition of bitmap: ' + layerId;\n        break;\n\n    case 'custom':\n        str = 'Error: ' + layerId;\n        break;\n    }\n    \n    if (str && globals.log) {\n         // eslint-disable-next-line \n        console.log(str);\n        //throw str;\n    }\n};\n\n\nvar getUnitsNormalizedValue = function(value, screen, fallbackUnits) {\n    if (typeof value === 'string') {\n        if (value == '0' || value.length == 0) return 0;\n\n        value = value.trim();\n\n        if (value.length >= 2) {\n\n            var factor = 1, pf = globals.pixelsPerMM, ipf = globals.invPixelsPerMM;\n\n            switch(value.substr(-2, 2)) {\n                case 'km': factor = screen ? pf * 1000 * 1000 : 1000; break;\n                case 'cm': factor = screen ? pf * 10 : 1/100; break;\n                case 'mm': factor = screen ? pf : 1/1000; break;\n                case 'px': factor = screen ? 1 : ipf * 1/1000; break;\n                case 'pc': factor = screen ? pf * 2.54 * 1/6 : ipf * 1/1000 * 2.54 * 1/6; break;\n                case 'pt': factor = screen ? pf * 2.54 * 1/72 : ipf * 1/1000 * 2.54 * 1/72; break;\n                case 'in': factor = screen ? pf * 2.54 : ipf * 1/1000 * 2.54; break;\n\n                default:\n\n                    if (value.charAt(value.length - 1) == 'm') {\n                        return (screen ? pf * 1000 : 1) * parseFloat(value.substr(0, value.length - 1));\n                    } else {\n                        return parseFloat(value);\n                    }\n\n            }\n\n            return factor * parseFloat(value.substr(0, value.length - 2));\n\n        } else {\n\n            //fallbackUnits\n\n            return parseFloat(value);\n        }\n\n    } else if (typeof value === 'number') {\n        return value;\n    }\n}\n\n\nvar validateValue = function(layerId, key, value, type, arrayLength, min, max, hasUnits) {\n    var i, li;\n\n    //check for object\n    if (value != null && (typeof value) == 'object' && !Array.isArray(value)) {\n        logError('wrong-property-value', layerId, key, value);\n        return getDefaultLayerPropertyValue(key);\n    }\n\n    //check value type\n    if ((typeof value) != type) {\n        //check for exceptions\n        if (!(value === null && (key == 'icon-source' || key == 'visibility' || key == 'label-no-overlap-factor'))) {\n            logError('wrong-property-value', layerId, key, value);\n            return getDefaultLayerPropertyValue(key);\n        }\n    }\n\n    //check value\n    switch(typeof value) {\n\n    case 'object':\n\n        //accepted cases for null value\n        if (value === null && (key == 'line-style-texture' || key == 'icon-source' || 'dynamic-reduce' || 'reduce' ||\n            key == 'hysteresis' || key == 'visibility' || key == 'visibility-abs' || key == 'visibility-rel' || key == 'next-pass')) {\n            return value;\n        }\n\n        //check reduce\n        if (key == 'reduce' || key == 'dynamic-reduce' || key == 'label-no-overlap-factor' || key == 'line-points') {\n            if (Array.isArray(value) && value.length > 0 && (typeof value[0] === 'string')) {\n\n                if (key == 'line-points') {\n\n                    if (!(value[0] == 'vertices' || value[0] == 'by-length' || value[0] == 'by-ratio' || value[0] == 'endpoints' ||\n                          value[0] == 'start' || value[0] == 'end' || value[0] == 'middle' || value[0] == 'midpoint')) {\n                        logError('wrong-property-value', layerId, key, value);\n                        return getDefaultLayerPropertyValue(key);\n                    } \n\n                } else if (key == 'dynamic-reduce') {\n                    if (value[0] == 'by-extenal-param') {\n                        value[0] = globals.reduceMode;\n                    }\n\n                    if (!((value[0] == 'tilt' || value[0] == 'tilt-cos' || value[0] == 'tilt-cos2' || value[0] == 'scr-count' || value[0] == 'scr-count2' ||\n                           value[0] == 'scr-count3' || value[0] == 'scr-count4' || value[0] == 'scr-count5' || value[0] == 'scr-count6' || value[0] == 'scr-count7' || value[0] == 'scr-count8') &&\n                        (typeof value[1] === 'number') && ((typeof value[2] === 'number') || value[0] == 'scr-count4' || value[0] == 'scr-count5' || value[0] == 'scr-count6' || value[0] == 'scr-count7' || value[0] == 'scr-count8'))) {\n                        logError('wrong-property-value', layerId, key, value);\n                        return getDefaultLayerPropertyValue(key);\n                    }\n                } else if (key == 'reduce') {\n                    if (value[0] != 'odd' && value != 'even') {\n                        if ((typeof value[1] !== 'number') || ((value[0] != 'top' || value != 'bottom') && (typeof value[2] !== 'string'))) {\n                            logError('wrong-property-value', layerId, key, value);\n                            return getDefaultLayerPropertyValue(key);\n                        }\n                    }\n                } else if (key == 'label-no-overlap-factor') {\n                    if (!(value[0] == 'direct' || value[0] == 'div-by-dist')) {\n                        logError('wrong-property-value', layerId, key, value);\n                        return getDefaultLayerPropertyValue(key);\n                    }\n                }\n\n            } else {\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        //check multipasss\n        if (key == 'next-pass' || key == 'visibility-switch') {\n            var vswitch = (key == 'visibility-switch');\n            if (Array.isArray(value) && value.length > 0) {\n\n                for (i = 0; i < li; i++) {\n                    var valueItem = value[i];\n\n                    if (!(typeof valueItem == 'object' &&\n                            Array.isArray(valueItem) &&\n                            valueItem.length == 2 &&\n                            typeof valueItem[0] == 'number' &&\n                            (typeof valueItem[1] == 'string' || (vswitch && valueItem[1] === null)))) {\n\n                        logError('wrong-property-value[]', layerId, key, value, i);\n                        return getDefaultLayerPropertyValue(key);\n                    } else {\n                        //fast constant \n                        if (typeof valueItem[1] == 'string' && valueItem[1].charAt(0) == '@') {\n                            if (typeof globals.stylesheetConstants[valueItem[1]] == 'undefined') {\n                                logError('wrong-property-value[]', layerId, key, value, i);\n                                return getDefaultLayerPropertyValue(key);\n                            } else {\n                                valueItem[1] = globals.stylesheetConstants[valueItem[1]];\n                            }\n                        }\n                    }\n                }\n\n            } else {\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        if (key == 'label-font' || key == 'line-label-font') {\n\n            if (!Array.isArray(value) || value.length < 1) {\n                logError('wrong-property-value[]', layerId, key, value, 0);\n                return getDefaultLayerPropertyValue(key);\n            } else {\n                for (i = 0, li = value.length; i < li; i++) {\n                    if (typeof value[i] != 'string' || !globals.fonts[value[i]]) {\n                        logError('wrong-property-value[]', layerId, key, value, 0);\n                        return getDefaultLayerPropertyValue(key);\n                    }\n                }\n            }\n\n            return value;\n        }\n\n        //check array\n        if (arrayLength != null) {\n            if (Array.isArray(value) && (value.length == arrayLength || ((key == 'icon-stick' || 'label-stick') && value.length >= 7) )) {\n\n                //validate array values\n                i = 0;\n\n                if (key == 'icon-source' || key == 'line-style-texture') {\n                    if (typeof value[0] != 'string') {\n                        logError('wrong-property-value[]', layerId, key, value, 0);\n                        return getDefaultLayerPropertyValue(key);\n                    }\n\n                    if (globals.stylesheetBitmaps[value[0]] == null) {\n                        logError('wrong-object', layerId, key, value, null, 'bitmap');\n                        return getDefaultLayerPropertyValue(key);\n                    }\n\n                    i = 1;\n                }\n\n                for (li = value.length; i < li; i++) {\n                    if (typeof value[i] != 'number') {\n                        logError('wrong-property-value[]', layerId, key, value, i);\n                        return getDefaultLayerPropertyValue(key);\n                    }\n                }\n\n                if ((key == 'icon-stick' || 'label-stick') && value.length == 7) {\n                    value[7] = 0;\n                }\n\n                return value;\n            } else {\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        return value;\n\n    case 'string':\n\n        if (key == 'line-type' || key == 'point-type') {\n            switch(value) {\n            case 'screen':\n            case 'flat':\n            case 'screen-flat': return value;\n            default:\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        if (key == 'line-label-type') {\n            switch(value) {\n            case 'flat':\n            case 'screen-flat': return value;\n            default:\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        //validate line Layer enum\n        if (key == 'line-style') {\n            switch(value) {\n            case 'solid':\n            case 'texture': return value;\n            default:\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        if (key == 'label-size-units') {\n            switch(value) {\n            case 'pixels':\n            case 'points': return value;\n            default:\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        if (key == 'line-width-units') {\n            switch(value) {\n            case 'pixels':\n            case 'points':\n            case 'meters':\n            case 'ratio': return value;\n            default:\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        //validate origin enum\n        if (key == 'label-origin' || key == 'icon-origin') {\n            switch(value) {\n            case 'top-left':\n            case 'top-right':\n            case 'top-center':\n            case 'center-left':\n            case 'center-right':\n            case 'center-center':\n            case 'bottom-left':\n            case 'bottom-right':\n            case 'bottom-center':   return value;\n            default:\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        //validate align enum\n        if (key == 'label-align') {\n            switch(value) {\n            case 'left':\n            case 'right':\n            case 'center':  return value;\n            default:\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n        return value;\n\n    case 'number':\n\n        if (value > max || value < min) {\n            logError('wrong-property-value', layerId, key, value);\n            return getDefaultLayerPropertyValue(key);\n        }\n\n        return value;\n\n    case 'boolean':\n        return value;\n    }\n};\n\n\nvar validateLayerPropertyValue = function(layerId, key, value) {\n\n    switch(key) {\n\n    case 'inherit' :        return validateValue(layerId, key, value, 'string');\n    case 'reduce':          return validateValue(layerId, key, value, 'object');\n    case 'dynamic-reduce':  return validateValue(layerId, key, value, 'object');\n    case 'line-points':     return validateValue(layerId, key, value, 'object');\n\n    case 'line':              return validateValue(layerId, key, value, 'boolean');\n    case 'line-type':         return validateValue(layerId, key, value, 'string');\n    case 'line-flat':         return validateValue(layerId, key, value, 'boolean');\n    case 'line-width':        return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n    case 'line-width-units':  return validateValue(layerId, key, value, 'string');\n    case 'line-color':        return validateValue(layerId, key, value, 'object', 4, 0, 255);\n    case 'line-style':        return validateValue(layerId, key, value, 'string');\n    case 'line-style-texture':    return validateValue(layerId, key, value, 'object', 3, -Number.MAX_VALUE, Number.MAX_VALUE);\n    case 'line-style-background': return validateValue(layerId, key, value, 'object', 4, 0, 255);\n\n    case 'line-label':         return validateValue(layerId, key, value, 'boolean');\n    case 'line-label-type':    return validateValue(layerId, key, value, 'string');\n    case 'line-label-source':  return validateValue(layerId, key, value, 'string');\n    case 'line-label-color':   return validateValue(layerId, key, value, 'object', 4, 0, 255);\n    case 'line-label-color2':  return validateValue(layerId, key, value, 'object', 4, 0, 255);\n    case 'line-label-size':    return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE, true);\n    case 'line-label-offset':  return validateValue(layerId, key, value, 'number', null, -Number.MAX_VALUE, Number.MAX_VALUE);\n    case 'line-label-spacing': return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n    case 'line-label-line-height': return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n    case 'line-label-no-overlap':  return validateValue(layerId, key, value, 'boolean');\n    case 'line-label-no-overlap-factor': return validateValue(layerId, key, value, 'object');\n    case 'line-label-no-overlap-margin': return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n\n    case 'point':        return validateValue(layerId, key, value, 'boolean');\n    case 'point-type':   return validateValue(layerId, key, value, 'string');\n    case 'point-flat':   return validateValue(layerId, key, value, 'boolean');\n    case 'point-radius': return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n    case 'point-Layer':  return validateValue(layerId, key, value, 'string');\n\n    case 'point-color':  return validateValue(layerId, key, value, 'object', 4, 0, 255);\n\n    case 'icon':             return validateValue(layerId, key, value, 'boolean');\n    case 'icon-source':      return validateValue(layerId, key, value, 'object', 5, -Number.MAX_VALUE, Number.MAX_VALUE);\n    case 'icon-scale':       return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n    case 'icon-offset':      return validateValue(layerId, key, value, 'object', 2, -Number.MAX_VALUE, Number.MAX_VALUE);\n    case 'icon-origin':      return validateValue(layerId, key, value, 'string');\n    case 'icon-stick':       return validateValue(layerId, key, value, 'object', 8, -Number.MAX_VALUE, Number.MAX_VALUE);\n    case 'icon-color':       return validateValue(layerId, key, value, 'object', 4, 0, 255);\n    case 'icon-no-overlap':  return validateValue(layerId, key, value, 'boolean');\n    case 'icon-no-overlap-factor': return validateValue(layerId, key, value, 'object');\n    case 'icon-no-overlap-margin': return validateValue(layerId, key, value, 'object', 2, -Number.MAX_VALUE, Number.MAX_VALUE);\n\n    case 'label':             return validateValue(layerId, key, value, 'boolean');\n    case 'label-color':       return validateValue(layerId, key, value, 'object', 4, 0, 255);\n    case 'label-color2':      return validateValue(layerId, key, value, 'object', 4, 0, 255);\n    case 'label-source':      return validateValue(layerId, key, value, 'string');\n    case 'label-size':        return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n    case 'label-size-units':  return validateValue(layerId, key, value, 'string');\n    case 'label-spacing':     return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n    case 'label-line-height': return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n    case 'label-offset':      return validateValue(layerId, key, value, 'object', 2, -Number.MAX_VALUE, Number.MAX_VALUE);\n    case 'label-origin':      return validateValue(layerId, key, value, 'string');\n    case 'label-align':       return validateValue(layerId, key, value, 'string');\n    case 'label-stick':       return validateValue(layerId, key, value, 'object', 8, -Number.MAX_VALUE, Number.MAX_VALUE);\n    case 'label-width':       return validateValue(layerId, key, value, 'number', null, 0.0001, Number.MAX_VALUE);\n    case 'label-no-overlap':  return validateValue(layerId, key, value, 'boolean');\n    case 'label-no-overlap-factor': return validateValue(layerId, key, value, 'object');\n    case 'label-no-overlap-margin': return validateValue(layerId, key, value, 'object', 2, -Number.MAX_VALUE, Number.MAX_VALUE);\n\n    case 'polygon':             return validateValue(layerId, key, value, 'boolean');\n    case 'polygon-style':       return validateValue(layerId, key, value, 'string');\n    case 'polygon-use-stencil': return validateValue(layerId, key, value, 'boolean');\n    case 'polygon-culling':     return validateValue(layerId, key, value, 'string');\n    case 'polygon-color':       return validateValue(layerId, key, value, 'object', 4, 0, 255);\n    case 'polygon-extrude':     return validateValue(layerId, key, value, 'number', 0, -Number.MAX_VALUE, Number.MAX_VALUE);\n\n    case 'z-index':        return validateValue(layerId, key, value, 'number', null, -Number.MAX_VALUE, Number.MAX_VALUE);\n    case 'zbuffer-offset': return validateValue(layerId, key, value, 'object', 3, 0, Number.MAX_VALUE);\n\n    case 'selected-hover-layer':  return validateValue(layerId, key, value, 'string');\n    case 'selected-layer':  return validateValue(layerId, key, value, 'string');\n    case 'hover-event':     return validateValue(layerId, key, value, 'boolean');\n    case 'hover-layer':     return validateValue(layerId, key, value, 'string');\n    case 'enter-event':     return validateValue(layerId, key, value, 'boolean');\n    case 'leave-event':     return validateValue(layerId, key, value, 'boolean');\n    case 'click-event':     return validateValue(layerId, key, value, 'boolean');\n    case 'draw-event':      return validateValue(layerId, key, value, 'boolean');\n    case 'advanced-hit':    return validateValue(layerId, key, value, 'boolean');\n    case 'export-geometry': return validateValue(layerId, key, value, 'boolean');\n    case 'pack':            return validateValue(layerId, key, value, 'boolean');\n\n    case 'visible':           return validateValue(layerId, key, value, 'boolean');\n    case 'visibility':        return validateValue(layerId, key, value, 'number', null, 0.00001, Number.MAX_VALUE);\n    case 'visibility-abs':    return validateValue(layerId, key, value, 'object', 2, 0.00001, Number.MAX_VALUE);\n    case 'visibility-rel':    return validateValue(layerId, key, value, 'object', 4, 0.00001, Number.MAX_VALUE);\n    case 'visibility-switch': return validateValue(layerId, key, value, 'object');\n\n    case 'hysteresis':  return validateValue(layerId, key, value, 'object');\n    case 'culling':     return validateValue(layerId, key, value, 'number', 180, 0.0001, 180);\n    case 'next-pass':   return validateValue(layerId, key, value, 'object');\n\n    case 'importance-source':  return validateValue(layerId, key, value, 'string');\n    case 'importance-weight':  return validateValue(layerId, key, value, 'number', null, 0, Number.MAX_VALUE);\n\n    }\n\n    return value; //custom property\n};\n\n\nvar getDefaultLayerPropertyValue = function(key) {\n    switch(key) {\n    case 'inherit':          return '';\n    case 'filter':           return null;\n    case 'reduce':           return null;\n    case 'dynamic-reduce':   return null;\n    case 'line-points':      return ['vertices',0,0];\n\n    case 'line':             return false;\n    case 'line-type':        return 'screen';\n    case 'line-flat':        return false;\n    case 'line-width':       return 1;\n    case 'line-width-units': return 'meters';\n    case 'line-color':       return [255,255,255,255];\n    case 'line-style':       return 'solid';\n    case 'line-style-texture':    return null;\n    case 'line-style-background': return [0,0,0,0];\n\n    case 'line-label':         return false;\n    case 'line-label-type':    return 'flat'; //'screen-flat';\n    case 'line-label-font':    return ['#default'];\n    case 'line-label-color':   return [255,255,255,255];\n    case 'line-label-color2':  return [0,0,0,255];\n    case 'line-label-outline': return [0.27,0.75,2.2,2.2];\n    case 'line-label-source':  return '$name';\n    case 'line-label-size':    return 1;\n    case 'line-label-offset':  return 0;\n    case 'line-label-spacing': return 1;\n    case 'line-label-line-height': return 1;\n    case 'line-label-no-overlap':  return true;\n    case 'line-label-no-overlap-factor': return null;\n    case 'line-label-no-overlap-margin': return 1.1;\n\n    case 'point':        return false;\n    case 'point-type':   return 'screen';\n    case 'point-flat':   return false;\n    case 'point-radius': return 1;\n    case 'point-Layer':  return 'solid';\n    case 'point-color':  return [255,255,255,255];\n\n    case 'icon':         return false;\n    case 'icon-source':  return null;\n    case 'icon-scale':   return 1;\n    case 'icon-offset':  return [0,0];\n    case 'icon-origin':  return 'bottom-center';\n    case 'icon-stick':   return [0,0,0,255,255,255,255,0];\n    case 'icon-color':   return [255,255,255,255];\n    case 'icon-no-overlap':  return false;\n    case 'icon-no-overlap-factor': return null;\n    case 'icon-no-overlap-margin': return [5,5];\n\n    case 'label':             return false;\n    case 'label-font':        return ['#default'];\n    case 'label-color':       return [255,255,255,255];\n    case 'label-color2':      return [0,0,0,255];\n    case 'label-outline':     return [0.27,0.75,2.2,2.2];\n    case 'label-source':      return '$name';\n    case 'label-size':        return 10;\n    case 'label-size-units':  return 'pixels';\n    case 'label-spacing':     return 1;\n    case 'label-line-height': return 1;\n    case 'label-offset':      return [0,0];\n    case 'label-origin':      return 'bottom-center';\n    case 'label-align':       return 'center';\n    case 'label-stick':       return [0,0,0,255,255,255,255,0];\n    case 'label-width':       return 200;\n    case 'label-no-overlap':  return true;\n    case 'label-no-overlap-factor': return null;\n    case 'label-no-overlap-margin': return [5,5];\n       \n    case 'polygon':             return false;\n    case 'polygon-style':       return 'solid';\n    case 'polygon-use-stencil': return true;\n    case 'polygon-culling':     return 'none';\n    case 'polygon-color':       return [255,255,255,255];\n    case 'polygon-extrude':     return 0;\n\n    case 'z-index':        return 0;\n    case 'zbuffer-offset': return [0,0,0];\n\n    case 'selected-hover-layer':  return '';\n    case 'selected-layer':  return '';\n    case 'hover-event':     return false;\n    case 'hover-layer':     return '';\n    case 'enter-event':     return false;\n    case 'leave-event':     return false;\n    case 'click-event':     return false;\n    case 'draw-event':      return false;\n    case 'advanced-hit':    return false;\n    case 'export-geometry': return false;\n    case 'pack':            return false;\n\n    case 'visible':           return true;\n    case 'visibility':        return null;\n    case 'visibility-abs':    return null;\n    case 'visibility-rel':    return null;\n    case 'visibility-switch': return null;\n\n    case 'hysteresis':      return null;\n    case 'culling':         return 180;\n    case 'next-pass':       return null;\n\n    case 'importance-source':  return null; //''\n    case 'importance-weight':  return 1;\n    }\n};\n\n\nfunction getFilterResult(filter, feature, featureType, group, layer, key, lod, depth, fast) {\n    var result, i, li;\n\n    if (!filter || !Array.isArray(filter)) {\n        return false;\n    }\n\n    if (depth > 100) {\n        return false;\n    }\n\n    switch(filter[0]) {\n        case 'all': \n            for (i = 1, li = filter.length; i < li; i++) {\n                result = getFilterResult(filter[i], feature, featureType, group, layer, key, lod, depth + 1, fast);\n\n                if (!result) {\n                    return false;\n                }\n            }\n               \n            return true;                         \n\n        case 'any':\n            for (i = 1, li = filter.length; i < li; i++) {\n                result = getFilterResult(filter[i], feature, featureType, group, key, lod, depth + 1, fast);\n\n                if (result) {\n                    return true;\n                }\n            }\n               \n            return false;                         \n\n        case 'none':\n            for (i = 1, li = filter.length; i < li; i++) {\n                result = getFilterResult(filter[i], feature, featureType, group, key, lod, depth + 1, fast);\n\n                if (result) {\n                    return false;\n                }\n            }\n               \n            return true;\n                              \n        case 'skip': return false; \n    }\n\n    var value, value2;\n\n    if (fast && filter[2]) {\n        value = filter[1];\n    } else {\n        globals.disableLog = (filter[0] == 'has' || filter[0] == '!has');\n        value = getLayerPropertyValueInner(layer, key, feature, lod, filter[1], 0);\n        globals.disableLog = false;\n    }\n\n    switch(filter[0]) {\n    case '==':\n    case '!=':\n    case '>=':\n    case '<=':\n    case '>':\n    case '<':\n        value2 = filter[fast ? 3 : 2];\n\n        if (typeof value2 == 'undefined') {\n            return false;\n        }\n\n        if (!(fast && filter[4])) {\n            value2 = getLayerPropertyValueInner(layer, key, feature, lod, value2, 0);\n        }\n\n        break;\n    }\n\n    switch(filter[0]) {\n    case '==': return (value == value2);\n    case '!=': return (value != value2);\n    case '>=': return (value >= value2);\n    case '<=': return (value <= value2);\n    case '>': return (value > value2);\n    case '<': return (value < value2);\n        \n    case 'has': return (typeof value != 'undefined');\n    case '!has': return (typeof value == 'undefined');\n        \n    case 'in':\n        for (i = fast ? 3 : 2, li = filter.length; i < li; i++) {\n            if (filter[i] == value) {\n                return true;\n            }\n        } \n        return false;\n        \n    case '!in':\n        for (i = fast ? 3 : 2, li = filter.length; i < li; i++) {\n            if (filter[i] == value) {\n                return false;\n            }\n        } \n        return true;\n    }            \n\n    return false;    \n}\n\n\nfunction isSimpleValue(value) {\n    switch(typeof value) {\n        case 'number':  return true;\n        case 'string': \n            \n            if (value.length > 0) {\n                switch(value.charAt(0)) {\n                    case '#': \n                    case '$':\n                    case '@':\n                    case '&':\n                        break;\n                    \n                    default: \n\n                        if (value.indexOf('{') == -1) {\n                            return true;\n                        }\n\n                        break;\n                }\n            } else {\n                return true;\n            }\n\n            break;\n    }\n\n    return false;\n}\n\n\nfunction makeFasterFilter(filter) {\n    if (!filter || !Array.isArray(filter)) {\n        return filter;\n    }\n\n    var i, li, value, simple, result = [filter[0]];\n\n    switch(filter[0]) {\n    case 'all': \n    case 'any':\n    case 'none':\n    case 'skip':\n        for (i = 1, li = filter.length; i < li; i++) {\n            result[i] = makeFasterFilter(filter[i]);\n        }\n\n        return result;\n    }\n\n    result[1] = filter[1];\n    result[2] = isSimpleValue(filter[1]);\n\n    switch(filter[0]) {\n    case '==':\n    case '!=':\n    case '>=':\n    case '<=':\n    case '>':\n    case '<':\n        result[3] = filter[2];\n        result[4] = isSimpleValue(filter[2]);\n        break;\n\n    case 'in':\n    case '!in':\n\n        for (i = 2, li = filter.length; i < li; i++) {\n            result[i+1] = filter[i];\n        } \n\n    }\n\n    return result;\n}\n\nvar processLayer = function(layerId, layerData, stylesheetLayersData) {\n    var layer = {}, key, value;\n\n    //copy Layer and inherit Layer if needed\n    copyLayer(layerId, layer, layerData, stylesheetLayersData);\n\n    //replace constants and validate properties\n    for (key in layer) {\n\n        value = layer[key];\n\n        //replace constant with value\n        if ((typeof value) == 'string') {\n            if (value.length > 0) {\n                //is it constant?\n                switch(value.charAt(0)) {\n                    case '@':\n                        if (globals.stylesheetConstants[value] != null) {\n                            //replace constant with value\n                            layer[key] = globals.stylesheetConstants[value];\n                        } else {\n                            logError('wrong-object', layerId, key, value, null, 'constant');\n\n                            //replace constant with deafault value\n                            layer[key] = getDefaultLayerPropertyValue(key);\n                        }\n                        break;\n\n                    case '%':  // reserved for variators\n\n                        if (globals.stylesheetLocals[value] != null) {\n                            if (!layer['$$layer-variables']) {\n                                layer['$$layer-variables'] = {};\n                            }\n\n                            layer['$$layer-variables'][key] = value;\n\n                            //replace variable with value\n                            layer[key] = globals.stylesheetLocals[value];\n\n                        } else {\n                            logError('wrong-object', layerId, key, value, null, 'variable');\n\n                            //replace constant with deafault value\n                            layer[key] = getDefaultLayerPropertyValue(key);\n                        }\n                        break;\n                }\n            }\n        }\n\n        //copy constats to vswitch\n        if (key == 'visibility-switch') {\n            if (Array.isArray(value) && value.length > 0) {\n                for (var i = 0, li = value.length; i < li; i++) {\n                    var valueItem = value[i];\n                    var wrong = false;\n\n                    if (!(typeof valueItem == 'object' && Array.isArray(valueItem) && valueItem.length == 2)) {\n                        wrong = true;\n                    } else {\n                        if (typeof valueItem[0] == 'string' && valueItem[0].charAt(0) == '@') {\n                            if (typeof globals.stylesheetConstants[valueItem[0]] == 'undefined') {\n                                wrong = true;\n                            } else {\n                                valueItem[0] = globals.stylesheetConstants[valueItem[0]];\n                            }\n                        }\n\n                        if (!(typeof valueItem[0] == 'number' && (typeof valueItem[1] == 'string' || valueItem[1] === null))) {\n                            wrong = true;\n                        }\n                    }\n\n                    if (wrong) {\n                        logError('wrong-property-value[]', layerId, key, value, i);\n                    }\n                }\n\n            } else {\n                logError('wrong-property-value', layerId, key, value);\n                return getDefaultLayerPropertyValue(key);\n            }\n        }\n\n    }\n\n    return layer;\n};\n\n\nvar processStylesheet = function(stylesheetLayersData) {\n    var key;\n    globals.stylesheetBitmaps = {};\n    globals.stylesheetFonts = {};\n    globals.stylesheetConstants = stylesheetLayersData['constants'] || {};\n    globals.stylesheetVariables = stylesheetLayersData['variables'] || {};\n    globals.stylesheetLocals = {};\n\n    //get bitmaps\n    var bitmaps = stylesheetLayersData['bitmaps'] || {};\n\n    //build map\n    for (key in bitmaps) {\n        var bitmap = bitmaps[key];\n        //var skip = false;\n\n        if ((typeof bitmap) == 'string') {\n            bitmap = {'url':bitmap, 'hash': getHash(bitmap) };\n        } else if((typeof bitmap) == 'object'){\n            if (bitmap['url'] == null) {\n                bitmap['hash'] = 'null';\n                logError('wrong-bitmap', key);\n            } else {\n                bitmap['hash'] = getHash(bitmap['url']);\n            }\n        } else {\n            logError('wrong-bitmap', key);\n        }\n\n        globals.stylesheetBitmaps[key] = bitmap;\n    }\n\n    //load bitmaps\n    postMessage({'command':'loadBitmaps', 'bitmaps': globals.stylesheetBitmaps});\n\n    //remove urls\n    bitmaps = globals.stylesheetBitmaps;\n\n    for (key in bitmaps) {\n        bitmap = bitmaps[key];\n        bitmap['url'] = null;\n    }\n\n    //get fonts\n    var fonts = stylesheetLayersData['fonts'] || {};\n\n    //build map\n    for (key in fonts) {\n        var font = fonts[key];\n\n        if ((typeof font) == 'string') {\n            font = {'url':font};\n        } else if((typeof font) == 'object'){\n            if (font['url'] == null) {\n                logError('wrong-font', key);\n            }\n        } else {\n            logError('wrong-font', key);\n        }\n\n        globals.stylesheetFonts[key] = font;\n    }\n\n    //load fonts\n    postMessage({'command':'loadFonts', 'fonts': globals.stylesheetFonts});\n\n\n    //get layers\n    globals.stylesheetData = {\n        layers : {}\n    };\n\n    var layers = stylesheetLayersData['layers'] || {};\n\n    globals.stylesheetLayers = globals.stylesheetData.layers;\n\n    //process layers\n    for (key in layers) {\n        globals.stylesheetData.layers[key] = processLayer(key, layers[key], stylesheetLayersData);\n    }\n};\n\n\nexport {getFilterResult, processStylesheet, getLayer, getLayerPropertyValue, getLayerExpresionValue, getLayerPropertyValueInner, makeFasterFilter, hasLayerProperty};\n","\nimport {globals as globals_, stringToUint8Array as stringToUint8Array_ } from './worker-globals.js';\n\n//get rid of compiler mess\nvar globals = globals_, stringToUint8Array = stringToUint8Array_;\nvar tmpVertexBuffer = new Uint8Array(65536*4*4*4*4);\nvar tmpVertexBuffer2 = new Uint8Array(65536*4*4*4*4);\nvar packedEvents = [];\nvar packedTransferables = [];\n\n\nfunction postPackedMessage(message, transferables) {\n\n    if (globals.config.mapPackLoaderEvents) {\n\n        packedEvents.push(message);\n\n        if (transferables) {\n            packedTransferables = packedTransferables.concat(transferables);\n        }\n\n    } else {\n\n        if (transferables) {\n            postMessage(message, transferables);\n        } else {\n            postMessage(message);\n        }\n    }\n}\n\n\nfunction postGroupMessageFast(command, type, message, buffers, signature) {\n\n    var message2 = stringToUint8Array(JSON.stringify(message));\n    var messageSize = 1+1+4+message2.byteLength, i, li;\n\n    for (i = 0, li = buffers.length; i < li; i++) {\n        messageSize += 4+buffers[i].byteLength;\n    }\n\n    var buff = new Uint8Array(messageSize);\n    var view = new DataView(buff.buffer), index = 0, index2 = 0;\n\n    view.setUint8(index, command); index += 1;\n    view.setUint8(index, type); index += 1;\n    view.setUint32(index, message2.byteLength); index += 4;\n    buff.set(message2, index); index += message2.byteLength;\n    index2 = index;\n\n    for (i = 0, li = buffers.length; i < li; i++) {\n        view.setUint32(index, buffers[i].length); index += 4;\n        buff.set( new Uint8Array(buffers[i].buffer), index); index += buffers[i].byteLength;\n    }\n\n    postGroupMessageDirect(command, type, buff.buffer, index2, signature, message['hitable'], message['totalPoints'], (type == VTS_WORKER_TYPE_LINE_LABEL) ? message : null);\n}\n\n\nfunction postGroupMessageLite(command, type, number) {\n    var messageSize = 1+1+4, index = 0;\n\n    var buff = new ArrayBuffer(messageSize);\n    var view = new DataView(buff), index = 0;\n\n    view.setUint8(index, command); index += 1;\n    view.setUint8(index, type); index += 1;\n    view.setUint32(index, (number ? number : 0)); index += 4;\n\n    postGroupMessageDirect(command, type, buff, index, \"\");\n}\n\n\nfunction postGroupMessageDirect(command, type, message, buffersIndex, signature, hitable, totalPoints, job2) {\n\n    if (globals.messageBufferIndex >= globals.messageBufferSize) { \n        var oldBuffer = globals.messageBuffer; \n        globals.messageBufferSize += 65536;\n        globals.messageBuffer = new Array(globals.messageBufferSize);\n        \n        for (var i = 0, li = globals.messageBufferIndex; i < li; i++) {\n            globals.messageBuffer[i] = oldBuffer[i];\n        }\n    }\n    \n    globals.messageBuffer[globals.messageBufferIndex] = { command: command, type: type, job : message, buffersIndex: buffersIndex, signature: signature, hitable: hitable, totalPoints: totalPoints, job2: job2 };\n    globals.messageBufferIndex++;\n    globals.messagePackSize += message.byteLength;\n}\n\n\nfunction setToTmpBuffer(index, buffer2, offset) {\n    var buffer = (index == 1) ? tmpVertexBuffer2 : tmpVertexBuffer;\n\n    if (buffer.byteLength <= buffer2.byteLength + offset) {\n        var buffer3 = new Uint8Array(buffer.byteLength * 2);\n        buffer3.set(buffer, 0);\n        buffer = buffer3;\n\n        if (index == 1) {\n            tmpVertexBuffer2 = buffer;\n        } else {\n            tmpVertexBuffer = buffer;\n        }\n    }\n\n    buffer.set(buffer2, offset);\n}\n\n\nfunction optimizeGroupMessages() {\n\n    //loop messages\n    var messages = globals.messageBuffer;\n    var j, lk, k, message2, job2, bufferSize, buffer, view, index, length, buff, buff2, index, count, totalVertices;\n\n\n    for (var i = 0, li = globals.messageBufferIndex; i < li; i++) {\n        var message = messages[i];\n        var job = message.job;\n        var type = message.type;\n        var signature = message.signature;\n\n        //console.log('command: ' + message.command + ' type:' + message.type);\n        \n        if (!message.hitable && !message.reduced && \n            (type >= VTS_WORKER_TYPE_FLAT_LINE && type <= VTS_WORKER_TYPE_POLYGON)) {\n            \n            switch(type) {\n            case VTS_WORKER_TYPE_POLYGON:\n            case VTS_WORKER_TYPE_FLAT_LINE:\n                count = 0;\n\n                //get message vertices length and copy vertices to buffer\n                length = (new DataView(message.job)).getUint32(message.buffersIndex) * 4;\n\n                //tmpVertexBuffer.set(new Uint8Array(message.job, message.buffersIndex+4, length), 0);\n                setToTmpBuffer(0, new Uint8Array(message.job, message.buffersIndex+4, length), 0);\n                bufferSize = length;\n\n                for (j = i + 1; j < li; j++) {\n                    message2 = messages[j];\n\n                    if (message2.signature == signature) {\n                        message2.reduced = true;\n                        count++;\n\n                        //get message2 vertices length\n                        length = (new DataView(message2.job)).getUint32(message2.buffersIndex) * 4;\n\n                        // copy vertices to buffer\n                        //tmpVertexBuffer.set(new Uint8Array(message2.job, message2.buffersIndex+4, length), bufferSize);\n                        setToTmpBuffer(0, new Uint8Array(message2.job, message2.buffersIndex+4, length), bufferSize);\n                        bufferSize += length;\n                    }\n                }\n\n                if (count > 0) {\n\n                    //create new message with merged vertices\n                    buffer = new Uint8Array(message.buffersIndex+2*(4+bufferSize));\n                    view = new DataView(buffer.buffer);\n                    buffer.set(new Uint8Array(message.job, 0, message.buffersIndex), 0);\n\n                    view.setUint32(message.buffersIndex, bufferSize / 4);\n                    buffer.set(new Uint8Array(tmpVertexBuffer.buffer, 0, bufferSize), message.buffersIndex + 4);\n\n                    globals.messagePackSize -= message.job.byteLength;\n                    globals.messagePackSize += buffer.byteLength;\n                    message.job = buffer.buffer;\n                }\n\n                break;\n                    \n            case VTS_WORKER_TYPE_PIXEL_LINE:\n            case VTS_WORKER_TYPE_LINE_LABEL:\n            case VTS_WORKER_TYPE_FLAT_RLINE:\n\n                count = 0;\n                totalVertices = 0;\n\n                //get message vertices length and copy vertices to buffer\n                length = (new DataView(message.job)).getUint32(message.buffersIndex);\n                //console.log('count: ' + count + ' totalPoints:' + message.totalPoints + ' length: ' + length);\n                length *= 4;\n                totalVertices += length;\n\n\n                //tmpVertexBuffer.set(new Uint8Array(message.job, message.buffersIndex+4, length), 0);\n                //tmpVertexBuffer2.set(new Uint8Array(message.job, message.buffersIndex+4+length+4, length), 0);\n                setToTmpBuffer(0, new Uint8Array(message.job, message.buffersIndex+4, length), 0);\n                setToTmpBuffer(1, new Uint8Array(message.job, message.buffersIndex+4+length+4, length), 0);\n                bufferSize = length;\n\n                for (j = i + 1; j < li; j++) {\n                    message2 = messages[j];\n\n                    if (message2.signature == signature) {\n                        message2.reduced = true;\n                        globals.messagePackSize -= message2.job.byteLength;\n                        count++;\n\n                        //get message2 vertices length\n                        length = (new DataView(message2.job)).getUint32(message2.buffersIndex);\n                        //console.log('count:' + count + ' totalPoints:' + message2.totalPoints + ' length:' + length + ' jobl:' + message2.job.byteLength + ' remaning:' + (message2.job.byteLength - (message2.buffersIndex+4)) + ' bufferSize:' + bufferSize + ' totalVertices:' + totalVertices);\n                        length *= 4;\n                        totalVertices += length;\n\n\n                        // copy vertices to buffer\n                        //tmpVertexBuffer.set(new Uint8Array(message2.job, message2.buffersIndex+4, length), bufferSize);\n                        setToTmpBuffer(0, new Uint8Array(message2.job, message2.buffersIndex+4, length), bufferSize);\n\n                        // copy normals to buffer\n                        //tmpVertexBuffer2.set(new Uint8Array(message2.job, message2.buffersIndex+4+length+4, length), bufferSize);\n                        setToTmpBuffer(1, new Uint8Array(message2.job, message2.buffersIndex+4+length+4, length), bufferSize);\n                        bufferSize += length;\n\n                        if (type == VTS_WORKER_TYPE_LINE_LABEL) {\n                            var files = message.job2['files'];\n                            var files2 = message2.job2['files'];\n\n                            for (k = 0, lk = files2.length; k < lk; k++) {\n                                if (!files[k]) {\n                                    files[k] = [];\n                                }\n\n                                for (var m = 0, lm = files2[k].length; m < lm; m++) {\n                                    if (files[k].indexOf(files2[k][m]) == -1) {\n                                        files[k].push(files2[k][m]);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                if (count > 0) {\n\n                    //create new message with merged vertices\n\n                    if (type == VTS_WORKER_TYPE_LINE_LABEL) { //we have to rebuild header\n                        var buffjob = stringToUint8Array(JSON.stringify(message.job2));\n\n                        buffer = new Uint8Array(1+1+4+buffjob.byteLength+2*(4+bufferSize));\n                        view = new DataView(buffer.buffer), index = 0;\n\n                        view.setUint8(index, message.command); index += 1;\n                        view.setUint8(index, type); index += 1;\n                        view.setUint32(index, buffjob.byteLength); index += 4;\n                        buffer.set(buffjob, index); index += buffjob.byteLength;\n\n                        message.buffersIndex = index;\n                    } else {\n                        buffer = new Uint8Array(message.buffersIndex+2*(4+bufferSize));\n                        view = new DataView(buffer.buffer);\n                        buffer.set(new Uint8Array(message.job, 0, message.buffersIndex), 0);\n                    }\n\n                    view.setUint32(message.buffersIndex, bufferSize / 4);\n                    buffer.set(new Uint8Array(tmpVertexBuffer.buffer, 0, bufferSize), message.buffersIndex + 4);\n\n                    view.setUint32(message.buffersIndex + 4 + bufferSize, bufferSize / 4);\n                    buffer.set(new Uint8Array(tmpVertexBuffer2.buffer, 0, bufferSize), message.buffersIndex + 4 + bufferSize + 4 );\n\n                    globals.messagePackSize -= message.job.byteLength;\n                    globals.messagePackSize += buffer.byteLength;\n                    message.job = buffer.buffer;\n\n                }\n\n                break;\n            }\n        \n        }\n    }\n\n    var buffer = new Uint8Array(globals.messagePackSize), index = 0;\n\n    for (var i = 0, li = globals.messageBufferIndex; i < li; i++) {\n        var message = globals.messageBuffer[i];\n\n        if (!message.reduced) {\n            buffer.set(new Uint8Array(message.job), index);\n            index += globals.messageBuffer[i].job.byteLength;\n        }\n    }\n\n    //console.log('send:' + buffer.length);\n\n    postPackedMessage({'command' : 'addPackedCommands', 'buffer': buffer}, [buffer.buffer]);\n\n    globals.messageBufferIndex = 0;\n    globals.messagePackSize = 0;\n} \n\n\nfunction postPackedMessages() {\n    if (packedEvents.length > 0) {\n        if (packedTransferables.length > 0) {\n            postMessage({'command': 'packed-events', 'messages':packedEvents}, packedTransferables);\n        } else {\n            postMessage({'command': 'packed-events', 'messages':packedEvents});\n        }\n\n        packedEvents = [];\n        packedTransferables = [];\n    }\n}\n\n\nexport {optimizeGroupMessages, postGroupMessageFast, postGroupMessageLite, postPackedMessage, postPackedMessages};\n\n","\nimport {globals as globals_, clamp as clamp_} from './worker-globals.js';\nimport {getLayerPropertyValue as getLayerPropertyValue_, getLayerExpresionValue as getLayerExpresionValue_} from './worker-style.js';\nimport {addText as addText_, getSplitIndex as getSplitIndex_, getTextGlyphs as getTextGlyphs_,\n        getTextLength as getTextLength_, getFonts as getFonts_, getFontsStorage as getFontsStorage_,\n        areTextCharactersAvailable as areTextCharactersAvailable_, getCharVerticesCount as getCharVerticesCount_, getLineHeight as getLineHeight_} from './worker-text.js';\nimport {postGroupMessageFast as postGroupMessageFast_} from './worker-message.js';\n\n//get rid of compiler mess\nvar globals = globals_, clamp = clamp_;\nvar getLayerPropertyValue = getLayerPropertyValue_, getLayerExpresionValue = getLayerExpresionValue_;\nvar addText = addText_, getSplitIndex = getSplitIndex_, getTextGlyphs = getTextGlyphs_,\n    getTextLength = getTextLength_, getFonts = getFonts_, getFontsStorage = getFontsStorage_,\n    areTextCharactersAvailable = areTextCharactersAvailable_, getCharVerticesCount = getCharVerticesCount_, getLineHeight = getLineHeight_;\nvar postGroupMessageFast = postGroupMessageFast_;\n\n\nvar checkDPoints = function(pointArray) {\n    var pointsGroups = []; \n    var i, li, g, gl, points, p, pp;\n\n    if (pointArray['d-points'] || pointArray['d-lines']) {  //converty d-lines/points to lines/points\n        pointsGroups = pointArray['d-points'] || pointArray['d-lines'];\n\n        if (Array.isArray(pointsGroups) && points.length > 0) {\n\n            for (g = 0, gl = pointsGroups; g < gl; g++) {\n                points = pointsGroups[g];\n                \n                if (Array.isArray(points) && points.length > 0) {\n                    p = points[0];\n                    \n                    p[0] = (p[0] >> 1) ^ (-(p[0] & 1));\n                    p[1] = (p[1] >> 1) ^ (-(p[1] & 1));\n                    p[2] = (p[2] >> 1) ^ (-(p[2] & 1));\n\n                    for (i = 1, li = points.length; i < li; i++) {\n                        p = points[i-1];\n                        pp = points[i];\n\n                        pp[0] = ((pp[0] >> 1) ^ (-(pp[0] & 1))) + p[0];\n                        pp[1] = ((pp[1] >> 1) ^ (-(pp[1] & 1))) + p[1];\n                        pp[2] = ((pp[2] >> 1) ^ (-(pp[2] & 1))) + p[2];\n                    }\n                }\n            }\n        }\n\n        if (pointArray['d-points']) {\n            pointArray['points'] = pointArray['d-points'];\n            delete pointArray['d-points'];\n        } else {\n            pointArray['lines'] = pointArray['d-lines'];\n            delete pointArray['d-lines'];\n        }\n    }\n};\n\n\nvar processPointArrayPass = function(pointArray, lod, style, featureIndex, zIndex, eventInfo) {\n    var pointsGroups = []; \n    var i, li, g, gl, points, p, pp;\n\n    checkDPoints(pointArray);\n\n    if (pointArray['lines']) {  //use lines as points\n        pointsGroups = pointArray['lines'];\n    } else {\n        pointsGroups = [pointArray['points']];\n    }\n    \n    if (!pointsGroups || pointsGroups.length == 0) {\n        return;\n    }\n\n    var visibility = getLayerPropertyValue(style, 'visibility-rel', pointArray, lod) || \n                     getLayerPropertyValue(style, 'visibility-abs', pointArray, lod) ||\n                     getLayerPropertyValue(style, 'visibility', pointArray, lod);\n    var culling = getLayerPropertyValue(style, 'culling', pointArray, lod);\n    var hoverEvent = getLayerPropertyValue(style, 'hover-event', pointArray, lod);\n    var clickEvent = getLayerPropertyValue(style, 'click-event', pointArray, lod);\n    var drawEvent = getLayerPropertyValue(style, 'draw-event', pointArray, lod);\n    var enterEvent = getLayerPropertyValue(style, 'enter-event', pointArray, lod);\n    var leaveEvent = getLayerPropertyValue(style, 'leave-event', pointArray, lod);\n    var advancedHit = getLayerPropertyValue(style, 'advanced-event', pointArray, lod);\n    var linePoints = getLayerPropertyValue(style, 'line-points', pointArray, lod);\n\n    var zbufferOffset = getLayerPropertyValue(style, 'zbuffer-offset', pointArray, lod);\n\n    var point = getLayerPropertyValue(style, 'point', pointArray, lod);\n    var pointFlat = getLayerPropertyValue(style, 'point-flat', pointArray, lod);\n    var pointColor = getLayerPropertyValue(style, 'point-color', pointArray, lod);\n    var pointRadius = 0.5 * getLayerPropertyValue(style, 'point-radius', pointArray, lod);\n\n    var source, bufferSize, bufferSize2, totalPoints = 0, noOverlap;\n    //zIndex = (zIndex !== null) ? zIndex : getLayerPropertyValue(style, \"z-index\", pointArray, lod);\n\n    for (g = 0, gl = pointsGroups.length; g < gl; g++) {\n        points = pointsGroups[g];\n        if (Array.isArray(points) && points.length > 0) {\n            totalPoints += points.length;\n        }\n    }\n\n    var icon = getLayerPropertyValue(style, 'icon', pointArray, lod);\n    if (icon) {\n        source = getLayerPropertyValue(style, 'icon-source', pointArray, lod);\n        \n        if (source) {\n            bufferSize = getCharVerticesCount() * totalPoints;\n            bufferSize2 = getCharVerticesCount(true) * totalPoints;\n    \n            var iconData = {\n                color : getLayerPropertyValue(style, 'icon-color', pointArray, lod),\n                scale : getLayerPropertyValue(style, 'icon-scale', pointArray, lod),\n                offset : getLayerPropertyValue(style, 'icon-offset', pointArray, lod),\n                stick : getLayerPropertyValue(style, 'icon-stick', pointArray, lod),\n                reduce : getLayerPropertyValue(style, 'dynamic-reduce', pointArray, lod),\n                origin : getLayerPropertyValue(style, 'icon-origin', pointArray, lod),\n                source : getLayerPropertyValue(style, 'icon-source', pointArray, lod),\n                noOverlap : getLayerPropertyValue(style, 'icon-no-overlap', pointArray, lod),\n                noOverlapMargin : getLayerPropertyValue(style, 'icon-no-overlap-margin', pointArray, lod),\n                noOverlapFactor : getLayerPropertyValue(style, 'icon-no-overlap-factor', pointArray, lod),\n                index : 0,\n                index2 : 0\n            };\n\n            if (totalPoints > 1) {\n                iconData.vertexBuffer = new Float32Array(bufferSize);\n                iconData.originBuffer = new Float32Array(bufferSize2);\n                iconData.texcoordsBuffer = new Float32Array(bufferSize);\n            } else {\n                iconData.singleBuffer = new Float32Array(16);\n            }\n\n        } else {\n            icon = false;\n        }\n    }\n\n    var label = getLayerPropertyValue(style, 'label', pointArray, lod);\n    if (label) {\n        source = getLayerPropertyValue(style, 'label-source', pointArray, lod);\n\n        var text = getLayerExpresionValue(style, source, pointArray, lod, source);\n        text = text ? text.replace('\\r\\n', '\\n').replace('\\r', '\\n') : '';\n        var size = getLayerPropertyValue(style, 'label-size', pointArray, lod);\n        var fontNames = getLayerPropertyValue(style, 'label-font', pointArray, lod);\n        var fonts = getFonts(fontNames);\n        var glyphsRes = getTextGlyphs(text, fonts);\n        \n        if (source == '$name') {\n            if (!areTextCharactersAvailable(text, fonts, glyphsRes)) {\n                var text2 = getLayerExpresionValue(style, '$name:en', pointArray, lod, source);\n                text2 = text2 ? text2.replace('\\r\\n', '\\n').replace('\\r', '\\n') : '';\n                var glyphsRes2 = getTextGlyphs(text2, fonts);\n                \n                if (areTextCharactersAvailable(text2, fonts)) {\n                    text = text2;                     \n                    glyphsRes = glyphsRes2;\n                }\n            }\n        }\n        if (text && text != '' && Math.abs(size) > 0.0001) {\n            noOverlap = getLayerPropertyValue(style, 'label-no-overlap', pointArray, lod);\n            bufferSize = getCharVerticesCount() * text.length * (noOverlap ? 1 : totalPoints);\n            bufferSize2 = getCharVerticesCount(true) * text.length * (noOverlap ? 1 : totalPoints);\n\n            var useSingleBuffer = (totalPoints == 1);\n\n            var factor = 1;\n            if (getLayerPropertyValue(style, 'label-size-units', pointArray, lod) == 'points') {\n                factor = globals.pixelFactor / ((1 / 72) * (96));\n            }\n\n            var labelData = {\n                color : getLayerPropertyValue(style, 'label-color', pointArray, lod),\n                color2 : getLayerPropertyValue(style, 'label-color2', pointArray, lod),\n                outline : getLayerPropertyValue(style, 'label-outline', pointArray, lod),\n                reduce : getLayerPropertyValue(style, 'dynamic-reduce', pointArray, lod),\n                size : size * factor,\n                spacing: getLayerPropertyValue(style, 'label-spacing', pointArray, lod),\n                lineHeight: getLayerPropertyValue(style, 'label-line-height', pointArray, lod),\n                offset : getLayerPropertyValue(style, 'label-offset', pointArray, lod),\n                stick : getLayerPropertyValue(style, 'label-stick', pointArray, lod),\n                origin : getLayerPropertyValue(style, 'label-origin', pointArray, lod),\n                align : getLayerPropertyValue(style, 'label-align', pointArray, lod),\n                fonts : fonts,\n                fontsStorage : getFontsStorage(fontNames),\n                text : text,\n                hysteresis : getLayerPropertyValue(style, 'hysteresis', pointArray, lod),\n                width : factor * getLayerPropertyValue(style, 'label-width', pointArray, lod),\n                noOverlap : noOverlap,\n                noOverlapMargin : getLayerPropertyValue(style, 'label-no-overlap-margin', pointArray, lod),\n                noOverlapFactor : getLayerPropertyValue(style, 'label-no-overlap-factor', pointArray, lod),\n                vertexBuffer : (useSingleBuffer) ? null : (new Float32Array(bufferSize)),\n                originBuffer : (useSingleBuffer) ? null : (new Float32Array(bufferSize2)),\n                texcoordsBuffer : (useSingleBuffer) ? null : (new Float32Array(bufferSize)),\n                singleBuffer : (useSingleBuffer) ? (new Float32Array(text.length * 4 * 2)) : null,\n                index : 0,\n                index2 : 0,\n                glyphsRes : glyphsRes\n            };\n\n            if (labelData.stick) {\n                labelData.stick = labelData.stick.slice();\n                labelData.stick[2] *= factor;\n                //labelData.stick[7] *= factor;\n            }\n\n        } else {\n            label = false;\n        }\n    }\n\n    var index = 0;\n    var index2 = 0;\n\n    \n    var center = [0,0,0];\n    var forceOrigin = globals.forceOrigin;\n    var bboxMin = globals.bboxMin;\n    var tileX = globals.tileX;\n    var tileY = globals.tileY;\n    var forceScale = globals.forceScale;\n    var labelBBox, iconBBox, p, p1, p2, pp, pp2;\n\n    var generatePoint = (function(pindex) {\n\n        if (icon && (!iconData.noOverlap)) {\n            iconBBox = processIcon(pp, iconData) ;//, pointArray, lod, style, zIndex);\n        }\n\n        if (label && (!labelData.noOverlap)) {\n            labelBBox = processLabel(pp, labelData); //, pointArray, lod, style, zIndex);\n        }\n\n        if (point) {\n\n            for (var j = 0; j < circleSides; j++) {\n\n                if (pointFlat) {\n\n                    //add polygon\n                    vertexBuffer[index] = pp[0];\n                    vertexBuffer[index+1] = pp[1];\n                    vertexBuffer[index+2] = pp[2];\n\n                    vertexBuffer[index+3] = pp[0] + circleBuffer[j][0] * pointRadius;\n                    vertexBuffer[index+4] = pp[1] + circleBuffer[j][1] * pointRadius;\n                    vertexBuffer[index+5] = pp[2];\n\n                    vertexBuffer[index+6] = pp[0] + circleBuffer[j+1][0] * pointRadius;\n                    vertexBuffer[index+7] = pp[1] + circleBuffer[j+1][1] * pointRadius;\n                    vertexBuffer[index+8] = pp[2];\n\n                    index += 9;\n\n                } else {\n\n                    //add polygon\n                    vertexBuffer[index] = pp[0];\n                    vertexBuffer[index+1] = pp[1];\n                    vertexBuffer[index+2] = pp[2];\n                    vertexBuffer[index+3] = 0;\n                    normalBuffer[index2] = 0;\n                    normalBuffer[index2+1] = 0;\n                    normalBuffer[index2+2] = 0;\n                    normalBuffer[index2+3] = 0;\n\n                    vertexBuffer[index+4] = pp[0];\n                    vertexBuffer[index+5] = pp[1];\n                    vertexBuffer[index+6] = pp[2];\n                    vertexBuffer[index+7] = 0;\n                    normalBuffer[index2+4] = circleBuffer[j][0] * pointRadius;\n                    normalBuffer[index2+5] = circleBuffer[j][1] * pointRadius;\n                    normalBuffer[index2+6] = 0;\n                    normalBuffer[index2+7] = 0;\n\n                    vertexBuffer[index+8] = pp[0];\n                    vertexBuffer[index+9] = pp[1];\n                    vertexBuffer[index+10] = pp[2];\n                    vertexBuffer[index+11] = 0;\n                    normalBuffer[index2+8] = circleBuffer[j+1][0] * pointRadius;\n                    normalBuffer[index2+9] = circleBuffer[j+1][1] * pointRadius;\n                    normalBuffer[index2+10] = 0;\n                    normalBuffer[index2+11] = 0;\n\n                    index += 12;\n                    index2 += 12;\n                }\n            }\n        }\n    });\n\n\n    var getLinePoint = (function(length) {\n\n        var l1 = 0;\n        var l2 = 0;\n\n        p = points[0];\n        p1 = [p[0], p[1], p[2]];\n\n        if (forceOrigin) {\n            p1 = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n        }\n\n        if (forceScale != null) {\n            p1 = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n        }\n\n        if (length == 0) {\n            return p1;\n        }\n\n        for (var k = 0, lk = points.length - 1; k < lk; k++) {\n            p = points[k+1];\n            p2 = [p[0], p[1], p[2]];\n\n            if (forceOrigin) {\n                p2 = [p2[0] - tileX, p2[1] - tileY, p2[2]];\n            }\n\n            if (forceScale != null) {\n                p2 = [p2[0] * forceScale[0], p2[1] * forceScale[1], p2[2] * forceScale[2]];\n            }\n\n            var dx = p2[0] - p1[0], dy = p2[1] - p1[1], dz = p2[2] - p1[2]; \n            var l = Math.sqrt(dx*dx+dy*dy+dz*dz);\n\n            l1 = l2;\n            l2 += l;\n\n            if (length >= l1 && length <= l2) {\n                var d = (length - l1) / l;\n\n                return [p1[0] + dx * d,  p1[1] + dy * d, p1[2] + dz * d];\n            }\n\n            p1 = p2;\n        }\n\n    });\n\n    var pointsBuffer = new Array(2048), pointsBufferLength = 0;\n\n\n    for (g = 0, gl = pointsGroups.length; g < gl; g++) {\n        points = pointsGroups[g];\n        \n        if (Array.isArray(points) && points.length > 0) {\n\n            var totalLength = 0, lengths = null;\n\n            if (linePoints[0] != 'vertices') {\n                lengths = new Array(points.length);\n                lengths[0] = 0;\n            }\n\n            //add ponints\n            for (i = 0, li = points.length; i < li; i++) {\n                p = points[i];\n                p1 = [p[0], p[1], p[2]];\n\n                if (forceOrigin) {\n                    p1 = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n                }\n        \n                if (forceScale != null) {\n                    p1 = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n                }\n                \n                if (i + 1 < li) {\n                    p = points[i+1];\n                    p2 = [p[0], p[1], p[2]];\n\n                    if (forceOrigin) {\n                        p2 = [p2[0] - tileX, p2[1] - tileY, p2[2]];\n                    }\n            \n                    if (forceScale != null) {\n                        p2 = [p2[0] * forceScale[0], p2[1] * forceScale[1], p2[2] * forceScale[2]];\n                    }\n\n                    var dx = p2[0] - p1[0], dy = p2[1] - p1[1], dz = p2[2] - p1[2]; \n                    var l = Math.sqrt(dx*dx+dy*dy+dz*dz);\n\n                    if (lengths) {\n                        lengths[i] = l;\n                    }\n\n                    totalLength += l;\n                }\n        \n                center[0] += p1[0];\n                center[1] += p1[1];\n                center[2] += p1[2];\n\n                if (linePoints[0] == 'vertices') {\n                    pointsBuffer[pointsBufferLength] = p1;\n                    pointsBufferLength++;\n                }\n            }\n\n            if (linePoints[0] == 'by-length' || linePoints[0] == 'by-ratio') {\n                var period = linePoints[1];\n                var offset = linePoints[2] || 0;\n\n                if (linePoints[0] == 'by-ratio') {\n                    period *= totalLength;\n                    offset *= totalLength;\n                }\n\n                if (period <= 0) {\n                    pointsBuffer[pointsBufferLength] = getLinePoint(offset);\n                    if (pointsBuffer[pointsBufferLength]) {\n                        pointsBufferLength++;\n                    }\n                } else {\n                    for (i = offset; i < totalLength; i += period) {\n                        pointsBuffer[pointsBufferLength] = getLinePoint(i);\n                        if (pointsBuffer[pointsBufferLength]) {\n                            pointsBufferLength++;\n                        }\n                    }\n                }\n            }\n\n            if (linePoints[0] == 'start') {\n                pointsBuffer[pointsBufferLength] = getLinePoint(0);\n                pointsBufferLength++;\n            }\n\n            if (linePoints[0] == 'end') {\n                pointsBuffer[pointsBufferLength] = getLinePoint(totalLength);\n                pointsBufferLength++;\n            }\n\n            if (linePoints[0] == 'endpoints') {\n                pointsBuffer[pointsBufferLength] = getLinePoint(0);\n                pointsBufferLength++;\n                pointsBuffer[pointsBufferLength] = getLinePoint(totalLength);\n                pointsBufferLength++;\n            }\n\n            if (linePoints[0] == 'middle' || linePoints[0] == 'midpoint') {\n                pointsBuffer[pointsBufferLength] = getLinePoint(totalLength * 0.5);\n                pointsBufferLength++;\n            }\n        }\n    }\n\n    var pointsVertices, vertexBuffer, pointsNormals, normalBuffer, bufferPoints = pointsBufferLength;\n\n    if (point) {\n        var circleBuffer = [];\n        var circleSides = clamp(pointRadius * 8 * 0.5, 8, 32);\n\n        var angle = 0, step = (2.0*Math.PI) / circleSides;\n\n        for (i = 0; i < circleSides; i++) {\n            circleBuffer[i] = [-Math.sin(angle), Math.cos(angle)];\n            angle += step;\n        }\n\n        circleBuffer[circleSides] = [0, 1.0];\n\n        //allocate buffers\n        if (!pointFlat) {\n            pointsVertices = circleSides * 3 * 4;\n            vertexBuffer = new Float32Array(bufferPoints * pointsVertices);\n            pointsNormals = circleSides * 3 * 4;\n            normalBuffer = new Float32Array(bufferPoints * pointsNormals);\n        } else {\n            pointsVertices = circleSides * 3 * 3;\n            vertexBuffer = new Float32Array(bufferPoints * pointsVertices);\n        }\n    }\n\n    if (!pointsBufferLength) {\n        return;\n    }\n\n    //if (pointsBufferLength > 1) {\n      //  globals.directPoints = pointsBuffer.slice(1,pointsBufferLength);\n    //}\n \n    globals.directPoints = pointsBuffer.slice(0,pointsBufferLength);\n\n    for (i = 0; i < pointsBufferLength; i++) {\n        pp = pointsBuffer[i];\n        generatePoint(i);\n    }\n\n    if (totalPoints > 0) {\n        center[0] /= totalPoints;\n        center[1] /= totalPoints;\n        center[2] /= totalPoints;\n    }\n\n    center[0] += bboxMin[0];//groupOrigin[0];\n    center[1] += bboxMin[1];//groupOrigin[1];\n    center[2] += bboxMin[2];//groupOrigin[2];\n\n    var hitable = hoverEvent || clickEvent || enterEvent || leaveEvent;\n    var message, messageSize;\n\n    globals.signatureCounter++;\n    var signature = (\"\"+globals.signatureCounter);\n\n    if (visibility && !Array.isArray(visibility)) {\n        visibility = [visibility];\n    }\n\n    if (point) {\n        if (pointFlat) {\n            postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_FLAT_LINE, {\n                'color':pointColor, 'z-index':zIndex, 'visibility': visibility, 'center': center,\n                'hover-event':hoverEvent, 'click-event':clickEvent, 'draw-event':drawEvent, 'advancedHit': advancedHit,\n                'enter-event':enterEvent, 'leave-event':leaveEvent, 'zbuffer-offset':zbufferOffset,\n                'hitable':hitable, 'state':globals.hitState, 'eventInfo': (globals.alwaysEventInfo || hitable || drawEvent) ? eventInfo : {}, \n                'lod':(globals.autoLod ? null : globals.tileLod) }, [vertexBuffer], signature);\n        } else {\n            postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_PIXEL_LINE, {\n                'color':pointColor, 'z-index':zIndex, 'visibility': visibility, 'center': center,\n                'hover-event':hoverEvent, 'click-event':clickEvent, 'draw-event':drawEvent,\n                'enter-event':enterEvent, 'leave-event':leaveEvent, 'zbuffer-offset':zbufferOffset,\n                'hitable':hitable, 'state':globals.hitState, 'eventInfo': (globals.alwaysEventInfo || hitable || drawEvent) ? eventInfo : {}, \n                'lod':(globals.autoLod ? null : globals.tileLod) }, [vertexBuffer, normalBuffer], signature);\n        }\n    }\n\n    var sendIconMessage = (function(){\n\n        if (icon) {\n\n            globals.signatureCounter++;\n            signature = (\"\"+globals.signatureCounter);\n\n            if (iconData.noOverlap) {\n                var margin = iconData.noOverlapMargin;\n                var factorType = null, factorValue = null;\n\n                if (iconData.noOverlapFactor !== null) {\n                    switch(iconData.noOverlapFactor[0]) {\n                        case 'direct':      factorType = VTS_NO_OVERLAP_DIRECT;      break;\n                        case 'div-by-dist': factorType = VTS_NO_OVERLAP_DIV_BY_DIST; break;\n                    }\n\n                    factorValue = iconData.noOverlapFactor[1];\n                }\n\n                var noOverlap = [iconBBox[0]-margin[0], iconBBox[1]-margin[1], iconBBox[2]+margin[0], iconBBox[3]+margin[1], factorType, factorValue];\n            }\n\n            if ((iconData.singleBuffer && iconData.singleBuffer.length > 0) || (iconData.vertexBuffer && iconData.vertexBuffer.length > 0)) {\n\n                postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, (iconData.singleBuffer) ? VTS_WORKER_TYPE_ICON : VTS_WORKER_TYPE_ICON2, {\n                    'icon':globals.stylesheetBitmaps[iconData.source[0]], 'color':iconData.color, 'z-index':zIndex,\n                    'visibility': visibility, 'culling': culling, 'center': pp2, 'stick': iconData.stick,\n                    'hover-event':hoverEvent, 'click-event':clickEvent, 'draw-event':drawEvent, 'advancedHit': advancedHit,\n                    'enter-event':enterEvent, 'leave-event':leaveEvent, 'zbuffer-offset':zbufferOffset, 'noOverlap' : (iconData.noOverlap ? noOverlap: null),\n                    'hitable':hitable, 'state':globals.hitState, 'eventInfo': (globals.alwaysEventInfo || hitable || drawEvent) ? eventInfo : {},\n                    'index': featureIndex, 'reduce': iconData.reduce, 'lod':(globals.autoLod ? null : globals.tileLod) },\n                    (iconData.singleBuffer) ? [iconData.singleBuffer] : [iconData.vertexBuffer, iconData.originBuffer, iconData.texcoordsBuffer],\n                    signature);\n            }\n        }\n\n    });\n\n    var sendLabelMessage = (function(){\n\n        if (label) {\n            globals.signatureCounter++;\n            signature = (\"\"+globals.signatureCounter);\n\n            if (labelData.noOverlap) {\n                var margin = labelData.noOverlapMargin;\n                var factorType = null, factorValue = null;\n\n                if (labelData.noOverlapFactor !== null) {\n                    switch(labelData.noOverlapFactor[0]) {\n                        case 'direct':      factorType = VTS_NO_OVERLAP_DIRECT;      break;\n                        case 'div-by-dist': factorType = VTS_NO_OVERLAP_DIV_BY_DIST; break;\n                    }\n\n                    factorValue = labelData.noOverlapFactor[1];\n                }\n\n                var noOverlap = [labelBBox[0]-margin[0], labelBBox[1]-margin[1], labelBBox[2]+margin[0], labelBBox[3]+margin[1], factorType, factorValue];\n            }\n\n            if ((labelData.singleBuffer && labelData.singleBuffer.length > 0) || (labelData.vertexBuffer && labelData.vertexBuffer.length > 0)) {\n\n                postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, (labelData.singleBuffer) ? VTS_WORKER_TYPE_LABEL : VTS_WORKER_TYPE_LABEL2, {\n                    'size':labelData.size, 'origin':labelData.pos, 'color':labelData.color,\n                    'color2':labelData.color2, 'outline':labelData.outline, 'z-index':zIndex, 'visibility': visibility,\n                    'culling': culling, 'center': pp2, 'stick': labelData.stick, 'noOverlap' : (labelData.noOverlap ? noOverlap: null),\n                    'hover-event':hoverEvent, 'click-event':clickEvent, 'draw-event':drawEvent, 'files':labelData.files, 'index': featureIndex,\n                    'enter-event':enterEvent, 'leave-event':leaveEvent, 'zbuffer-offset':zbufferOffset, 'fonts': labelData.fontsStorage,\n                    'hitable':hitable, 'state':globals.hitState, 'advancedHit': advancedHit, 'reduce': labelData.reduce, 'hysteresis': labelData.hysteresis, \n                    'eventInfo': (globals.alwaysEventInfo || hitable || drawEvent) ? eventInfo : {}, 'lod':(globals.autoLod ? null : globals.tileLod) },\n                    (labelData.singleBuffer) ? [labelData.singleBuffer] : [labelData.vertexBuffer, labelData.originBuffer, labelData.texcoordsBuffer],\n                    signature);\n            }\n        }\n\n    });\n\n    if (icon && (!iconData.noOverlap)) {\n        pp2 = center;\n        sendIconMessage();\n    }\n\n    if (label && (!labelData.noOverlap)) {\n        pp2 = center;\n        sendLabelMessage();\n    }\n\n    for (i = 0, li = globals.insidePack ? 1 : globals.directPoints.length; i < li; i++) {\n        pp = globals.directPoints[i];\n        pp2 = [pp[0] + bboxMin[0], pp[1] + bboxMin[1], pp[2] + bboxMin[2]];\n\n        if (icon && (iconData.noOverlap)) {\n            iconBBox = processIcon(pp, iconData, iconBBox) ;//, pointArray, lod, style, zIndex);\n            sendIconMessage();\n        }\n\n        if (label && (labelData.noOverlap)) {\n            labelBBox = processLabel(pp, labelData, labelBBox); //, pointArray, lod, style, zIndex);\n            sendLabelMessage();\n        }\n    }\n\n};\n\n\nvar processPointArrayVSwitchPass = function(pointArray, lod, style, featureIndex, zIndex, eventInfo) {\n    var pointsGroups = []; \n    var i, li;\n\n    checkDPoints(pointArray);\n\n    if (pointArray['lines']) {  //use lines as points\n        pointsGroups = pointArray['lines'];\n    } else {\n        pointsGroups = [pointArray['points']];\n    }\n    \n    if (!pointsGroups || pointsGroups.length == 0) {\n        return;\n    }\n\n\n    var visibility = getLayerPropertyValue(style, 'visibility-rel', pointArray, lod) || \n                     getLayerPropertyValue(style, 'visibility-abs', pointArray, lod) ||\n                     getLayerPropertyValue(style, 'visibility', pointArray, lod);\n    var culling = getLayerPropertyValue(style, 'culling', pointArray, lod);\n    var hysteresis = getLayerPropertyValue(style, 'hysteresis', pointArray, lod);\n\n    var points, g, gl, totalPoints = 0;\n\n    for (g = 0, gl = pointsGroups.length; g < gl; g++) {\n        points = pointsGroups[g];\n        if (Array.isArray(points) && points.length > 0) {\n            totalPoints += points.length;\n        }\n    }\n\n    var center = [0,0,0];\n    var forceOrigin = globals.forceOrigin;\n    var bboxMin = globals.bboxMin;\n    var tileX = globals.tileX;\n    var tileY = globals.tileY;\n    var forceScale = globals.forceScale;\n    var p, p1;\n\n    for (g = 0, gl = pointsGroups.length; g < gl; g++) {\n        points = pointsGroups[g];\n        \n        if (Array.isArray(points) && points.length > 0) {\n       \n            //add ponints\n            for (i = 0, li = points.length; i < li; i++) {\n                p = points[i];\n                p1 = [p[0], p[1], p[2]];\n        \n                if (forceOrigin) {\n                    p1 = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n                }\n        \n                if (forceScale != null) {\n                    p1 = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n                }\n        \n                center[0] += p1[0];\n                center[1] += p1[1];\n                center[2] += p1[2];\n            }\n        }\n    }\n   \n    if (totalPoints > 0) {\n        center[0] /= totalPoints;\n        center[1] /= totalPoints;\n        center[2] /= totalPoints;\n    }\n\n    center[0] += bboxMin[0];//groupOrigin[0];\n    center[1] += bboxMin[1];//groupOrigin[1];\n    center[2] += bboxMin[2];//groupOrigin[2];\n\n    globals.signatureCounter++;\n    var signature = (\"\"+globals.signatureCounter);\n\n    postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_VSPOINT, {\n        'z-index':zIndex, 'hysteresis' : hysteresis,\n        'visibility': visibility, 'culling': culling, 'center': center, 'eventInfo': {} /*(globals.alwaysEventInfo || hitable || drawEvent) ? eventInfo : {}*/,\n         'index': featureIndex, 'lod':(globals.autoLod ? null : globals.tileLod) }, [], signature);\n};\n\n\nvar getOriginOffset = function(origin, width, height) { //TODO: fix pixel units\n    switch(origin) {\n    case 'top-left':        return [0, 0];\n    case 'top-right':       return [-width, 0];\n    case 'top-center':      return [-width*0.5, 0];\n    case 'center-left':     return [0, -height*0.5];\n    case 'center-right':    return [-width, -height*0.5];\n    case 'center-center':   return [-width*0.5, -height*0.5];\n    case 'bottom-left':     return [0, -height];\n    case 'bottom-right':    return [-width, -height];\n    case 'bottom-center':   return [-width*0.5, -height];\n    }\n};\n\n\nvar processIcon = function(point, iconData, cloneBuffers) {\n\n    if (cloneBuffers) {\n        iconData.index = 0;\n        iconData.index2 = 0;\n        iconData.vertexBuffer = iconData.vertexBuffer ?  (new Float32Array(iconData.vertexBuffer.length)) : null;\n        iconData.originBuffer = iconData.originBuffer ?  (new Float32Array(iconData.originBuffer.length)) : null;\n        iconData.singleBuffer = iconData.singleBuffer ?  (new Float32Array(iconData.singleBuffer.length)) : null;\n    }\n\n    var icon = iconData.source;\n    var index = iconData.index;\n    var index2 = iconData.index2;\n    var lastIndex = index;\n\n    var width = Math.abs(icon[3] * iconData.scale * 0.5);\n    var height = Math.abs(icon[4] * iconData.scale * 0.5);\n\n    //get offset\n    var originOffset = getOriginOffset(iconData.origin, width, height);\n    var offsetX = originOffset[0] + iconData.offset[0];\n    var offsetY = originOffset[1] + iconData.offset[1];\n\n    if (iconData.singleBuffer) {\n        var b = iconData.singleBuffer;\n\n        b[0] = offsetX; b[1] = offsetY;\n        b[2] = icon[1];\n        b[3] = icon[2];\n\n        b[4] = width + offsetX; b[5] = offsetY;\n        b[6] = icon[1]+icon[3];\n        b[7] = icon[2];\n\n        b[8] = width + offsetX; b[9] = height + offsetY;\n        b[10] = icon[1]+icon[3];\n        b[11] = icon[2]+icon[4];\n\n        b[12] = offsetX; b[13] = height + offsetY;\n        b[14] = icon[1];\n        b[15] = icon[2]+icon[4];\n\n        return [offsetX * 0.5, offsetY * 0.5, (offsetX + width) * 0.5 + 1, (offsetY + height) *0.5];\n    }\n\n    var vertexBuffer = iconData.vertexBuffer;\n    var texcoordsBuffer = iconData.texcoordsBuffer;\n    var originBuffer = iconData.originBuffer;\n\n    //add polygon\n    vertexBuffer[index] = 0;\n    vertexBuffer[index+1] = 0;\n    vertexBuffer[index+2] = 0;\n    vertexBuffer[index+3] = 0;\n\n    vertexBuffer[index+4] = width;\n    vertexBuffer[index+5] = 0;\n    vertexBuffer[index+6] = 0;\n    vertexBuffer[index+7] = 0;\n\n    vertexBuffer[index+8] = width;\n    vertexBuffer[index+9] = -height;\n    vertexBuffer[index+10] = 0;\n    vertexBuffer[index+11] = 0;\n\n    texcoordsBuffer[index] = icon[1];\n    texcoordsBuffer[index+1] = icon[2];\n    texcoordsBuffer[index+2] = 0;\n    texcoordsBuffer[index+3] = 0;\n\n    texcoordsBuffer[index+4] = icon[1]+icon[3];\n    texcoordsBuffer[index+5] = icon[2];\n    texcoordsBuffer[index+6] = 0;\n    texcoordsBuffer[index+7] = 0;\n\n    texcoordsBuffer[index+8] = icon[1]+icon[3];\n    texcoordsBuffer[index+9] = icon[2]+icon[4];\n    texcoordsBuffer[index+10] = 0;\n    texcoordsBuffer[index+11] = 0;\n\n    index += 12;\n\n    //add polygon\n    vertexBuffer[index] = 0;\n    vertexBuffer[index+1] = 0;\n    vertexBuffer[index+2] = 0;\n    vertexBuffer[index+3] = 0;\n\n    vertexBuffer[index+4] = 0;\n    vertexBuffer[index+5] = -height;\n    vertexBuffer[index+6] = 0;\n    vertexBuffer[index+7] = 0;\n\n    vertexBuffer[index+8] = width;\n    vertexBuffer[index+9] = -height;\n    vertexBuffer[index+10] = 0;\n    vertexBuffer[index+11] = 0;\n\n    texcoordsBuffer[index] = icon[1];\n    texcoordsBuffer[index+1] = icon[2];\n    texcoordsBuffer[index+2] = 0;\n    texcoordsBuffer[index+3] = 0;\n\n    texcoordsBuffer[index+4] = icon[1];\n    texcoordsBuffer[index+5] = icon[2]+icon[4];\n    texcoordsBuffer[index+6] = 0;\n    texcoordsBuffer[index+7] = 0;\n\n    texcoordsBuffer[index+8] = icon[1]+icon[3];\n    texcoordsBuffer[index+9] = icon[2]+icon[4];\n    texcoordsBuffer[index+10] = 0;\n    texcoordsBuffer[index+11] = 0;\n    \n    index += 12;\n\n    var p1 = point[0];\n    var p2 = point[1];\n    var p3 = point[2];\n\n    //set origin buffer and apply offset\n    for (var i = lastIndex; i < index; i+=4) {\n        vertexBuffer[i] += offsetX;\n        vertexBuffer[i+1] -= offsetY;\n\n        originBuffer[index2] = p1;\n        originBuffer[index2 + 1] = p2;\n        originBuffer[index2 + 2] = p3;\n        index2 += 3;\n    }\n\n    iconData.index = index;\n    iconData.index2 = index2;\n\n    return [offsetX * 0.5, offsetY * 0.5, (offsetX + width) * 0.5 + 1, (offsetY + height) *0.5];\n};\n\n\nvar processLabel = function(point, labelData, cloneBuffers) {\n\n    if (cloneBuffers) {\n        labelData.index = 0;\n        labelData.index2 = 0;\n        labelData.vertexBuffer = labelData.vertexBuffer ?  (new Float32Array(labelData.vertexBuffer.length)) : null;\n        labelData.originBuffer = labelData.originBuffer ?  (new Float32Array(labelData.originBuffer.length)) : null;\n        labelData.singleBuffer = labelData.singleBuffer ?  (new Float32Array(labelData.singleBuffer.length)) : null;\n    }\n\n    var vertexBuffer = labelData.vertexBuffer;\n    var texcoordsBuffer = labelData.texcoordsBuffer;\n    var originBuffer = labelData.originBuffer;\n    var singleBuffer = labelData.singleBuffer;\n    var index = labelData.index;\n    var index2 = labelData.index2;\n    var lastIndex = index;\n    var text = '' + labelData.text;\n    var fonts = labelData.fonts;\n    var planes = {}, i, li;\n    var glyphsRes = labelData.glyphsRes;\n\n    var linesGlyphsRes = [];\n    var linesGlyphsRes2 = [];\n\n    //split text to lines\n    do {\n        var res = glyphsRes[2].indexOf(10); //search /n\n\n        if (res != -1) {\n            linesGlyphsRes.push([glyphsRes[0].slice(0,res), glyphsRes[1].slice(0,res), glyphsRes[2].slice(0,res)]);\n            glyphsRes = [glyphsRes[0].slice(res+1), glyphsRes[1].slice(res+1), glyphsRes[2].slice(res+1)];\n        } else {\n            linesGlyphsRes.push(glyphsRes);\n        }\n\n    } while (res != -1);\n\n    //split lines by width\n    for (var i = 0, li = linesGlyphsRes.length; i < li; i++) {\n\n        var glyphsRes = linesGlyphsRes[i];\n\n        // eslint-disable-next-line\n        do {\n            var splitIndex = getSplitIndex(null, labelData.width, labelData.size, labelData.spacing, fonts, glyphsRes);\n            var codes = glyphsRes[2];\n\n            if (codes.length == splitIndex) {\n                linesGlyphsRes2.push(glyphsRes);\n                break;\n            }\n\n            linesGlyphsRes2.push([glyphsRes[0].slice(0,splitIndex), glyphsRes[1].slice(0,splitIndex), glyphsRes[2].slice(0,splitIndex)]);\n\n            glyphsRes = [glyphsRes[0].slice(splitIndex+1), glyphsRes[1].slice(splitIndex+1), glyphsRes[2].slice(splitIndex+1)];\n\n        } while(true);\n\n    }\n\n    var x = 0, y = 0;\n    var lineHeight = getLineHeight(labelData.size, labelData.lineHeight, fonts);\n    var maxWidth = 0;\n    var lineWidths = [];\n\n    //get max width\n    for (i = 0, li = linesGlyphsRes2.length; i < li; i++) {\n        lineWidths[i] = getTextLength(null, labelData.size, labelData.spacing, fonts, linesGlyphsRes2[i]);\n        maxWidth = Math.max(lineWidths[i], maxWidth);\n    }\n\n    //generate text\n    for (i = 0, li = linesGlyphsRes2.length; i < li; i++) {\n        var textWidth = lineWidths[i];\n\n        switch(labelData.align) {\n        case 'left': x = 0; break;\n        case 'right': x = maxWidth - textWidth; break;\n        case 'center': x = (maxWidth - textWidth)*0.5; break;\n        }\n\n        index = addText([x,y,0], [1,0,0], null, labelData.size, labelData.spacing, fonts, vertexBuffer, texcoordsBuffer, true, index, planes, linesGlyphsRes2[i], singleBuffer);\n        y -= lineHeight;\n    }\n\n    //get offset\n    var originOffset = getOriginOffset(labelData.origin, maxWidth, -y);\n    var offsetX = originOffset[0] + labelData.offset[0];\n    var offsetY = originOffset[1] + labelData.offset[1];\n    \n    var p1 = point[0];\n    var p2 = point[1];\n    var p3 = point[2];\n\n    //set origin buffer and apply offset\n    if (!singleBuffer) {\n        for (i = lastIndex; i < index; i+=4) {\n            vertexBuffer[i] += offsetX;\n            vertexBuffer[i+1] -= offsetY;\n\n            originBuffer[index2] = p1;\n            originBuffer[index2 + 1] = p2;\n            originBuffer[index2 + 2] = p3;\n            index2 += 3;\n        }\n    } else {\n        for (i = lastIndex; i < index; i+=8) {\n            singleBuffer[i] += offsetX;\n            singleBuffer[i+1] -= offsetY;\n            singleBuffer[i+2] += offsetX;\n            singleBuffer[i+3] -= offsetY;\n        }\n\n        labelData.pos = [p1,p2,p3];\n        singleBuffer = new Float32Array(singleBuffer.buffer, 0, index);\n    }\n    \n    var fonts = labelData.fonts;\n    labelData.files = new Array(fonts.length);\n\n    for (i = 0, li= fonts.length; i < li; i++) {\n        labelData.files[i] = [];\n    }\n\n    for (var key in planes) {\n        var fontIndex = parseInt(key);\n        var planes2 = planes[key];\n\n        var files = [];\n\n        for (var key2 in planes2) {\n            var plane = parseInt(key2) - (fontIndex*4000);\n            var file = Math.round((plane - (plane % 4)) / 4);\n            \n            if (files.indexOf(file) == -1) {\n                files.push(file);\n            }\n        }\n\n        labelData.files[fontIndex] = files;\n    }\n\n    labelData.index = index;\n    labelData.index2 = index2;\n\n    return [offsetX * 0.5, offsetY * 0.5, (offsetX + maxWidth) * 0.5 + 1, (offsetY + Math.abs(y)) *0.5];\n};\n\nvar processPointArrayGeometry = function(pointArray) {\n    var i, li;\n\n    checkDPoints(pointArray);\n\n    if (pointArray['lines']) {  //use lines as points\n        pointsGroups = pointArray['lines'];\n    } else {\n        pointsGroups = [pointArray['points']];\n    }\n    \n    if (!pointsGroups || pointsGroups.length == 0) {\n        return;\n    }\n\n    var totalPoints = 0;\n    var indicesBuffer = new Uint32Array(pointsGroups.length);\n\n    for (i = 0; i < pointsGroups.length; i++) {\n        indicesBuffer[i] = totalPoints;\n\n        if (Array.isArray(pointsGroups[i])) {\n            totalPoints += pointsGroups[i].length;\n        }\n    }\n\n    var geometryBuffer = new Float64Array(totalPoints * 3);\n\n    /*var forceOrigin = globals.forceOrigin;\n    var tileX = globals.tileX;\n    var tileY = globals.tileY;*/\n    var forceScale = globals.forceScale;\n    var index = 0, p1, p2, pp, p;\n\n    for (var i = 0; i < pointsGroups.length; i++) {\n        if (!Array.isArray(pointsGroups[i]) || !pointsGroups[i].length) {\n            continue;\n        }\n        \n        var points = pointsGroups[i];\n   \n        p = points[0];\n        p1 = [p[0], p[1], p[2]];\n    \n        //add lines\n        for (var j = 0, lj = points.length; j < lj; j++) {\n\n            /*if (forceOrigin) {\n                pp = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n            }*/\n    \n            if (forceScale != null) {\n                pp = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n            }\n\n            geometryBuffer[index] = pp[0];\n            geometryBuffer[index+1] = pp[1];\n            geometryBuffer[index+2] = pp[2];\n            index += 3;\n\n            if (j == (lj - 1)) {\n                break;\n            }\n    \n            p1 = points[j+1];\n        }\n    }\n\n    globals.signatureCounter++;\n    postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_POINT_GEOMETRY, {\n        'id':pointArray['id'] }, [geometryBuffer, indicesBuffer], (\"\"+globals.signatureCounter));\n};\n\nexport {processPointArrayPass, processPointArrayGeometry, processPointArrayVSwitchPass, checkDPoints};\n\n\n","\nimport {globals as globals_, vec3Normalize as vec3Normalize_,\n        vec3Cross as vec3Cross_} from './worker-globals.js';\nimport {getLayerPropertyValue as getLayerPropertyValue_,\n        getLayerExpresionValue as getLayerExpresionValue_, hasLayerProperty as hasLayerProperty_} from './worker-style.js';\nimport {addStreetTextOnPath as addStreetTextOnPath_, getTextGlyphs as getTextGlyphs_,\n        areTextCharactersAvailable as areTextCharactersAvailable_,\n        getCharVerticesCount as getCharVerticesCount_, getFonts as getFonts_, getFontsStorage as getFontsStorage_} from './worker-text.js';\nimport {postGroupMessageFast as postGroupMessageFast_} from './worker-message.js';\nimport {checkDPoints as checkDPoints_} from './worker-pointarray.js';\n\n//get rid of compiler mess\nvar globals = globals_, vec3Normalize = vec3Normalize_,\n    vec3Cross = vec3Cross_;\nvar getLayerPropertyValue = getLayerPropertyValue_,\n    getLayerExpresionValue = getLayerExpresionValue_, hasLayerProperty = hasLayerProperty_;\nvar addStreetTextOnPath = addStreetTextOnPath_, areTextCharactersAvailable = areTextCharactersAvailable_,\n    getCharVerticesCount = getCharVerticesCount_, getFonts = getFonts_, getFontsStorage = getFontsStorage_;\nvar postGroupMessageFast = postGroupMessageFast_, getTextGlyphs = getTextGlyphs_;\nvar checkDPoints = checkDPoints_;\n\n\nvar getLineInfo = function(lineString, lod, style, featureIndex, zIndex, eventInfo) {\n\n};\n\nvar processLineStringPass = function(lineString, lod, style, featureIndex, zIndex, eventInfo) {\n\n    checkDPoints(lineString);\n\n    var lines = lineString['lines'];\n\n    if (!lines || lines.length == 0) {\n        return;\n    }\n\n    var line = getLayerPropertyValue(style, 'line', lineString, lod);\n    var lineLabel = getLayerPropertyValue(style, 'line-label', lineString, lod);\n\n    if (!line && !lineLabel) {\n        return;\n    }\n\n    var hoverEvent = getLayerPropertyValue(style, 'hover-event', lineString, lod);\n    var clickEvent = getLayerPropertyValue(style, 'click-event', lineString, lod);\n    var drawEvent = getLayerPropertyValue(style, 'draw-event', lineString, lod);\n    var enterEvent = getLayerPropertyValue(style, 'enter-event', lineString, lod);\n    var leaveEvent = getLayerPropertyValue(style, 'leave-event', lineString, lod);\n    var advancedHit = getLayerPropertyValue(style, 'advanced-hit', lineString, lod);\n\n    var zbufferOffset = getLayerPropertyValue(style, 'zbuffer-offset', lineString, lod);\n\n    if (hasLayerProperty(style,'line-type')) {\n\n    } else {\n        var lineFlat = getLayerPropertyValue(style, 'line-flat', lineString, lod);\n    }\n\n    var lineColor = getLayerPropertyValue(style, 'line-color', lineString, lod);\n    var lineWidth = 0.5 * getLayerPropertyValue(style, 'line-width', lineString, lod);\n    var lineWidthUnits = getLayerPropertyValue(style, 'line-width-units', lineString, lod);\n\n    var lineStyle = getLayerPropertyValue(style, 'line-style', lineString, lod);\n    var lineStyleTexture = getLayerPropertyValue(style, 'line-style-texture', lineString, lod);\n    var lineStyleBackground = getLayerPropertyValue(style, 'line-style-background', lineString, lod);\n\n    var lineLabelSize = getLayerPropertyValue(style, 'line-label-size', lineString, lod);\n\n    var texturedLine = (lineStyle != 'solid');\n    var widthByRatio = (lineWidthUnits == 'ratio');\n\n    if (lineWidthUnits == 'points') {\n        lineWidth *= globals.pixelFactor / ((1 / 72) * (96));\n    }\n\n    var index = 0, index2 = 0, index3 = 0;\n    var skipJoins = false;\n\n    if (widthByRatio) {\n        skipJoins = (!lineFlat && ((lineWidth/* *globals.invPixelFactor*/)*1080) < 2.1);\n    } else {\n        skipJoins = (!lineFlat && (lineWidth/* *globals.invPixelFactor*/) < 2.1);        \n    }\n\n    var ii, i, li, p2, v, vv, l, n, nn, p1, p, elementIndex, elemetBase = 1;\n\n    if (!skipJoins) {\n        var circleBuffer = [];\n        var circleBuffer2 = [];\n        var circleSides = 8;//Math.max(8, (14 - lod) * 8);\n    \n        var angle = 0, step = (2.0*Math.PI) / circleSides;\n    \n        for (i = 0; i < circleSides; i++) {\n            circleBuffer[i] = [-Math.sin(angle), Math.cos(angle)];\n            circleBuffer2[i] = angle;\n            angle += step;\n        }\n    \n        circleBuffer[circleSides] = [0, 1.0];\n        circleBuffer2[circleSides] = 0;\n    }\n\n    var totalPoints = 0;\n\n    for (ii = 0; ii < lines.length; ii++) {\n        if (Array.isArray(lines[ii])) {\n            totalPoints += lines[ii].length;\n        }\n    }\n\n    if (totalPoints <= 1) {\n        return;\n    }\n\n    if (lineFlat) {\n        circleSides = 2;\n    }\n\n    //allocate buffers\n    var lineVertices = ((texturedLine || (widthByRatio)) || !lineFlat ? 4 : 3) * 3 * 2;\n    var joinVertices = skipJoins ? 0 : (circleSides * ((texturedLine || (widthByRatio)) || !lineFlat? 4 : 3) * 3);\n    var vertexBuffer = new Float32Array((totalPoints-1) * lineVertices + totalPoints * joinVertices);\n\n    if (advancedHit) {\n       var elementBuffer = new Float32Array((totalPoints-1) * (3 * 2) + totalPoints * (skipJoins ? 0 : circleSides) * 3);\n    }\n\n    if (!(lineFlat && !texturedLine && !widthByRatio)) {\n        var lineNormals = 3 * 4 * 2;\n        var joinNormals = skipJoins ? 0 : (circleSides * 3 * 4);\n        var normalBuffer = new Float32Array((totalPoints-1) * lineNormals + totalPoints * joinNormals);\n    }\n\n    var center = [0,0,0];\n    var lineLabelStack = [];\n    var forceOrigin = globals.forceOrigin;\n    var bboxMin = globals.bboxMin;\n    var geocent = globals.geocent;\n    var tileX = globals.tileX;\n    var tileY = globals.tileY;\n    var forceScale = globals.forceScale;\n    var vstart = [1,0,0], vend = [-1,0,0];\n\n    for (ii = 0; ii < lines.length; ii++) {\n        if (!Array.isArray(lines[ii]) || !lines[ii].length) {\n            continue;\n        }\n        \n        var points = lines[ii];\n\n        if (lineLabel) {\n            var lineLabelPoints = new Array(points.length);\n            var lineLabelPoints2 = new Array(points.length);\n            \n            lineLabelStack.push({points: lineLabelPoints, points2 :lineLabelPoints2});\n        }\n    \n        p = points[0];\n        p1 = [p[0], p[1], p[2]];\n    \n        if (forceOrigin) {\n            p1 = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n        }\n    \n        if (forceScale != null) {\n            p1 = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n        }\n    \n        var distance = 0.001;\n        var distance2 = 0.001;\n        /*var ln = null;*/\n        var vertexBase = index;\n        var normalBase = index2;\n\n        //add lines\n        for (i = 0, li = points.length - 1; i < li; i++) {\n    \n            p1 = points[i];\n            p2 = points[i+1];\n\n            if (forceOrigin) {\n                p1 = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n                p2 = [p2[0] - tileX, p2[1] - tileY, p2[2]];\n            }\n\n            if (forceScale != null) {\n                p1 = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n                p2 = [p2[0] * forceScale[0], p2[1] * forceScale[1], p2[2] * forceScale[2]];\n            }\n    \n            if (advancedHit) {\n                elementIndex = elemetBase + i;\n\n                elementBuffer[index3] = elementIndex;\n                elementBuffer[index3+1] = elementIndex;\n                elementBuffer[index3+2] = elementIndex;\n    \n                //add polygon\n                elementBuffer[index3+3] = elementIndex;\n                elementBuffer[index3+4] = elementIndex;\n                elementBuffer[index3+5] = elementIndex;\n\n                index3 += 6;\n            }\n\n            if (lineFlat && !texturedLine && !widthByRatio) {\n\n                //normalize vector to line width and rotate 90 degrees\n                if (geocent) {\n                    //direction vector\n                    v = [p2[0] - p1[0], p2[1] - p1[1], p2[2] - p1[2]];\n        \n                    //get line length\n                    l = Math.sqrt(v[0]*v[0] + v[1]*v[1] + v[2]*v[2]);\n                    distance2 += l;\n        \n                    l = (l != 0) ? (1 / l) : 0;\n\n                    vv = [v[0]*l, v[1]*l, v[2]*l];\n                    n = [0,0,0];\n                    nn = [0,0,0];\n                    \n                    vec3Normalize(bboxMin, nn);\n                    vec3Cross(nn, vv, n);\n\n                    if (i == 0) {\n                        vstart = vv;\n                    }\n\n                    if (i == (li - 1)) {\n                        vend = vv;\n                    }\n                    \n                    n = [n[0] * lineWidth, n[1] * lineWidth, n[2] * lineWidth];\n                } else {\n                    //direction vector\n                    v = [p2[0] - p1[0], p2[1] - p1[1], 0];\n        \n                    //get line length\n                    l = Math.sqrt(v[0]*v[0] + v[1]*v[1]);\n                    distance2 += l;\n        \n                    l = (l != 0) ? (lineWidth / l) : 0;\n\n                    n = [-v[1]*l, v[0]*l, 0];\n\n                    if (i == 0) {\n                        vstart = [v[0]*l, v[1]*l, 0];\n                    }\n\n                    if (i == (li - 1)) {\n                        vend = [v[0]*l, v[1]*l, 0];\n                    }\n                }\n                        \n                //add polygon\n                vertexBuffer[index] = p1[0] + n[0];\n                vertexBuffer[index+1] = p1[1] + n[1];\n                vertexBuffer[index+2] = p1[2] + n[2];\n    \n                vertexBuffer[index+3] = p1[0] - n[0];\n                vertexBuffer[index+4] = p1[1] - n[1];\n                vertexBuffer[index+5] = p1[2] - n[2];\n    \n                vertexBuffer[index+6] = p2[0] + n[0];\n                vertexBuffer[index+7] = p2[1] + n[1];\n                vertexBuffer[index+8] = p2[2] + n[2];\n    \n                //add polygon\n                vertexBuffer[index+9] = p1[0] - n[0];\n                vertexBuffer[index+10] = p1[1] - n[1];\n                vertexBuffer[index+11] = p1[2] - n[2];\n    \n                vertexBuffer[index+12] = p2[0] - n[0];\n                vertexBuffer[index+13] = p2[1] - n[1];\n                vertexBuffer[index+14] = p2[2] - n[2];\n    \n                vertexBuffer[index+15] = p2[0] + n[0];\n                vertexBuffer[index+16] = p2[1] + n[1];\n                vertexBuffer[index+17] = p2[2] + n[2];\n    \n                index += 18;\n\n            } else {\n    \n   \n                //console.log(\"distance(\"+i+\"): \" + distance + \" \" + distance2);\n    \n                if (lineFlat) {\n                    \n                    /*\n                    //normalize vector to line width and rotate 90 degrees\n                    l = (l != 0) ? (lineWidth / l) : 0;\n                    n = [-v[1]*l, v[0]*l,0];\n    \n                    if (joinParams != null) {\n                        joinParams[i] = (l != 0) ? Math.atan2(v[0], v[1]) + Math.PI *0.5 : 0;\n                    }*/\n    \n                    //normalize vector to line width and rotate 90 degrees\n                    if (geocent) {\n                        //direction vector\n                        v = [p2[0] - p1[0], p2[1] - p1[1], p2[2] - p1[2]];\n            \n                        //get line length\n                        l = Math.sqrt(v[0]*v[0] + v[1]*v[1] + v[2]*v[2]);\n                        distance2 += l;\n            \n                        l = (l != 0) ? (1 / l) : 0;\n\n                        vv = [v[0]*l, v[1]*l, v[2]*l];\n                        n = [0,0,0];\n                        nn = [0,0,0];\n\n                        if (i == 0) {\n                            vstart = vv;\n                        }\n\n                        if (i == (li - 1)) {\n                            vend = vv;\n                        }\n                        \n                        vec3Normalize(bboxMin, nn);\n                        vec3Cross(nn, vv, n);\n                        \n                        //n = [n[0] * lineWidth, n[1] * lineWidth, n[2] * lineWidth];\n                        n = [n[0], n[1], n[2]];\n                    } else {\n                        //direction vector\n                        v = [p2[0] - p1[0], p2[1] - p1[1], 0];\n            \n                        //get line length\n                        l = Math.sqrt(v[0]*v[0] + v[1]*v[1]);\n                        distance2 += l;\n            \n                        l = (l != 0) ? (lineWidth / l) : 0;\n\n                        n = [-v[1], v[0], 0];\n\n                        if (i == 0) {\n                            vstart = [v[0]*l, v[1]*l, 0];\n                        }\n\n                        if (i == (li - 1)) {\n                            vend = [v[0]*l, v[1]*l, 0];\n                        }\n                    }\n\n                    //add polygon\n                    vertexBuffer[index] = p1[0];\n                    vertexBuffer[index+1] = p1[1];\n                    vertexBuffer[index+2] = p1[2];\n                    vertexBuffer[index+3] = distance;\n                    normalBuffer[index2] = n[0];\n                    normalBuffer[index2+1] = n[1];\n                    normalBuffer[index2+2] = n[2];\n                    normalBuffer[index2+3] = lineWidth;\n    \n                    vertexBuffer[index+4] = p1[0];\n                    vertexBuffer[index+5] = p1[1];\n                    vertexBuffer[index+6] = p1[2];\n                    vertexBuffer[index+7] = -distance;\n                    normalBuffer[index2+4] = -n[0];\n                    normalBuffer[index2+5] = -n[1];\n                    normalBuffer[index2+6] = -n[2];\n                    normalBuffer[index2+7] = lineWidth;\n    \n                    vertexBuffer[index+8] = p2[0];\n                    vertexBuffer[index+9] = p2[1];\n                    vertexBuffer[index+10] = p2[2];\n                    vertexBuffer[index+11] = distance2;\n                    normalBuffer[index2+8] = n[0];\n                    normalBuffer[index2+9] = n[1];\n                    normalBuffer[index2+10] = n[2];\n                    normalBuffer[index2+11] = lineWidth;\n    \n                    //add polygon\n                    vertexBuffer[index+12] = p1[0];\n                    vertexBuffer[index+13] = p1[1];\n                    vertexBuffer[index+14] = p1[2];\n                    vertexBuffer[index+15] = -distance;\n                    normalBuffer[index2+12] = -n[0];\n                    normalBuffer[index2+13] = -n[1];\n                    normalBuffer[index2+14] = -n[2];\n                    normalBuffer[index2+15] = lineWidth;\n    \n                    vertexBuffer[index+16] = p2[0];\n                    vertexBuffer[index+17] = p2[1];\n                    vertexBuffer[index+18] = p2[2];\n                    vertexBuffer[index+19] = -distance2;\n                    normalBuffer[index2+16] = -n[0];\n                    normalBuffer[index2+17] = -n[1];\n                    normalBuffer[index2+18] = -n[2];\n                    normalBuffer[index2+19] = lineWidth;\n    \n                    vertexBuffer[index+20] = p2[0];\n                    vertexBuffer[index+21] = p2[1];\n                    vertexBuffer[index+22] = p2[2];\n                    vertexBuffer[index+23] = distance2;\n                    normalBuffer[index2+20] = n[0];\n                    normalBuffer[index2+21] = n[1];\n                    normalBuffer[index2+22] = n[2];\n                    normalBuffer[index2+23] = lineWidth;\n    \n                    index += 24;\n                    index2 += 24;\n                    \n                } else {\n\n                    //direction vector\n                    v = [p2[0] - p1[0], p2[1] - p1[1], 0];\n        \n                    //get line length\n                    l = Math.sqrt(v[0]*v[0] + v[1]*v[1]);\n                    distance2 += l;\n    \n                    //add polygon\n                    vertexBuffer[index] = p1[0];\n                    vertexBuffer[index+1] = p1[1];\n                    vertexBuffer[index+2] = p1[2];\n                    vertexBuffer[index+3] = distance;\n                    normalBuffer[index2] = p2[0];\n                    normalBuffer[index2+1] = p2[1];\n                    normalBuffer[index2+2] = p2[2];\n                    normalBuffer[index2+3] = lineWidth;\n    \n                    vertexBuffer[index+4] = p1[0];\n                    vertexBuffer[index+5] = p1[1];\n                    vertexBuffer[index+6] = p1[2];\n                    vertexBuffer[index+7] = -distance;\n                    normalBuffer[index2+4] = p2[0];\n                    normalBuffer[index2+5] = p2[1];\n                    normalBuffer[index2+6] = p2[2];\n                    normalBuffer[index2+7] = -lineWidth;\n    \n                    vertexBuffer[index+8] = p2[0];\n                    vertexBuffer[index+9] = p2[1];\n                    vertexBuffer[index+10] = p2[2];\n                    vertexBuffer[index+11] = -distance2;\n                    normalBuffer[index2+8] = p1[0];\n                    normalBuffer[index2+9] = p1[1];\n                    normalBuffer[index2+10] = p1[2];\n                    normalBuffer[index2+11] = lineWidth;\n    \n                    //add polygon\n                    vertexBuffer[index+12] = p1[0];\n                    vertexBuffer[index+13] = p1[1];\n                    vertexBuffer[index+14] = p1[2];\n                    vertexBuffer[index+15] = distance;\n                    normalBuffer[index2+12] = p2[0];\n                    normalBuffer[index2+13] = p2[1];\n                    normalBuffer[index2+14] = p2[2];\n                    normalBuffer[index2+15] = lineWidth;\n    \n                    vertexBuffer[index+16] = p2[0];\n                    vertexBuffer[index+17] = p2[1];\n                    vertexBuffer[index+18] = p2[2];\n                    vertexBuffer[index+19] = -distance2;\n                    normalBuffer[index2+16] = p1[0];\n                    normalBuffer[index2+17] = p1[1];\n                    normalBuffer[index2+18] = p1[2];\n                    normalBuffer[index2+19] = lineWidth;\n    \n                    vertexBuffer[index+20] = p2[0];\n                    vertexBuffer[index+21] = p2[1];\n                    vertexBuffer[index+22] = p2[2];\n                    vertexBuffer[index+23] = distance2;\n                    normalBuffer[index2+20] = p1[0];\n                    normalBuffer[index2+21] = p1[1];\n                    normalBuffer[index2+22] = p1[2];\n                    normalBuffer[index2+23] = -lineWidth;\n    \n                    index += 24;\n                    index2 += 24;\n                }\n            }\n    \n            distance = distance2;\n            p1 = p2; //only for dlines\n        }\n    \n        p1 = [p[0], p[1], p[2]];\n    \n        //add joins\n        for (i = 0, li = points.length; i < li; i++) {\n    \n            if (forceOrigin) {\n                p1 = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n            }\n    \n            if (forceScale != null) {\n                p1 = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n            }\n    \n            center[0] += p1[0];\n            center[1] += p1[1];\n            center[2] += p1[2];\n            \n            if (!skipJoins) {\n                var angleShift = 0;//(joinParams != null) ? joinParams[i] : 0;\n                /*var dx, dy;*/\n\n                if (lineFlat) {\n\n                    if (advancedHit) {\n                        elementIndex = elemetBase + ((i != (li-1)) ? i : (i -1));\n\n                        elementBuffer[index3] = elementIndex;\n                        elementBuffer[index3+1] = elementIndex;\n                        elementBuffer[index3+2] = elementIndex;\n            \n                        //add polygon\n                        elementBuffer[index3+3] = elementIndex;\n                        elementBuffer[index3+4] = elementIndex;\n                        elementBuffer[index3+5] = elementIndex;\n\n                        index3 += 6;\n                    }\n\n                    var lineIndex, lineIndex2;\n\n                    if (!(texturedLine || widthByRatio)) {\n\n                        if (i != (li-1)) {\n                            lineIndex = vertexBase + i * lineVertices;\n                        } else {\n                            lineIndex = vertexBase + (i - 1) * lineVertices;\n                        }\n\n                        if (i > 0) {\n                            lineIndex2 = vertexBase + (i - 1) * lineVertices;\n                        } else {\n                            lineIndex2 = vertexBase + lineIndex;\n                        }\n\n                        if (i == 0) { //start cap\n                            //add polygon\n                            vertexBuffer[index] = p1[0];\n                            vertexBuffer[index+1] = p1[1];\n                            vertexBuffer[index+2] = p1[2];\n\n                            vertexBuffer[index+3] = vertexBuffer[lineIndex];\n                            vertexBuffer[index+4] = vertexBuffer[lineIndex+1];\n                            vertexBuffer[index+5] = vertexBuffer[lineIndex+2];\n\n                            vertexBuffer[index+6] = p1[0] - vstart[0] * lineWidth;\n                            vertexBuffer[index+7] = p1[1] - vstart[1] * lineWidth;\n                            vertexBuffer[index+8] = p1[2] - vstart[2] * lineWidth;\n\n                            //add polygon\n                            vertexBuffer[index+9] = p1[0];\n                            vertexBuffer[index+9+1] = p1[1];\n                            vertexBuffer[index+9+2] = p1[2];\n\n                            vertexBuffer[index+9+3] = vertexBuffer[lineIndex+3];\n                            vertexBuffer[index+9+4] = vertexBuffer[lineIndex+4];\n                            vertexBuffer[index+9+5] = vertexBuffer[lineIndex+5];\n\n                            vertexBuffer[index+9+6] = p1[0] - vstart[0] * lineWidth;\n                            vertexBuffer[index+9+7] = p1[1] - vstart[1] * lineWidth;\n                            vertexBuffer[index+9+8] = p1[2] - vstart[2] * lineWidth;\n                        } else if (i == (li - 1)) {  //end cap\n                            //add polygon\n                            vertexBuffer[index] = p1[0];\n                            vertexBuffer[index+1] = p1[1];\n                            vertexBuffer[index+2] = p1[2];\n\n                            vertexBuffer[index+3] = vertexBuffer[lineIndex+15];\n                            vertexBuffer[index+4] = vertexBuffer[lineIndex+16];\n                            vertexBuffer[index+5] = vertexBuffer[lineIndex+17];\n\n                            vertexBuffer[index+6] = p1[0] + vend[0] * lineWidth;\n                            vertexBuffer[index+7] = p1[1] + vend[1] * lineWidth;\n                            vertexBuffer[index+8] = p1[2] + vend[2] * lineWidth;\n\n                            //add polygon\n                            vertexBuffer[index+9] = p1[0];\n                            vertexBuffer[index+9+1] = p1[1];\n                            vertexBuffer[index+9+2] = p1[2];\n\n                            vertexBuffer[index+9+3] = vertexBuffer[lineIndex+12];\n                            vertexBuffer[index+9+4] = vertexBuffer[lineIndex+13];\n                            vertexBuffer[index+9+5] = vertexBuffer[lineIndex+14];\n\n                            vertexBuffer[index+9+6] = p1[0] + vend[0] * lineWidth;\n                            vertexBuffer[index+9+7] = p1[1] + vend[1] * lineWidth;\n                            vertexBuffer[index+9+8] = p1[2] + vend[2] * lineWidth;\n                        } else {\n                            //add polygon\n                            vertexBuffer[index] = p1[0];\n                            vertexBuffer[index+1] = p1[1];\n                            vertexBuffer[index+2] = p1[2];\n\n                            vertexBuffer[index+3] = vertexBuffer[lineIndex];\n                            vertexBuffer[index+4] = vertexBuffer[lineIndex+1];\n                            vertexBuffer[index+5] = vertexBuffer[lineIndex+2];\n\n                            vertexBuffer[index+6] = vertexBuffer[lineIndex2 + 15];\n                            vertexBuffer[index+7] = vertexBuffer[lineIndex2 + 16];\n                            vertexBuffer[index+8] = vertexBuffer[lineIndex2 + 17];\n\n                            //add polygon\n                            vertexBuffer[index+9] = p1[0];\n                            vertexBuffer[index+9+1] = p1[1];\n                            vertexBuffer[index+9+2] = p1[2];\n\n                            vertexBuffer[index+9+3] = vertexBuffer[lineIndex+3];\n                            vertexBuffer[index+9+4] = vertexBuffer[lineIndex+4];\n                            vertexBuffer[index+9+5] = vertexBuffer[lineIndex+5];\n\n                            vertexBuffer[index+9+6] = vertexBuffer[lineIndex2 + 12];\n                            vertexBuffer[index+9+7] = vertexBuffer[lineIndex2 + 13];\n                            vertexBuffer[index+9+8] = vertexBuffer[lineIndex2 + 14];\n                        }\n\n                        index += 18;\n\n                    } else {\n\n                        if (i != (li-1)) {\n                            distance = vertexBuffer[i * lineVertices + 3];\n                        } else {\n                            distance = vertexBuffer[(i - 1) * lineVertices + 11];\n                        }\n\n                        if (i != (li-1)) {\n                            lineIndex = normalBase + i * lineVertices;\n                        } else {\n                            lineIndex = normalBase + (i - 1) * lineVertices + 8;\n                        }\n\n                        if (i > 0) {\n                            lineIndex2 = normalBase + (i - 1) * lineVertices + 8;\n                        } else {\n                            lineIndex2 = normalBase + lineIndex;\n                        }\n\n                        //add polygon\n                        vertexBuffer[index] = p1[0];\n                        vertexBuffer[index+1] = p1[1];\n                        vertexBuffer[index+2] = p1[2];\n                        vertexBuffer[index+3] = distance;\n\n                        vertexBuffer[index+4] = p1[0];\n                        vertexBuffer[index+5] = p1[1];\n                        vertexBuffer[index+6] = p1[2];\n                        vertexBuffer[index+7] = distance;\n\n                        vertexBuffer[index+8] = p1[0];\n                        vertexBuffer[index+9] = p1[1];\n                        vertexBuffer[index+10] = p1[2];\n                        vertexBuffer[index+11] = distance;\n\n                        //add polygon\n                        vertexBuffer[index+12] = p1[0];\n                        vertexBuffer[index+1+12] = p1[1];\n                        vertexBuffer[index+2+12] = p1[2];\n                        vertexBuffer[index+3+12] = distance;\n\n                        vertexBuffer[index+4+12] = p1[0];\n                        vertexBuffer[index+5+12] = p1[1];\n                        vertexBuffer[index+6+12] = p1[2];\n                        vertexBuffer[index+7+12] = -distance;\n\n                        vertexBuffer[index+8+12] = p1[0];\n                        vertexBuffer[index+9+12] = p1[1];\n                        vertexBuffer[index+10+12] = p1[2];\n                        vertexBuffer[index+11+12] = -distance;\n\n                        if (i == 0) { //start cap\n                            //first polygon\n                            normalBuffer[index2] = 0;\n                            normalBuffer[index2+1] = 0;\n                            normalBuffer[index2+2] = 0;\n                            normalBuffer[index2+3] = -lineWidth;\n            \n                            normalBuffer[index2+4] = normalBuffer[lineIndex];\n                            normalBuffer[index2+5] = normalBuffer[lineIndex+1];\n                            normalBuffer[index2+6] = normalBuffer[lineIndex+2];\n                            normalBuffer[index2+7] = lineWidth;\n            \n                            normalBuffer[index2+8] = -vstart[0];\n                            normalBuffer[index2+9] = -vstart[1];\n                            normalBuffer[index2+10] = -vstart[2];\n                            normalBuffer[index2+11] = -lineWidth;\n\n                            //second polygon\n                            normalBuffer[index2+12] = 0;\n                            normalBuffer[index2+1+12] = 0;\n                            normalBuffer[index2+2+12] = 0;\n                            normalBuffer[index2+3+12] = -lineWidth;\n\n                            normalBuffer[index2+4+12] = -normalBuffer[lineIndex];\n                            normalBuffer[index2+5+12] = -normalBuffer[lineIndex+1];\n                            normalBuffer[index2+6+12] = -normalBuffer[lineIndex+2];\n                            normalBuffer[index2+7+12] = lineWidth;\n            \n                            normalBuffer[index2+8+12] = -vstart[0];\n                            normalBuffer[index2+9+12] = -vstart[1];\n                            normalBuffer[index2+10+12] = -vstart[2];\n                            normalBuffer[index2+11+12] = -lineWidth;\n                        } else if (i == (li - 1)) {  //end cap\n                            //first polygon\n                            normalBuffer[index2] = 0;\n                            normalBuffer[index2+1] = 0;\n                            normalBuffer[index2+2] = 0;\n                            normalBuffer[index2+3] = -lineWidth;\n            \n                            normalBuffer[index2+4] = normalBuffer[lineIndex2];\n                            normalBuffer[index2+5] = normalBuffer[lineIndex2+1];\n                            normalBuffer[index2+6] = normalBuffer[lineIndex2+2];\n                            normalBuffer[index2+7] = lineWidth;\n            \n                            normalBuffer[index2+8] = vend[0];\n                            normalBuffer[index2+9] = vend[1];\n                            normalBuffer[index2+10] = vend[2];\n                            normalBuffer[index2+11] = -lineWidth;\n\n                            //second polygon\n                            normalBuffer[index2+12] = 0;\n                            normalBuffer[index2+1+12] = 0;\n                            normalBuffer[index2+2+12] = 0;\n                            normalBuffer[index2+3+12] = -lineWidth;\n\n                            normalBuffer[index2+4+12] = -normalBuffer[lineIndex2];\n                            normalBuffer[index2+5+12] = -normalBuffer[lineIndex2+1];\n                            normalBuffer[index2+6+12] = -normalBuffer[lineIndex2+2];\n                            normalBuffer[index2+7+12] = lineWidth;\n            \n                            normalBuffer[index2+8+12] = vend[0];\n                            normalBuffer[index2+9+12] = vend[1];\n                            normalBuffer[index2+10+12] = vend[2];\n                            normalBuffer[index2+11+12] = -lineWidth;\n                        } else {\n                            normalBuffer[index2] = 0;\n                            normalBuffer[index2+1] = 0;\n                            normalBuffer[index2+2] = 0;\n                            normalBuffer[index2+3] = -lineWidth;\n            \n                            normalBuffer[index2+4] = normalBuffer[lineIndex];\n                            normalBuffer[index2+5] = normalBuffer[lineIndex+1];\n                            normalBuffer[index2+6] = normalBuffer[lineIndex+2];\n                            normalBuffer[index2+7] = lineWidth;\n            \n                            normalBuffer[index2+8] = normalBuffer[lineIndex2];\n                            normalBuffer[index2+9] = normalBuffer[lineIndex2+1];\n                            normalBuffer[index2+10] = normalBuffer[lineIndex2+2];\n                            normalBuffer[index2+11] = lineWidth;\n\n                            //add polygon\n                            normalBuffer[index2+12] = 0;\n                            normalBuffer[index2+1+12] = 0;\n                            normalBuffer[index2+2+12] = 0;\n                            normalBuffer[index2+3+12] = -lineWidth;\n\n                            normalBuffer[index2+4+12] = -normalBuffer[lineIndex];\n                            normalBuffer[index2+5+12] = -normalBuffer[lineIndex+1];\n                            normalBuffer[index2+6+12] = -normalBuffer[lineIndex+2];\n                            normalBuffer[index2+7+12] = lineWidth;\n            \n                            normalBuffer[index2+8+12] = -normalBuffer[lineIndex2];\n                            normalBuffer[index2+9+12] = -normalBuffer[lineIndex2+1];\n                            normalBuffer[index2+10+12] = -normalBuffer[lineIndex2+2];\n                            normalBuffer[index2+11+12] = lineWidth;\n                        }\n\n                        index += 24;\n                        index2 += 24;\n\n                    }\n\n                } else {\n\n                    var segmentIndex = (i != (li-1)) ? i : (i - 1);\n\n                    for (var j = 0; j < circleSides; j++) {\n           \n                        if (advancedHit) {\n                            elementIndex = elemetBase + segmentIndex;\n                            elementBuffer[index3] = elementIndex;\n                            elementBuffer[index3+1] = elementIndex;\n                            elementBuffer[index3+2] = elementIndex;\n                            index3 += 3;\n                        }\n\n                        distance = vertexBuffer[segmentIndex * lineVertices + 3];\n        \n                        //add polygon\n                        vertexBuffer[index] = p1[0];\n                        vertexBuffer[index+1] = p1[1];\n                        vertexBuffer[index+2] = p1[2];\n                        vertexBuffer[index+3] = distance;\n                        normalBuffer[index2] = 0;\n                        normalBuffer[index2+1] = 0;\n                        normalBuffer[index2+2] = 0;\n                        normalBuffer[index2+3] = 0;\n        \n                        vertexBuffer[index+4] = p1[0];\n                        vertexBuffer[index+5] = p1[1];\n                        vertexBuffer[index+6] = p1[2];\n                        vertexBuffer[index+7] = distance;\n                        normalBuffer[index2+4] = circleBuffer[j][0] * lineWidth;\n                        normalBuffer[index2+5] = circleBuffer[j][1] * lineWidth;\n                        normalBuffer[index2+6] = circleBuffer2[j] + angleShift;\n                        normalBuffer[index2+7] = 0;\n        \n                        vertexBuffer[index+8] = p1[0];\n                        vertexBuffer[index+9] = p1[1];\n                        vertexBuffer[index+10] = p1[2];\n                        vertexBuffer[index+11] = distance;\n                        normalBuffer[index2+8] = circleBuffer[j+1][0] * lineWidth;\n                        normalBuffer[index2+9] = circleBuffer[j+1][1] * lineWidth;\n                        normalBuffer[index2+10] = circleBuffer2[j+1] + angleShift;\n                        normalBuffer[index2+11] = 0;\n        \n                        index += 12;\n                        index2 += 12;\n                    }\n                }\n            }\n    \n            if (lineLabel) {\n                p = [p1[0], p1[1], p1[2] + lineLabelSize*0.1];\n                lineLabelPoints[i] = p;\n                lineLabelPoints2[li - i - 1] = p;\n            }\n    \n            if ((i + 1) < li) {\n                p1 = points[i+1];\n            }\n        }\n\n        elemetBase += points.length;\n    }\n\n    if (totalPoints > 0) {\n        center[0] /= totalPoints;\n        center[1] /= totalPoints;\n        center[2] /= totalPoints;\n    }\n\n    center[0] += globals.groupOrigin[0];\n    center[1] += globals.groupOrigin[1];\n    center[2] += globals.groupOrigin[2];\n\n    var hitable = hoverEvent || clickEvent || enterEvent || leaveEvent, type;\n\n    if (line) {\n        //console.log('totalPoints:' + totalPoints + ' vbuff-l:' + (vertexBuffer ? vertexBuffer.length : '??'));\n\n        var messageData = {\n            'color':lineColor, 'z-index':zIndex, 'center': center, 'advancedHit': advancedHit, 'totalPoints': totalPoints,\n            'hover-event':hoverEvent, 'click-event':clickEvent, 'draw-event':drawEvent, 'width-units': lineWidthUnits,\n            'hitable':hitable, 'state':globals.hitState, 'eventInfo': (globals.alwaysEventInfo || hitable || drawEvent) ? eventInfo : {},\n            'enter-event':enterEvent, 'leave-event':leaveEvent, 'zbuffer-offset':zbufferOffset, \n            'line-width':lineWidth*2, 'lod':(globals.autoLod ? null : globals.tileLod) };\n    \n        if (lineFlat) {\n            type = texturedLine ? VTS_WORKER_TYPE_FLAT_TLINE : (widthByRatio ? VTS_WORKER_TYPE_FLAT_RLINE : VTS_WORKER_TYPE_FLAT_LINE);\n        } else {\n            type = texturedLine ? VTS_WORKER_TYPE_PIXEL_TLINE : VTS_WORKER_TYPE_PIXEL_LINE;\n        }\n    \n        if (texturedLine) {\n            if (lineStyleTexture != null) {\n                messageData['texture'] = [globals.stylesheetBitmaps[lineStyleTexture[0]], lineStyleTexture[1], lineStyleTexture[2]];\n                messageData['background'] = lineStyleBackground;\n            }\n        }\n\n        var signature = JSON.stringify({\n            type: 'T'+type,\n            color : lineColor,\n            zIndex : zIndex,\n            zOffset : zbufferOffset,\n            state : globals.hitState\n        });\n\n        var buffers = (normalBuffer) ? [vertexBuffer, normalBuffer] : [vertexBuffer];\n\n        if (advancedHit) {\n            buffers.push(elementBuffer);\n        }\n        \n        postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, type, messageData, buffers, signature);\n    }\n\n    if (lineLabel) {\n        for (i = 0, li = lineLabelStack.length; i < li; i++) {\n            processLineLabel(lineLabelStack[i].points, lineLabelStack[i].points2, lineString, center, lod, style, featureIndex, zIndex, eventInfo);\n        }\n    }\n\n};\n\nvar processLineLabel = function(lineLabelPoints, lineLabelPoints2, lineString, center, lod, style, featureIndex, zIndex, eventInfo) {\n    var labelType = getLayerPropertyValue(style, 'line-label-type', lineString, lod);\n    var labelColor = getLayerPropertyValue(style, 'line-label-color', lineString, lod);\n    var labelColor2 = getLayerPropertyValue(style, 'line-label-color2', lineString, lod);\n    var labelOutline = getLayerPropertyValue(style, 'line-label-outline', lineString, lod);\n    var labelSource = getLayerPropertyValue(style, 'line-label-source', lineString, lod);\n    var labelSize = getLayerPropertyValue(style, 'line-label-size', lineString, lod);\n    var labelSpacing = getLayerPropertyValue(style, 'line-label-spacing', lineString, lod);\n    var labelLineHeight = getLayerPropertyValue(style, 'line-label-line-height', lineString, lod);\n    var labelOffset = getLayerPropertyValue(style, 'line-label-offset', lineString, lod);\n    var labelReduce =  getLayerPropertyValue(style, 'dynamic-reduce', lineString, lod);\n    var labelOverlap = getLayerPropertyValue(style, 'line-label-no-overlap', lineString, lod);\n    var labelOverlapFactor = getLayerPropertyValue(style, 'line-label-no-overlap-factor', lineString, lod);\n    var labelOverlapMargin = getLayerPropertyValue(style, 'line-label-no-overlap-margin', lineString, lod);\n\n    if (Math.abs(labelSize) < 0.0001) {\n        return;\n    }\n\n    var labelText = getLayerExpresionValue(style, labelSource, lineString, lod, labelSource);\n    labelText = labelText ? labelText.replace('\\r\\n', '\\n').replace('\\r', '\\n') : '';\n    var fontNames = getLayerPropertyValue(style, 'line-label-font', lineString, lod);\n    var fonts = getFonts(fontNames);\n    var fontsStorage = getFontsStorage(fontNames);\n    var glyphsRes = getTextGlyphs(labelText, fonts);\n\n    if (labelSource == '$name') {\n        if (!areTextCharactersAvailable(labelText, fonts, glyphsRes)) {\n            var labelText2 = getLayerExpresionValue(style, '$name:en', lineString, lod, labelSource);\n            labelText2 = labelText2 ? labelText2.replace('\\r\\n', '\\n').replace('\\r', '\\n') : '';\n            var glyphsRes2 = getTextGlyphs(labelText, fonts);\n            \n            if (areTextCharactersAvailable(labelText2, fonts, glyphsRes2)) {\n                labelText = labelText2;                     \n                glyphsRes = glyphsRes2;\n            }\n        }\n    }\n\n    if (!labelText || labelText == '') {\n        return;\n    }\n\n    var hoverEvent = getLayerPropertyValue(style, 'hover-event', lineString, lod);\n    var clickEvent = getLayerPropertyValue(style, 'click-event', lineString, lod);\n    var drawEvent = getLayerPropertyValue(style, 'draw-event', lineString, lod);\n    var enterEvent = getLayerPropertyValue(style, 'enter-event', lineString, lod);\n    var leaveEvent = getLayerPropertyValue(style, 'leave-event', lineString, lod);\n    var advancedHit = getLayerPropertyValue(style, 'advanced-hit', lineString, lod);\n\n    var zbufferOffset = getLayerPropertyValue(style, 'zbuffer-offset', lineString, lod);\n\n    var bufferSize, vertexBuffer, texcoordsBuffer, singleBuffer, singleBuffer2;\n\n    globals.useLineLabel2 = (labelType != 'flat');\n\n    if (globals.useLineLabel2) {\n        bufferSize = 12 * labelText.length;\n        singleBuffer = new Float32Array(bufferSize);\n        singleBuffer2 = new Float32Array(bufferSize);\n    } else {\n        bufferSize = getCharVerticesCount() * labelText.length * 2;\n        vertexBuffer = new Float32Array(bufferSize);\n        texcoordsBuffer = new Float32Array(bufferSize);\n    }\n\n    var planes = {};\n    var hitable = hoverEvent || clickEvent || enterEvent || leaveEvent;\n    var originalLabelSize = labelSize;\n\n    globals.lineLabelPass = 0;\n    globals.lineLabelPoints = [];\n    var index = addStreetTextOnPath(lineLabelPoints, labelText, labelSize, labelSpacing, fonts, labelOffset, vertexBuffer, texcoordsBuffer, 0, planes, glyphsRes, singleBuffer);\n    var labelPoints = globals.lineLabelPoints;\n\n    globals.lineLabelPoints = [];\n    index = addStreetTextOnPath(lineLabelPoints2, labelText, labelSize, labelSpacing, fonts, labelOffset, vertexBuffer, texcoordsBuffer, globals.useLineLabel2 ? 0 : index, null, glyphsRes, singleBuffer2);\n    var labelPoints2 = globals.lineLabelPoints;\n\n    if (!index) {\n\n        //label is bigger than path\n        if (globals.useLineLabel2) {\n\n            while(true) {\n\n                //reduce size until is label smaler than path\n                labelSize *= 0.5;\n\n                globals.lineLabelPass = 0;\n                globals.lineLabelPoints = [];\n                var index = addStreetTextOnPath(lineLabelPoints, labelText, labelSize, labelSpacing, fonts, labelOffset, vertexBuffer, texcoordsBuffer, 0, planes, glyphsRes, singleBuffer);\n                var labelPoints = globals.lineLabelPoints;\n\n                globals.lineLabelPoints = [];\n                index = addStreetTextOnPath(lineLabelPoints2, labelText, labelSize, labelSpacing, fonts, labelOffset, vertexBuffer, texcoordsBuffer, globals.useLineLabel2 ? 0 : index, null, glyphsRes, singleBuffer2);\n                var labelPoints2 = globals.lineLabelPoints;\n\n                if (index || labelSize < 0.05) {\n                    break;\n                }\n            }\n        }\n\n        if (!index) {\n            return;\n        }\n    }\n\n    var visibility = getLayerPropertyValue(style, 'visibility-rel', lineString, lod) || \n                     getLayerPropertyValue(style, 'visibility-abs', lineString, lod) ||\n                     getLayerPropertyValue(style, 'visibility', lineString, lod);\n    var culling = getLayerPropertyValue(style, 'culling', lineString, lod);\n    var hysteresis = getLayerPropertyValue(style, 'hysteresis', lineString, lod);\n\n\n    var bboxMin = globals.bboxMin, p, i, li, labelsPack = [], labelIndex = 0;\n    var originalLabelOffset = labelOffset;\n\n    if (globals.useLineLabel2) {\n        for (i = 0, li = labelPoints.length; i < li; i++) {\n            p = labelPoints[i];\n            p[0] += bboxMin[0];\n            p[1] += bboxMin[1];\n            p[2] += bboxMin[2];\n            p = labelPoints2[i];\n            p[0] += bboxMin[0];\n            p[1] += bboxMin[1];\n            p[2] += bboxMin[2];\n        }\n\n        labelsPack.push([labelSize, globals.textVector, labelPoints, labelPoints2]);\n        globals.lineLabelPass = 1;\n\n        //bigger labels\n        while(true) {\n\n            labelSize *= 2;\n\n            globals.lineLabelPoints = [];\n            index = addStreetTextOnPath(lineLabelPoints, labelText, labelSize, labelSpacing, fonts, labelOffset, vertexBuffer, texcoordsBuffer, 0, planes, glyphsRes, singleBuffer);\n            labelPoints = globals.lineLabelPoints;\n\n            if (!index) {\n                break;\n            }\n\n            globals.lineLabelPoints = [];\n            index = addStreetTextOnPath(lineLabelPoints2, labelText, labelSize, labelSpacing, fonts, labelOffset, vertexBuffer, texcoordsBuffer, globals.useLineLabel2 ? 0 : index, null, glyphsRes, singleBuffer2);\n            labelPoints2 = globals.lineLabelPoints;\n\n            for (i = 0, li = labelPoints.length; i < li; i++) {\n                p = labelPoints[i];\n                p[0] += bboxMin[0];\n                p[1] += bboxMin[1];\n                p[2] += bboxMin[2];\n                p = labelPoints2[i];\n                p[0] += bboxMin[0];\n                p[1] += bboxMin[1];\n                p[2] += bboxMin[2];\n            }\n\n            labelsPack.push([labelSize, globals.textVector, labelPoints, labelPoints2]);\n        }\n\n        labelSize = originalLabelSize;\n\n        //smaller labels\n        while(true) {\n\n            labelSize *= 0.5;\n\n            globals.lineLabelPoints = [];\n            index = addStreetTextOnPath(lineLabelPoints, labelText, labelSize, labelSpacing, fonts, labelOffset, vertexBuffer, texcoordsBuffer, 0, planes, glyphsRes, singleBuffer);\n            labelPoints = globals.lineLabelPoints;\n\n            if (globals.textLength < 2) {\n                break;\n            }\n\n            globals.lineLabelPoints = [];\n            index = addStreetTextOnPath(lineLabelPoints2, labelText, labelSize, labelSpacing, fonts, labelOffset, vertexBuffer, texcoordsBuffer, 0, null, glyphsRes, singleBuffer2);\n            labelPoints2 = globals.lineLabelPoints;\n\n            for (i = 0, li = labelPoints.length; i < li; i++) {\n                p = labelPoints[i];\n                p[0] += bboxMin[0];\n                p[1] += bboxMin[1];\n                p[2] += bboxMin[2];\n                p = labelPoints2[i];\n                p[0] += bboxMin[0];\n                p[1] += bboxMin[1];\n                p[2] += bboxMin[2];\n            }\n\n            labelsPack.unshift([labelSize, globals.textVector, labelPoints, labelPoints2]);\n            labelIndex++;\n        }\n\n        center = globals.textCenter;\n        center[0] += bboxMin[0];\n        center[1] += bboxMin[1];\n        center[2] += bboxMin[2];\n    }\n    \n\n    //var fonts = labelData.fonts;\n    var labelFiles = new Array(fonts.length);\n\n    for (i = 0, li= fonts.length; i < li; i++) {\n        labelFiles[i] = [];\n    }\n\n    for (var key in planes) {\n        var fontIndex = parseInt(key);\n        var planes2 = planes[key];\n\n        var files = [];\n\n        for (var key2 in planes2) {\n            var plane = parseInt(key2) - (fontIndex*4000);\n            var file = Math.round((plane - (plane % 4)) / 4);\n\n            if (files.indexOf(file) == -1) {\n                files.push(file);\n            }\n        }\n\n        labelFiles[fontIndex] = files;\n    }\n\n    var signature = JSON.stringify({\n        type: 'line-label',\n        color : labelColor,\n        color2 : labelColor2,\n        outline : labelOutline,\n        fonts : fontNames,\n        zIndex : zIndex,\n        zOffset : zbufferOffset\n    });\n\n\n    if (labelOverlap) {\n        var factorType = null, factorValue = null;\n\n        if (labelOverlapFactor !== null) {\n            switch(labelOverlapFactor[0]) {\n                case 'direct':      factorType = VTS_NO_OVERLAP_DIRECT;      break;\n                case 'div-by-dist': factorType = VTS_NO_OVERLAP_DIV_BY_DIST; break;\n            }\n\n            factorValue = labelOverlapFactor[1];\n        }\n\n        var noOverlap = [labelOverlapMargin, factorType, factorValue];\n    }\n\n    postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, globals.useLineLabel2 ? VTS_WORKER_TYPE_LINE_LABEL2 : VTS_WORKER_TYPE_LINE_LABEL, {\n        'color':labelColor, 'color2':labelColor2, 'outline':labelOutline, 'textVector':globals.textVector, 'labelPoints': globals.useLineLabel2 ? labelsPack : [],\n        'visibility': visibility, 'culling': culling, 'hysteresis' : hysteresis, 'z-index':zIndex,\n        'center': center, 'hover-event':hoverEvent, 'click-event':clickEvent, 'draw-event':drawEvent,\n        'reduce':labelReduce, 'noOverlap': (labelOverlap ? noOverlap : null), 'files': labelFiles, 'enter-event':enterEvent,\n        'leave-event':leaveEvent, 'zbuffer-offset':zbufferOffset, 'advancedHit': advancedHit, 'labelIndex': labelIndex, 'labelSize': originalLabelSize,\n        'fonts': fontsStorage, 'hitable':hitable, 'state':globals.hitState, 'eventInfo': (globals.alwaysEventInfo || hitable || drawEvent) ? eventInfo : {},\n        'lod':(globals.autoLod ? null : globals.tileLod) }, globals.useLineLabel2 ? [singleBuffer, singleBuffer2] : [vertexBuffer, texcoordsBuffer], signature);\n};\n\n\nvar processLineStringGeometry = function(lineString) {\n\n    checkDPoints(lineString);\n\n    var lines = lineString['lines'];\n\n    if (lines || lines.length == 0) {\n        return;\n    }\n\n    //debugger\n    var totalPoints = 0;\n    var indicesBuffer = new Uint32Array(lines.length);\n\n    for (i = 0; i < lines.length; i++) {\n        indicesBuffer[i] = totalPoints;\n\n        if (Array.isArray(lines[i])) {\n            totalPoints += lines[i].length;\n        }\n    }\n\n    var geometryBuffer = new Float64Array(totalPoints * 3);\n\n    /*var forceOrigin = globals.forceOrigin;\n    var tileX = globals.tileX;\n    var tileY = globals.tileY;*/\n    var forceScale = globals.forceScale;\n    var index = 0, p1, p2, pp, p;\n\n    for (var i = 0; i < lines.length; i++) {\n        if (!Array.isArray(lines[i]) || !lines[i].length) {\n            continue;\n        }\n        \n        var points = lines[i];\n   \n        p = points[0];\n        p1 = [p[0], p[1], p[2]];\n    \n        //add lines\n        for (var j = 0, lj = points.length; j < lj; j++) {\n\n            /*if (forceOrigin) {\n                pp = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n            }*/\n    \n            if (forceScale != null) {\n                pp = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n            }\n\n            geometryBuffer[index] = pp[0];\n            geometryBuffer[index+1] = pp[1];\n            geometryBuffer[index+2] = pp[2];\n            index += 3;\n\n            if (j == (lj - 1)) {\n                break;\n            }\n    \n            p1 = points[j+1];\n        }\n    }\n\n    globals.signatureCounter++;\n\n    postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_LINE_GEOMETRY, {\n        'id':lineString['id'] }, [geometryBuffer, indicesBuffer], (\"\"+globals.signatureCounter));\n};\n\n\nexport {processLineStringPass, processLineLabel, processLineStringGeometry};\n\n","\nimport {globals as globals_, vec3Normalize as vec3Normalize_} from './worker-globals.js';\nimport {getLayerPropertyValue as getLayerPropertyValue_} from './worker-style.js';\nimport {postGroupMessageFast as postGroupMessageFast_} from './worker-message.js';\nimport {processLineStringPass as processLineStringPass_} from './worker-linestring.js';\nimport {processPointArrayPass as processPointArrayPass_} from './worker-pointarray.js';\n\n//get rid of compiler mess\nvar globals = globals_, vec3Normalize = vec3Normalize_;\nvar getLayerPropertyValue = getLayerPropertyValue_;\nvar postGroupMessageFast = postGroupMessageFast_;\nvar processLineStringPass = processLineStringPass_;\nvar processPointArrayPass = processPointArrayPass_;\n\nvar processPolygonPass = function(polygon, lod, style, featureIndex, zIndex, eventInfo) {\n    var vertices = polygon['vertices'] || [];\n    if (vertices.length == 0) {\n        return;\n    }\n    \n    // borders as points\n    if (getLayerPropertyValue(style, 'point', polygon, lod) ||\n        getLayerPropertyValue(style, 'label', polygon, lod)) {\n        processPolygonLines(polygon, vertices, lod, style, featureIndex, zIndex, eventInfo, false);\n    }\n    \n    // borders as lines\n    if (getLayerPropertyValue(style, 'line', polygon, lod) ||\n        getLayerPropertyValue(style, 'line-label', polygon, lod)) {\n        processPolygonLines(polygon, vertices, lod, style, featureIndex, zIndex, eventInfo, true);\n    }\n    \n    var spolygon = getLayerPropertyValue(style, 'polygon', polygon, lod);\n    \n    if (!spolygon) {\n        return;\n    }\n    \n    var surface = polygon['surface'] || [];\n    if (surface.length == 0) {\n        return;\n    }\n    \n    var hoverEvent = getLayerPropertyValue(style, 'hover-event', polygon, lod);\n    var clickEvent = getLayerPropertyValue(style, 'click-event', polygon, lod);\n    var drawEvent = getLayerPropertyValue(style, 'draw-event', polygon, lod);\n    var enterEvent = getLayerPropertyValue(style, 'enter-event', polygon, lod);\n    var leaveEvent = getLayerPropertyValue(style, 'leave-event', polygon, lod);\n    var advancedHit = getLayerPropertyValue(style, 'advanced-hit', polygon, lod);\n\n    var zbufferOffset = getLayerPropertyValue(style, 'zbuffer-offset', polygon, lod);\n    \n    var polygonColor = getLayerPropertyValue(style, 'polygon-color', polygon, lod);\n    var polygonStyle = getLayerPropertyValue(style, 'polygon-style', polygon, lod);\n    var polygonStencil = getLayerPropertyValue(style, 'polygon-use-stencil', polygon, lod);\n    var polygonCulling = getLayerPropertyValue(style, 'polygon-culling', polygon, lod);\n    var polygonExtrude = getLayerPropertyValue(style, 'polygon-extrude', polygon, lod);\n    \n    polygonStyle = (polygonStyle == 'flatshade') ? 1 : 0;\n    polygonCulling = (polygonCulling == 'back') ? 1 : 0;\n\n    var geocent = globals.geocent;\n    var center = [0,0,0], n = [0,0,0];\n    var bboxMin = globals.bboxMin;\n  \n\n    // allocate vertex buffer\n    var trisCount = surface.length / 3;\n    var vertexCount = trisCount * 3;\n    var vertexBuffer = new Float32Array(vertexCount * 3);\n    \n    var surfaceI = 0;\n    var index = 0;\n    var p1 = [0,0,0], p2 = [0,0,0], p3 = [0,0,0], p4 = [0,0,0];\n    var offs, li, j, lj;\n\n    var tileX = globals.tileX;\n    var tileY = globals.tileY;\n    var forceOrigin = globals.forceOrigin;\n    var forceScale = globals.forceScale;    \n\n    //debugger\n    \n    //console.log(\"vertexCount = \" + vertexCount);\n    //add tris\n    for (var i = 0; i < vertexCount; i++) {\n        offs = 3 * surface[surfaceI++];\n        p1 = [vertices[offs], vertices[offs+1], vertices[offs+2]];\n\n        if (forceOrigin) {\n            p1 = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n        }\n\n        if (forceScale != null) {\n            p1 = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n        }\n \n        if (polygonExtrude) {\n            if (geocent) {\n                vec3Normalize([p1[0] + bboxMin[0], p1[1] + bboxMin[1], p1[2] + bboxMin[2]], n);\n                p1[0] += n[0] * polygonExtrude;\n                p1[1] += n[1] * polygonExtrude;\n                p1[2] += n[2] * polygonExtrude;\n            } else {\n                p1[2] += polygonExtrude;\n            }\n        }\n\n        center[0] += p1[0];\n        center[1] += p1[1];\n        center[2] += p1[2];\n\n        //add vertex\n        vertexBuffer[index++] = p1[0];\n        vertexBuffer[index++] = p1[1];\n        vertexBuffer[index++] = p1[2];\n    }\n    \n    //console.log( \"vertexBuffer: \" + vertexBuffer );\n    \n    if (vertexCount > 0) {\n        var k = 1.0 / vertexCount;\n        center[0] *= k;\n        center[1] *= k;\n        center[2] *= k;\n    }\n\n    center[0] += globals.groupOrigin[0];\n    center[1] += globals.groupOrigin[1];\n    center[2] += globals.groupOrigin[2];\n\n    var borders = polygon['borders'] || [];\n    if (borders.length > 0) {\n\n        var totalFaces = 0;\n\n        for (i = 0, li = borders.length; i < li; i++) {\n            var border = borders[i];\n            totalFaces += (border.length + 1) * 2;\n        }\n\n        var vertexBuffer2 = vertexBuffer;\n        vertexBuffer = new Float32Array(vertexBuffer.length + (totalFaces * 3 * 3));\n        vertexBuffer.set(vertexBuffer2);\n\n        for (i = 0, li = borders.length; i < li; i++) {\n            var border = borders[i], offset;\n\n            for (j = 0, lj = border.length; j < lj; j++) {\n\n                if (border[j] >= 0) {\n                    offset = 3 * border[j];\n                } else {\n                    offset = 3 * (-border[j]);\n                }\n\n                p1[0] = vertices[offset];\n                p1[1] = vertices[offset+1];\n                p1[2] = vertices[offset+2];\n\n                p3[0] = vertices[offset];\n                p3[1] = vertices[offset+1];\n                p3[2] = vertices[offset+2];\n\n                if (j < lj - 1) {\n                    if (border[j+1] >= 0) {\n                        offset = 3 * border[j+1];\n                    } else {\n                        offset = 3 * (-border[j+1]);\n                    }\n                } else {\n                    if (border[0] >= 0) {\n                        offset = 3 * border[0];\n                    } else {\n                        offset = 3 * (-border[0]);\n                    }\n                }\n\n                p2[0] = vertices[offset];\n                p2[1] = vertices[offset+1];\n                p2[2] = vertices[offset+2];\n\n                p4[0] = vertices[offset];\n                p4[1] = vertices[offset+1];\n                p4[2] = vertices[offset+2];\n\n                if (forceOrigin) {\n                    p1 = [p1[0] - tileX, p1[1] - tileY, p1[2]];\n                    p2 = [p2[0] - tileX, p2[1] - tileY, p2[2]];\n                    p3 = [p3[0] - tileX, p3[1] - tileY, p3[2]];\n                    p4 = [p4[0] - tileX, p4[1] - tileY, p4[2]];\n                }\n\n                if (forceScale != null) {\n                    p1 = [p1[0] * forceScale[0], p1[1] * forceScale[1], p1[2] * forceScale[2]];\n                    p2 = [p2[0] * forceScale[0], p2[1] * forceScale[1], p2[2] * forceScale[2]];\n                    p3 = [p3[0] * forceScale[0], p3[1] * forceScale[1], p3[2] * forceScale[2]];\n                    p4 = [p4[0] * forceScale[0], p4[1] * forceScale[1], p4[2] * forceScale[2]];\n                }\n\n                if (polygonExtrude) {\n                    if (geocent) {\n                        vec3Normalize([p1[0] + bboxMin[0], p1[1] + bboxMin[1], p1[2] + bboxMin[2]], n);\n                        p1 = [p1[0] + n[0] * polygonExtrude, p1[1] + n[1] * polygonExtrude, p1[2] + n[2] * polygonExtrude];\n\n                        vec3Normalize([p2[0] + bboxMin[0], p2[1] + bboxMin[1], p2[2] + bboxMin[2]], n);\n                        p2 = [p2[0] + n[0] * polygonExtrude, p2[1] + n[1] * polygonExtrude, p2[2] + n[2] * polygonExtrude];\n                    } else {\n                        p1[2] += polygonExtrude;\n                        p2[2] += polygonExtrude;\n                    }\n                }\n\n                vertexBuffer[index] = p4[0];\n                vertexBuffer[index+1] = p4[1];\n                vertexBuffer[index+2] = p4[2];\n\n                vertexBuffer[index+3] = p2[0];\n                vertexBuffer[index+4] = p2[1];\n                vertexBuffer[index+5] = p2[2];\n\n                vertexBuffer[index+6] = p1[0];\n                vertexBuffer[index+7] = p1[1];\n                vertexBuffer[index+8] = p1[2];\n\n                vertexBuffer[index+9] = p1[0];\n                vertexBuffer[index+10] = p1[1];\n                vertexBuffer[index+11] = p1[2];\n\n                vertexBuffer[index+12] = p3[0];\n                vertexBuffer[index+13] = p3[1];\n                vertexBuffer[index+14] = p3[2];\n\n                vertexBuffer[index+15] = p4[0];\n                vertexBuffer[index+16] = p4[1];\n                vertexBuffer[index+17] = p4[2];\n\n                index += 18;\n            }\n        }\n    }    \n\n    var hitable = hoverEvent || clickEvent || enterEvent || leaveEvent;\n    \n    var signature = JSON.stringify({\n        style: polygonStyle,\n        culling: polygonCulling, \n        stencil: polygonStencil, \n        color : polygonColor,\n        zIndex : zIndex,\n        zOffset : zbufferOffset,\n        state : globals.hitState\n    });\n\n    //debugger\n\n    postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_POLYGON, {\n        'color':polygonColor, 'z-index':zIndex, 'center': center, 'advancedHit': advancedHit, 'culling': polygonCulling, \n        'hover-event':hoverEvent, 'click-event':clickEvent, 'draw-event':drawEvent, 'style' : polygonStyle, 'stencil': polygonStencil, \n        'hitable':hitable, 'state':globals.hitState, 'eventInfo': (globals.alwaysEventInfo || hitable || drawEvent) ? eventInfo : {},\n        'enter-event':enterEvent, 'leave-event':leaveEvent, 'zbuffer-offset':zbufferOffset,\n        'lod':(globals.autoLod ? null : globals.tileLod) }, [vertexBuffer], signature);\n};\n\nvar createEmptyFeatureFromPolygon = function(polygon) {\n    var feature = {};\n    for(var key in polygon) {\n        if(key != 'surface' && key != 'vertices' && key != 'borders') {\n            feature[key] = polygon[key];\n        }\n    }\n    return feature;\n};\n\nvar processPolygonLines = function(polygon, vertices, lod, style, featureIndex, zIndex, eventInfo, processLines) {\n    var borders = polygon['borders'] || [];\n    if (borders.length == 0) {\n        return;\n    }\n    var polygonExtrude = getLayerPropertyValue(style, 'polygon-extrude', polygon, lod);\n    var feature = createEmptyFeatureFromPolygon(polygon);\n    var bordersCount = borders.length;\n    var allPoints = [], allPoints2 = [];\n    var p, p2, n = [0,0,0];\n\n    var tileX = globals.tileX;\n    var tileY = globals.tileY;\n    var forceOrigin = globals.forceOrigin;\n    var forceScale = globals.forceScale;    \n    var forceScale2 = [1.0/forceScale[0], 1.0/forceScale[1], 1.0/forceScale[2]];    \n    var geocent = globals.geocent;\n    var bboxMin = globals.bboxMin;\n\n    for (var j = 0; j < bordersCount; j++) {\n        var border = borders[j], offset;\n        var pointsCount = border.length;\n        var pointsCount2 = 0;\n        if (pointsCount > 0) {\n            var points, points3, points4, i;\n            if (processLines) {\n                points = new Array(pointsCount + 1);\n                points3 = new Array(pointsCount + 1);\n            } else {\n                points = new Array(pointsCount);\n                points3 = new Array(pointsCount);\n            }\n            for (i = 0; i < pointsCount; i++) {\n                if (border[i] >= 0) {\n                    offset = 3 * border[i];\n                    pointsCount2++; // count vertices with positive index\n                } else {\n                    offset = 3 * (-border[i]);\n                }\n\n                if (polygonExtrude) {\n                    p = [vertices[offset], vertices[offset+1], vertices[offset+2]];\n                    p2 = p.slice();\n\n                    if (forceOrigin) {\n                        p2 = [p2[0] - tileX, p2[1] - tileY, p2[2]];\n                    }\n\n                    if (forceScale != null) {\n                        p2 = [p2[0] * forceScale[0], p2[1] * forceScale[1], p2[2] * forceScale[2]];\n                    }\n\n                    if (geocent) {\n                        vec3Normalize([p2[0] + bboxMin[0], p2[1] + bboxMin[1], p2[2] + bboxMin[2]], n);\n                        p2 = [p[0] + (n[0] * polygonExtrude) * forceScale2[0], p[1] + (n[1] * polygonExtrude) * forceScale2[1], p[2] + (n[2] * polygonExtrude) * forceScale2[2]];\n                    } else {\n                        p2[2] += polygonExtrude;\n                    }\n\n                    points[i] = p;\n                    points3[i] = p2;\n\n                    if (border[i] >= 0) {\n                        allPoints.push([p,p2]);\n                    }\n\n                } else {\n                    points[i] = [vertices[offset], vertices[offset+1], vertices[offset+2]];\n                }\n\n                if (processLines && i == 0) {\n                    points[pointsCount] = points[0];\n                    points3[pointsCount] = points3[0];\n                }\n            }\n\n            var points2 = new Array(pointsCount2);\n            var points4 = new Array(pointsCount2);\n            var i2 = 0;\n            //debugger\n\n            //create array of points only for vertices with positive value\n            for (i = 0; i < pointsCount; i++) {\n                if (border[i] >= 0) {\n                    points2[i2] = points[i].slice();\n\n                    if (polygonExtrude) {\n                        points4[i2] = points3[i].slice();\n                    }\n\n                    i2++;\n                }\n            }\n\n            allPoints.push(points);\n            allPoints2 = allPoints2.concat(points2);\n\n            if (polygonExtrude) {\n                allPoints.push(points3);\n                allPoints2 = allPoints2.concat(points4);\n            }\n\n        }\n    }\n\n    if(processLines && allPoints.length > 0) {\n        feature['lines'] = allPoints;\n        processLineStringPass(feature, lod, style, featureIndex, zIndex, eventInfo);\n    } else if(allPoints2.length > 0) {\n        feature['points'] = allPoints2;\n        processPointArrayPass(feature, lod, style, featureIndex, zIndex, eventInfo);\n    }\n\n};\n \nexport {processPolygonPass};\n","\nimport {globals as globals_, unint8ArrayToString as unint8ArrayToString_, Utf8ArrayToStr as Utf8ArrayToStr_} from './worker-globals.js';\nimport {setFont as setFont_, setFontMap as setFontMap_,} from './worker-text.js';\nimport {getLayer as getLayer_, getLayerPropertyValue as getLayerPropertyValue_,\n        processStylesheet as processStylesheet_, getFilterResult as getFilterResult_,\n        getLayerPropertyValueInner as getLayerPropertyValueInner_, makeFasterFilter as makeFasterFilter_} from './worker-style.js';\nimport {processLineStringPass as processLineStringPass_, processLineStringGeometry as processLineStringGeometry_} from './worker-linestring.js';\nimport {processPointArrayPass as processPointArrayPass_, processPointArrayGeometry as processPointArrayGeometry_, processPointArrayVSwitchPass as processPointArrayVSwitchPass_} from './worker-pointarray.js';\nimport {processPolygonPass as processPolygonPass_} from './worker-polygon.js';\nimport {postGroupMessageFast as postGroupMessageFast_,\n        postGroupMessageLite as postGroupMessageLite_, optimizeGroupMessages as optimizeGroupMessages_,\n        postPackedMessage as postPackedMessage_, postPackedMessages as postPackedMessages_} from './worker-message.js';\n\n\n//get rid of compiler mess\nvar globals = globals_;\nvar setFont = setFont_;\nvar unint8ArrayToString = unint8ArrayToString_, Utf8ArrayToStr = Utf8ArrayToStr_;\nvar setFontMap = setFontMap_, makeFasterFilter = makeFasterFilter_;\nvar getLayer = getLayer_, getLayerPropertyValue = getLayerPropertyValue_,\n    processStylesheet = processStylesheet_, getFilterResult = getFilterResult_;\nvar processLineStringPass = processLineStringPass_;\nvar processPointArrayPass = processPointArrayPass_;\nvar processPointArrayVSwitchPass = processPointArrayVSwitchPass_;\nvar processPolygonPass = processPolygonPass_;\nvar processLineStringGeometry = processLineStringGeometry_;\nvar processPointArrayGeometry = processPointArrayGeometry_,\n    postGroupMessageLite = postGroupMessageLite_, optimizeGroupMessages = optimizeGroupMessages_;\nvar postGroupMessageFast = postGroupMessageFast_, postPackedMessage = postPackedMessage_, postPackedMessages = postPackedMessages_;\nvar getLayerPropertyValueInner = getLayerPropertyValueInner_;\n\nvar exportedGeometries = [];\nvar featureCache = new Array(1024), featureCacheIndex = 0, finalFeatureCache = new Array(1024), finalFeatureCacheIndex = 0, finalFeatureCacheIndex2 = 0;\n\nfunction processLayerFeaturePass(type, feature, lod, layer, featureIndex, zIndex, eventInfo) {\n\n    globals.stylesheetLocals = {};\n\n    switch(type) {\n    case 'line-string':\n        if (getLayerPropertyValue(layer, 'point', feature, lod) ||\n            getLayerPropertyValue(layer, 'label', feature, lod)) {\n            processPointArrayPass(feature, lod, layer, featureIndex, zIndex, eventInfo);\n        }\n\n        processLineStringPass(feature, lod, layer, featureIndex, zIndex, eventInfo);\n        break;\n\n    case 'point-array':\n        processPointArrayPass(feature, lod, layer, featureIndex, zIndex, eventInfo);\n        break;\n            \n    case 'polygon':\n        processPolygonPass(feature, lod, layer, featureIndex, zIndex, eventInfo);\n        break;     \n    }\n\n}\n\nfunction processFeatures(type, features, lod, featureType, group) {\n    var reduceParams = globals.reduceParams;\n\n    //loop layers\n    for (var key in globals.stylesheetLayers) {\n        var layer = globals.stylesheetLayers[key];\n\n        if (type == 'point-array') {\n            var importance = layer['importance-source'];\n            //\n\n            if ((typeof importance === 'undefined' || importance === null) && features[0] && features[0]['importance']) {\n                importance = '$importance';\n            }\n\n            if (!(typeof importance === 'undefined' || importance === null)) {\n                //importance = '$importance';\n                switch (globals.reduceMode) {\n                    case 'scr-count1': \n                    case 'scr-count2': \n                        layer['reduce'] = ['top',100,importance];\n                        layer['dynamic-reduce'] = ['scr-count2', reduceParams[0], reduceParams[1]];\n                        break;\n                    case 'scr-count4': \n                        layer['dynamic-reduce'] = ['scr-count4',importance];\n                        break;\n                    case 'scr-count5': \n                        layer['dynamic-reduce'] = ['scr-count5',importance];\n                        break;\n                    case 'scr-count6': \n                    case 'scr-count7': \n                    case 'scr-count8': \n                        var ppi = globals.reduceMode == 'scr-count8' ? reduceParams[6] : reduceParams[5];\n                        layer['dynamic-reduce'] = [globals.reduceMode,importance, (typeof layer['importance-weight'] !== 'undefined') ? layer['importance-weight'] : 1 ];\n                        layer['label-no-overlap-margin'] = [reduceParams[0]*ppi, reduceParams[0]*ppi];\n                        layer['icon-no-overlap-margin'] = [reduceParams[0]*ppi, reduceParams[0]*ppi];\n                        layer['label-no-overlap-factor'] = [\"div-by-dist\",importance];\n                        break;\n                }\n            }\n        }\n\n        var filter =  layer['filter'];\n        var reduce =  layer['reduce'], i, li, j, lj;\n\n        if (filter) {\n            filter = layer['#filter'];\n            if (!filter) {\n                layer['#filter'] = makeFasterFilter(layer['filter']);\n                filter = layer['#filter'];\n            }\n        }\n\n        featureCacheIndex = 0, finalFeatureCacheIndex = 0, finalFeatureCacheIndex2 = 0;\n\n        for (i = 0, li = features.length; i < li; i++) {\n            var feature = features[i];\n            feature.properties = feature['properties'] || {};\n\n            if (feature['id']) {\n                feature.properties['#id'] = feature['id']; \n            }\n            \n            if (!filter || getFilterResult(filter, feature, featureType, group, layer, 'filter', lod, 0, true)) {\n                if (reduce) {\n                    featureCache[featureCacheIndex] = feature;\n                    featureCacheIndex++;\n                } else {\n                    processLayerFeature(type, feature, lod, layer, i);\n                }\n            }\n        }\n\n        if (reduce) {\n\n            var count = reduce[1];\n            var property = reduce[2];\n\n            switch (reduce[0]) {\n                case 'top':\n                case 'bottom':\n\n                    if (typeof property === 'string' && property.charAt(0) == '@') {\n                        property = globals.stylesheetConstants[property];\n\n                        if (typeof property === 'undefined') {\n                            break;\n                        }\n                    }\n\n                    if ((typeof property === 'string' && property.charAt(0) == '$') || (typeof property === 'object')) {\n                        var complexProperty = (typeof property === 'object');\n\n                        if (!complexProperty) {\n                            property = property.substr(1);\n                        }\n\n                        if (count > featureCacheIndex) {\n                            count = featureCacheIndex;\n                        }\n\n                        var top = (reduce[0] == 'top'), value;\n                        var currentIndex = 0;\n                        var currentValue2 = top ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n                        do {\n                            var currentValue = top ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n                            finalFeatureCacheIndex2 = finalFeatureCacheIndex;\n\n                            for (i = 0, li = featureCacheIndex; i < li; i++) {\n                                feature = featureCache[i];\n\n                                if (!currentIndex) {\n                                    if (!complexProperty) {\n                                        value = parseFloat(feature.properties[property]);\n                                    } else {\n                                        value = getLayerPropertyValueInner(layer, null, feature, lod, property, 0);\n                                    }\n                                    feature.tmp = value;\n                                } else {\n                                    value = feature.tmp;\n                                }\n\n                                if (!isNaN(value) && ((top && value >= currentValue && value < currentValue2) || (value <= currentValue && value > currentValue2)) ) {\n                                    if (currentValue != value) {\n                                        finalFeatureCacheIndex = finalFeatureCacheIndex2;\n                                    }\n\n                                    finalFeatureCache[finalFeatureCacheIndex] = feature;\n                                    finalFeatureCacheIndex++;\n                                    currentValue = value;\n                                }\n                            }\n\n                            currentValue2 = currentValue;\n                            currentIndex++;\n\n                        } while(currentIndex < count);\n                    }\n\n                    break;\n\n                case 'odd':\n                case 'even':\n\n                    for (i = (reduce[0] == 'odd') ? 1 : 0, li = featureCacheIndex; i < li; i+=2) {\n                        feature = featureCache[i];\n                        finalFeatureCache[finalFeatureCacheIndex] = feature;\n                        finalFeatureCacheIndex++;\n                    }\n\n                case 'every':\n\n                    if (count > featureCacheIndex) {\n                        count = featureCacheIndex;\n                    }\n\n                    for (i = 0, li = featureCacheIndex; i < li; i += count) {\n                        feature = featureCache[i];\n                        finalFeatureCache[finalFeatureCacheIndex] = feature;\n                        finalFeatureCacheIndex++;\n                    }\n\n                    break;\n            }\n\n            //process reduced features\n            for (i = 0, li = finalFeatureCacheIndex; i < li; i++) {\n                feature = finalFeatureCache[i];\n                processLayerFeature(type, finalFeatureCache[i], lod, layer, i);\n            }\n\n        }\n\n    }\n}\n\n\nfunction processLayerFeatureMultipass(type, feature, lod, layer, featureIndex, eventInfo) {\n    var multiPass = getLayerPropertyValue(layer, 'next-pass', feature, lod);\n\n    var mylayer;\n\n    if (multiPass != null) {\n        for (var i = 0, li = multiPass.length; i < li; i++) {\n            var zIndex = multiPass[i][0];\n            mylayer = getLayer(multiPass[i][1], type, featureIndex);\n            \n            if (!getLayerPropertyValue(mylayer, 'visible', feature, lod)) {\n                continue;\n            }\n\n            var selectedLayerId = getLayerPropertyValue(mylayer, 'selected-layer', feature, lod);\n            var selectedLayer = (selectedLayerId != '') ? getLayer(selectedLayerId, type, featureIndex) : null;\n\n            var selectedHoverLayerId = getLayerPropertyValue(mylayer, 'selected-hover-layer', feature, lod);\n            var selectedHoverLayer = (selectedHoverLayerId != '') ? getLayer(selectedHoverLayerId, type, featureIndex) : null;\n\n            var hoverLayerId = getLayerPropertyValue(mylayer, 'hover-layer', feature, lod);\n            var hoverLayer = (hoverLayerId != '') ? getLayer(hoverLayerId, type, featureIndex) : null;\n\n            var flags =  ((hoverLayer != null) ? (1<<8) : 0) | ((selectedLayer != null) ? (1<<9) : 0) | ((selectedHoverLayer != null) ? (1<<10) : 0);\n\n            var lastHitState = globals.hitState;\n\n            if (selectedLayer != null) {\n                globals.hitState = flags | 2;\n                processLayerFeaturePass(type, feature, lod, selectedLayer, featureIndex, zIndex, eventInfo);\n            }\n\n            if (selectedHoverLayer != null) {\n                globals.hitState = flags | 3;\n                processLayerFeaturePass(type, feature, lod, selectedHoverLayer, featureIndex, zIndex, eventInfo);\n            }\n\n            if (hoverLayer != null) {\n                globals.hitState = flags | 1;\n                processLayerFeaturePass(type, feature, lod, hoverLayer, featureIndex, zIndex, eventInfo);\n            }\n                \n            //globals.hitState = flags | 0;\n            processLayerFeaturePass(type, feature, lod, mylayer, featureIndex, zIndex, eventInfo);\n\n            globals.hitState = lastHitState;\n        }\n    }\n}\n\n\nfunction processLayerFeature(type, feature, lod, layer, featureIndex, skipPack) {\n    if (!getLayerPropertyValue(layer, 'visible', feature, lod)) {\n        return;\n    }\n\n    if (type == 'point-array') {\n        if (layer['visibility-switch']) {\n            postGroupMessageLite(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_VSWITCH_BEGIN);\n            //postGroupMessage({'command':'addRenderJob', 'type':'vswitch-begin'});\n            var zIndex = getLayerPropertyValue(layer, 'z-index', feature, lod);\n            var eventInfo = feature.properties;\n            processPointArrayVSwitchPass(feature, lod, layer, featureIndex, zIndex, eventInfo);\n\n            var vswitch = layer['visibility-switch'];\n            for (var i = 0, li = vswitch.length; i <li; i++) {\n                if (vswitch[i][1]) {\n                    var slayer = getLayer(vswitch[i][1], type, featureIndex);\n                    processLayerFeature(type, feature, lod, slayer, featureIndex);\n                }\n                postGroupMessageLite(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_VSWITCH_STORE, vswitch[i][0]);\n            }\n\n            postGroupMessageLite(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_VSWITCH_END);\n            return;\n        }\n    }\n\n    if (!skipPack && layer['pack'] == true) {\n        globals.directPoints = [];\n\n        postGroupMessageLite(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_PACK_BEGIN);\n        processLayerFeature(type, feature, lod, layer, featureIndex, true);\n        postGroupMessageLite(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_PACK_END);\n\n        if (globals.directPoints)  //????????????????? FIXME\n\n        return;\n    }\n\n    var zIndex = getLayerPropertyValue(layer, 'z-index', feature, lod);\n\n    if (getLayerPropertyValue(layer, 'export-geometry', feature, lod) && (typeof feature['id'] !== 'undefined')) {\n        if (!exportedGeometries[feature]) {\n\n            switch(type) {\n            case 'line-string':\n                processLineStringGeometry(feature);\n                break;\n\n            case 'point-array':\n                processPointArrayGeometry(feature);\n                break;\n                    \n            case 'polygon':\n                break;     \n            }\n\n            exportedGeometries[feature] = true;\n        }\n    }\n\n    var eventInfo = feature.properties;\n\n    var selectedLayerId = getLayerPropertyValue(layer, 'selected-layer', feature, lod);\n    var selectedLayer = (selectedLayerId != '') ? getLayer(selectedLayerId, type, featureIndex) : null;\n\n    var selectedHoverLayerId = getLayerPropertyValue(layer, 'selected-hover-layer', feature, lod);\n    var selectedHoverLayer = (selectedHoverLayerId != '') ? getLayer(selectedHoverLayerId, type, featureIndex) : null;\n\n    var hoverLayerId = getLayerPropertyValue(layer, 'hover-layer', feature, lod);\n    var hoverLayer = (hoverLayerId != '') ? getLayer(hoverLayerId, type, featureIndex) : null;\n\n    var flags =  ((hoverLayer != null) ? (1<<8) : 0) | ((selectedLayer != null) ? (1<<9) : 0) | ((selectedHoverLayer != null) ? (1<<10) : 0);\n\n    if (selectedLayer != null) {\n        globals.hitState = flags | 2;\n        processLayerFeaturePass(type, feature, lod, selectedLayer, featureIndex, zIndex, eventInfo);\n        processLayerFeatureMultipass(type, feature, lod, selectedLayer, featureIndex, eventInfo);\n    }\n\n    if (selectedHoverLayer != null) {\n        globals.hitState = flags | 3;\n        processLayerFeaturePass(type, feature, lod, selectedHoverLayer, featureIndex, zIndex, eventInfo);\n        processLayerFeatureMultipass(type, feature, lod, selectedHoverLayer, featureIndex, eventInfo);\n    }\n\n    if (hoverLayer != null) {\n        globals.hitState = flags | 1;\n        processLayerFeaturePass(type, feature, lod, hoverLayer, featureIndex, zIndex, eventInfo);\n        processLayerFeatureMultipass(type, feature, lod, hoverLayer, featureIndex, eventInfo);\n    }\n\n    globals.hitState = flags | 0;\n    processLayerFeaturePass(type, feature, lod, layer, featureIndex, zIndex, eventInfo);\n    processLayerFeatureMultipass(type, feature, lod, layer, featureIndex, eventInfo);\n}\n\nfunction processGroup(group, lod) {\n    var i, li;\n    var groupId = group['id'] || '';\n    globals.groupId = groupId;\n\n    var bbox = group['bbox'];    \n    if (!bbox) {\n        return;\n    }\n          \n    var bboxMin = bbox[0];\n    var bboxMax = bbox[1];\n    globals.bboxMin = bboxMin;\n    globals.bboxMax = bboxMax;\n\n    var bboxDelta = [bbox[1][0] - bbox[0][0],\n        bbox[1][1] - bbox[0][1],\n        bbox[1][2] - bbox[0][2]];\n    var bboxResolution = group['resolution'] || 4096;\n    \n    globals.groupOrigin = [0,0,0];\n    globals.forceScale = [bboxDelta[0] / bboxResolution,\n        bboxDelta[1] / bboxResolution,\n        bboxDelta[2] / bboxResolution];\n\n    postGroupMessageFast(VTS_WORKERCOMMAND_GROUP_BEGIN, 0, {'id': group['id'], 'bbox': [bboxMin, bboxMax], 'origin': bboxMin}, [], \"\");\n\n    //process points\n    var points = group['points'] || [];\n    globals.featureType = 'point';\n    processFeatures('point-array', points, lod, 'point', groupId);\n\n    //process lines\n    var lines = group['lines'] || [];\n    globals.featureType = 'line';\n    processFeatures('line-string', lines, lod, 'line', groupId);\n\n    //process polygons\n    var polygons = group['polygons'] || [];\n    globals.featureType = 'polygon';\n    processFeatures('polygon', polygons, lod, 'polygon', groupId);\n\n    postGroupMessageLite(VTS_WORKERCOMMAND_GROUP_END, 0);\n\n    if (globals.groupOptimize) {\n        optimizeGroupMessages();\n    }\n}\n\n\nfunction processNode(node, lod) {\n    var i, li;\n\n    //TODO: get volume\n\n    postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_NODE_BEGIN, {'volume': node.volume, 'precision': node.precision, 'tileset': node.tileset }, [], \"\");\n\n    var meshes = node['meshes'] || [];\n\n    //loop elements\n    for (i = 0, li = meshes.length; i < li; i++) {\n\n        var signature = meshes[i];\n\n        postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_MESH, { 'path':meshes[i] }, [], signature);\n    }\n\n    var nodes = node['nodes'] || [];\n\n    for (i = 0, li = nodes.length; i < li; i++) {\n        processNode(nodes[i], lod);\n    }\n\n    postGroupMessageFast(VTS_WORKERCOMMAND_ADD_RENDER_JOB, VTS_WORKER_TYPE_NODE_END, {}, [], \"\");\n}\n\nfunction processGeodata(data, lod) {\n    //console.log(\"processGeodata\");\n\n    //create object from JSON\n    if ((typeof data) == 'string') {\n        try {\n            var geodata = JSON.parse(data);\n        } catch (e) {\n            geodata = null;\n        }\n    } else {\n        geodata = data;\n    }\n\n    if (geodata) {\n\n        var groups = geodata['groups'] || [];\n\n        //process layers\n        for (var i = 0, li = groups.length; i < li; i++) {\n            processGroup(groups[i], lod);\n        }\n\n        var nodes = geodata['nodes'] || [];\n\n        for (var i = 0, li = nodes.length; i < li; i++) {\n            postGroupMessageFast(VTS_WORKERCOMMAND_GROUP_BEGIN, 0, {}, [], \"\");\n            processNode(nodes[i], lod);\n            postGroupMessageLite(VTS_WORKERCOMMAND_GROUP_END, 0);\n        }\n    }\n\n    //console.log(\"processGeodata-ready\");\n}\n\nself.onmessage = function (e) {\n    var message = e.data;\n    var command = message['command'];\n    var data = message['data'];\n    var dataRaw = null;\n    var geodata2 = false;\n\n    //console.log(\"workeronmessage: \" + command);\n\n    switch(command) {\n\n    case 'config':\n        globals.config = data;\n        break;\n\n    case 'setStylesheet':\n        if (data) {\n            globals.geocent = data['geocent'];\n            globals.metricUnits = data['metric'];\n            globals.reduceMode = data['reduceMode'];\n            globals.reduceParams = data['reduceParams'];\n            globals.log = data['log'];\n            globals.language = data['language'];\n            processStylesheet(data['data']);\n        }\n        //postMessage({'command' : 'ready'});\n        break;\n\n    case 'setFont':\n        setFont(data);\n        //postMessage({'command' : 'ready'});\n        break;\n\n    case 'setFontMap':\n        setFontMap(data);\n        postMessage({'command' : 'styleDone'});\n        postMessage({'command' : 'ready'});\n        break;\n\n    case 'processGeodataRaw':\n        dataRaw = data;\n\n        //test geodata2\n        if (data.length > 2) {\n            var dataView = new DataView(data);\n\n            var magic = '';\n            magic += String.fromCharCode(dataView.getUint8(0, true));\n            magic += String.fromCharCode(dataView.getUint8(1, true));\n\n            if (magic != 'GE') {\n                geodata2 = true;\n            }\n        }\n\n        data = Utf8ArrayToStr(data);\n\n    case 'processGeodata':\n        globals.tileLod = message['lod'] || 0;\n        globals.tileIX = message['ix'] || 0;\n        globals.tileIY = message['iy'] || 0;\n        globals.tileSize = message['tileSize'] || 1;\n        globals.pixelSize = message['pixelSize'] || 1;\n        globals.pixelFactor = message['dpr'] || 1;\n        globals.invPixelFactor = 1.0 / globals.pixelFactor;\n        globals.pixelsPerMM = (globals.pixelFactor / 96) / 2.54;\n        globals.invPixelsPerMM = 1.0 / globals.pixelsPerMM;\n        exportedGeometries = [];\n\n        if (geodata2) {\n            processGeodata2(dataView, globals.tileLod);\n        } else {\n            data = JSON.parse(data);            \n            processGeodata(data, globals.tileLod);\n        }\n\n        postGroupMessageLite(VTS_WORKERCOMMAND_ALL_PROCESSED, 0);\n            \n        if (globals.groupOptimize) {  //we need send all processed message\n            optimizeGroupMessages();\n        }\n            \n        //postMessage({'command' : 'allProcessed'});\n\n        if (dataRaw) {\n            postPackedMessage({'command' : 'ready', 'geodata': dataRaw}, [dataRaw]);\n        } else {\n            postPackedMessage({'command' : 'ready'});\n        }\n\n        if (globals.config.mapPackLoaderEvents) {\n            postPackedMessages();\n        }\n\n        break;\n\n    //case 'tick':\n      //  postPackedMessages();\n        //break;\n\n    }\n};\n\n"],"sourceRoot":""}